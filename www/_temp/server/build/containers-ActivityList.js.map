{"version":3,"sources":["webpack:///./assets/containers/ActivityList/TopBannerSwiper/index.js","webpack:///./assets/components/ActivityList/ActivityListItem/index.js","webpack:///./assets/containers/ActivityList/BottomList/index.js","webpack:///./assets/containers/ActivityList/index.js","webpack:///./assets/components/ActivityList/Image/activity-list-item-site.png","webpack:///./assets/components/ActivityList/Image/activity-list-item-time.png","webpack:///./assets/containers/ActivityList/Image/activity-wx.png","webpack:///./assets/containers/ActivityList/Image/activity-a-wx.png","webpack:///./assets/containers/ActivityList/Image/activity-yx.png","webpack:///./assets/containers/ActivityList/Image/activity-page-left.png","webpack:///./assets/containers/ActivityList/Image/activity-page-right.png"],"names":["useSelector","state","activityRecommendListData","activity","shallowEqual","height","inforList","length","delay","disableOnInteraction","el","type","clickable","nextEl","prevEl","rotate","stretch","depth","modifier","slideShadows","map","item","index","coverPic","JSON","parse","title","mixUrl","main","id","pc_recommend","width","props","currentTime","place","startTime","endTime","pic","pc","siteIcon","timeIcon","parseInt","formatTime","getNav","text","timeData","emailAddress","activityPlaceList","activityAllListData","dispatch","useDispatch","useState","nowPlace","setNowPlace","nowTime","setNowTime","nowPageNum","setNowPageNum","getListData","useCallback","params","obj","timeType","recommend","currentPage","pageSize","getActivityList","pageNumList","list","i","push","onBtnChangePageNumClick","onBtnChangePlaceClick","onBtnChangeTime","timeId","num","pageCount","onBtnCopyClick","value","execCommandCopy","Toast","success","info","placeCount","yxIcon","wxIcon","wxActiveIcon","pageLeftIcon","pageRightIcon","SwiperCore","use","Autoplay","EffectCoverflow","Navigation","Pagination"],"mappings":"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","file":"containers-ActivityList.js","sourcesContent":["import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport './index.scss'\n\nimport { mixUrl } from 'multiPublic'\n\nexport default () => {\n    const { activityRecommendListData } = useSelector((state) => ({\n        activityRecommendListData: state.activity.activityRecommendListData\n    }), shallowEqual)\n\n    return (\n        <div className=\"activity-list-top-banner-swiper\" style={{ height: activityRecommendListData.inforList.length === 0 ? '65px' : '390px' }}>\n            {activityRecommendListData.inforList.length > 2\n                ? <div className=\"activity-list-top-banner-swiper-box\">\n                    <Swiper className=\"activity-list-top-banner-swiper-primary\"\n                        loop={true}\n                        grabCursor={true}\n                        centeredSlides={true}\n                        slidesPerView='auto'\n                        preventClicks={false}\n                        autoplay={{ delay: 5000, disableOnInteraction: 'false' }}\n                        pagination={{\n                            el: '.swiper-pagination.activity-p',\n                            type: 'bullets',\n                            clickable: false\n                        }}\n                        navigation={{ nextEl: '.activity-n-x', prevEl: '.activity-p-x' }}\n                        effect='coverflow'\n                        coverflowEffect={{\n                            rotate: 30, // 旋转的角度\n                            stretch: 300, // 拉伸   图片间左右的间距和密集度\n                            depth: 431, // 深度   切换图片间上下的间距和密集度\n                            modifier: 2, // 修正值 该值越大前面的效果越明显\n                            slideShadows: false // 页面阴影效果\n                        }}\n                    >\n                        {\n                            activityRecommendListData && activityRecommendListData.inforList.map((item, index) => {\n                                const coverPic = JSON.parse(item.coverPic)\n                                return (\n                                    <SwiperSlide key={index}>\n                                        <a title={item.title} target=\"_blank\" href={mixUrl.main(`/huodong/${item.id}`)}>\n                                            <img src={coverPic.pc_recommend} alt={item.title} />\n                                        </a>\n                                    </SwiperSlide>\n                                )\n                            })\n                        }\n                        <div className=\"swiper-pagination activity-p\"></div>\n                        <div className=\"swiper-button-next activity-n-x\"></div>\n                        <div className=\"swiper-button-prev activity-p-x\"></div>\n                    </Swiper>\n                </div>\n                : (activityRecommendListData.inforList.length > 0\n                    ? <div className=\"activity-list-top-banner-swiper-box\" style={{ width: '1200px' }}>\n                        <Swiper className=\"activity-list-top-banner-swiper-primary\"\n                            loop={true}\n                            preventClicks={false}\n                            autoplay={{ delay: 5000, disableOnInteraction: 'false' }}\n                            pagination={{\n                                el: '.swiper-pagination.activity-p',\n                                type: 'bullets',\n                                clickable: false\n                            }}\n                            navigation={{ nextEl: '.activity-next', prevEl: '.activity-prev' }}\n                        >\n                            {\n                                activityRecommendListData && activityRecommendListData.inforList.map((item, index) => {\n                                    const coverPic = JSON.parse(item.coverPic)\n                                    return (\n                                        <SwiperSlide key={index}>\n                                            <a title={item.title} target=\"_blank\" href={mixUrl.main(`/huodong/${item.id}`)}>\n                                                <img src={coverPic.pc_recommend} alt={item.title} />\n                                            </a>\n                                        </SwiperSlide>\n                                    )\n                                })\n                            }\n                            <div className=\"swiper-pagination activity-p\"></div>\n                            <div className=\"activity-next\"></div>\n                            <div className=\"activity-prev\"></div>\n                        </Swiper>\n                    </div>\n                    : null)\n            }\n        </div >\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\nimport { formatTime, mixUrl } from 'multiPublic'\n\nimport siteIcon from '../Image/activity-list-item-site.png'\nimport timeIcon from '../Image/activity-list-item-time.png'\n\nexport default (props) => {\n    const {\n        id,\n        currentTime,\n        title,\n        place,\n        startTime,\n        endTime,\n        coverPic\n    } = props\n\n    const pic = coverPic ? JSON.parse(coverPic) : {}\n    return (\n        <a className=\"activity-list-item\" href={mixUrl.main(`/huodong/${id}`)} >\n            <div className={`activity-list-item-state ${currentTime > endTime ? 'over' : ''}`}>\n                {currentTime > endTime ? '已结束' : '报名中'}\n            </div>\n            <img src={pic.pc ? pic.pc : ''} alt={title} title={title} />\n            <p title={title}>\n                {title}\n            </p>\n            <div className=\"activity-list-item-b\">\n                <p className=\"activity-list-item-site\">\n                    <img src={siteIcon} alt=\"\" />\n                    <span>{place}</span>\n                </p>\n                <p className=\"activity-list-item-time\">\n                    <img src={timeIcon} alt=\"\" />\n                    <span>\n                        {parseInt(endTime) - parseInt(startTime) < 86400000\n                            ? formatTime(startTime, 'MM月dd日')\n                            : `${formatTime(startTime, 'MM月dd日')}-${formatTime(endTime, 'MM月dd日')}`\n                        }\n                    </span>\n                </p>\n            </div>\n        </a>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\n\nimport { execCommandCopy } from 'multiPublic'\nimport { getActivityList } from '../../../redux/actions/activity'\nimport ActivityListItem from '../../../components/ActivityList/ActivityListItem'\nimport Toast from 'multiComps/Toast'\nimport wxIcon from '../Image/activity-wx.png'\nimport wxActiveIcon from '../Image/activity-a-wx.png'\nimport yxIcon from '../Image/activity-yx.png'\nimport pageLeftIcon from '../Image/activity-page-left.png'\nimport pageRightIcon from '../Image/activity-page-right.png'\n\n// 举办地址\nconst getNav = (place) => {\n    let text = ''\n    switch (place) {\n        case 'all':\n            text = '全部'\n            break\n        case 'overseas':\n            text = '海外'\n            break\n        case 'others':\n            text = '其他'\n            break\n        default:\n            text = place\n            break\n    }\n    return text\n}\n\n// 举办时间\nconst timeData = ['全部', '本周', '本月']\n\n// 邮箱地址\nconst emailAddress = '782257144@qq.com'\n\nexport default () => {\n    const { activityPlaceList, activityAllListData } = useSelector((state) => ({\n        activityPlaceList: state.activity.activityPlaceList,\n        activityAllListData: state.activity.activityAllListData\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const [nowPlace, setNowPlace] = useState('all') // 当前举办地址\n    const [nowTime, setNowTime] = useState(1) // 当前时间\n    const [nowPageNum, setNowPageNum] = useState(1) // 当前页码\n\n    // 请求切换数据\n    const getListData = useCallback(\n        (params) => {\n            let obj = { place: nowPlace, timeType: nowTime, recommend: 0, currentPage: nowPageNum, pageSize: 18 }\n            if (params) {\n                obj = { ...obj, ...params }\n            }\n            dispatch(getActivityList(obj))\n        },\n        [nowPlace, nowTime, nowPageNum]\n    )\n\n    // 页码展示组件\n    const pageNumList = useCallback(\n        (length) => {\n            if (length < 9) {\n                let list = []\n                for (let i = 1; i <= length; i++) {\n                    list.push(\n                        <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                            {i}\n                        </span>\n                    )\n                }\n                return list\n            } else {\n                let list = []\n                if (nowPageNum <= 3) {\n                    for (let i = 1; i <= 5; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span>\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                } else if (nowPageNum === 4) {\n                    for (let i = 1; i <= 6; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span>\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                } else if (nowPageNum === length - 3) {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = length - 5; i <= length; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n                } else if (nowPageNum >= length - 3) {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = length - 4; i <= length; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n                } else {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = nowPageNum - 2; i <= nowPageNum + 2; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span >\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                }\n\n                return list\n            }\n        },\n        [nowPageNum]\n    )\n\n    // 点击切换地址按钮事件\n    const onBtnChangePlaceClick = useCallback(\n        (place) => {\n            setNowPlace(place)\n            setNowPageNum(1)\n            getListData({ place: place, currentPage: 1 })\n        },\n        []\n    )\n\n    // 点击切换地址按钮事件\n    const onBtnChangeTime = useCallback(\n        (timeId) => {\n            setNowTime(timeId)\n            setNowPageNum(1)\n            getListData({ timeType: timeId, currentPage: 1 })\n        },\n        []\n    )\n\n    // 点击切换页码按钮事件\n    const onBtnChangePageNumClick = useCallback(\n        (num) => {\n            if (num < 1 || num > activityAllListData.pageCount) return\n            setNowPageNum(num)\n            getListData({ currentPage: num })\n        },\n        [activityAllListData]\n    )\n\n    // 点击一键复制按钮事件\n    const onBtnCopyClick = useCallback(\n        (value) => {\n            if (execCommandCopy(value)) {\n                Toast.success('复制成功')\n            } else {\n                Toast.info('复制失败，该浏览器不支持点击复制到剪贴板')\n            }\n        },\n        []\n    )\n\n    return (\n        <div className=\"activity-list-page-bottom-list\">\n            <div className=\"activity-list-page-bottom-list-wrapper\">\n                <ul className=\"activity-list-page-bottom-list-nav\" id=\"activityNav\">\n                    {\n                        activityPlaceList && activityPlaceList.map((item, index) => {\n                            return (\n                                <li className={item.place === nowPlace ? 'active' : ''} onClick={() => onBtnChangePlaceClick(item.place)} key={index}>\n                                    {getNav(item.place)}\n                                    {index !== 0\n                                        ? <span>{`(${item.placeCount})`}</span>\n                                        : null\n                                    }\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                <div className=\"activity-list-page-bottom-list-date\">\n                    <span>时间</span>\n                    {timeData.map((item, index) => {\n                        const timeId = index + 1\n                        return (\n                            <p className={timeId === nowTime ? 'active' : ''} onClick={() => onBtnChangeTime(timeId)} key={index}>\n                                {item}\n                            </p>\n                        )\n                    })}\n                    <div className=\"contact\">联系我们:\n                        <div className=\"yx\">\n                            <img src={yxIcon} alt=\"\" />\n                            <div className=\"yx-cont\">\n                                <font id=\"fMailbox\">邮箱：{emailAddress}</font>\n                                <div className=\"copy\" onClick={() => onBtnCopyClick(emailAddress)}>复制</div>\n                                <i></i>\n                            </div>\n                        </div>\n                        <div className=\"wx\">\n                            <img src={wxIcon} alt=\"\" />\n                            <div className=\"wx-cont\">\n                                <img src={wxActiveIcon} alt=\"\" />\n                                <span>微信：linghu_chong_</span>\n                                <i></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"activity-list-page-bottom-list-list\">\n                    {activityAllListData && activityAllListData.pageCount >= 1\n                        ? activityAllListData.inforList.map((item, index) => {\n                            return (\n                                <ActivityListItem {...item} currentTime={activityAllListData.currentTime} key={index} />\n                            )\n                        })\n                        : <div className=\"not-available\" />\n                    }\n                </div>\n                {activityAllListData && activityAllListData.pageCount > 1\n                    ? <div className=\"activity-list-page-bottom-list-page\">\n                        <div className=\"activity-list-page-bottom-list-page-list\">\n                            <p className=\"page-item-btn\" onClick={() => onBtnChangePageNumClick(nowPageNum - 1)} key={'left'}>\n                                <img src={pageLeftIcon} alt=\"\" />\n                            </p>\n                            {pageNumList(activityAllListData.pageCount)}\n                            <p className=\"page-item-btn\" onClick={() => onBtnChangePageNumClick(nowPageNum + 1)} key={'right'}>\n                                <img src={pageRightIcon} alt=\"\" />\n                            </p>\n                        </div>\n                    </div>\n                    : null\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nimport TopBannerSwiper from './TopBannerSwiper'\nimport BottomList from './BottomList'\n\nimport SwiperCore, { Autoplay, EffectCoverflow, Navigation, Pagination } from 'swiper'\nSwiperCore.use([Autoplay, EffectCoverflow, Navigation, Pagination])\n\nexport default () => {\n    return (\n        <div className=\"activity-list-page\">\n            <TopBannerSwiper />\n            <BottomList />\n        </div>\n    )\n}\n","module.exports = __webpack_public_path__ + \"activity-list-item-site-c4248d67.png\";","module.exports = __webpack_public_path__ + \"activity-list-item-time-4f7a3a4a.png\";","module.exports = __webpack_public_path__ + \"activity-wx-f7149a6e.png\";","module.exports = __webpack_public_path__ + \"activity-a-wx-9633acf2.png\";","module.exports = __webpack_public_path__ + \"activity-yx-f7f1a434.png\";","module.exports = __webpack_public_path__ + \"activity-page-left-87410caf.png\";","module.exports = __webpack_public_path__ + \"activity-page-right-25ab7611.png\";"],"sourceRoot":""}