{"version":3,"sources":["webpack:///./assets/containers/ImLiveControl/ImLiveControlItem/index.js","webpack:///./assets/containers/ImLiveControl/index.js","webpack:///./_multiappsharing/public/hooks/useMemo.js","webpack:///./_multiappsharing/components/Popup/index.js","webpack:///./assets/containers/ImLiveControl/ImLiveControlPopup/index.js","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-arrow.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-close.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-play.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-popup-close.png"],"names":["ImLiveControlPictureItem","props","title","src","alignItems","ImLiveControlTextItem","text","ImLiveControlInputItem","value","onInputChange","useCallback","onBtnCopyClick","execCommandCopy","Toast","success","info","ImLiveControlExplainItem","roomType","color","ImLiveControlBtnItem","click","coursUrl","marginBottom","btnArrowIcon","explainText","useSelector","state","userInfo","login","room","live","shallowEqual","dispatch","useDispatch","timer","useRef","useState","isPopShow","setIsPopShow","isPopShow2","setIsPopShow2","useEffect","status","current","setInterval","getRoomStatus","roomId","getRoomStatusRes","parseInt","obj","clearInterval","onBtnPopupOKClick","passportId","loginShowHide","err","code","oldStatus","setRoomStatus","setRoomStatusRes","getRoomByID","then","res","msg","onBtnPlayOrEndClick","onBtnPopupCloseClick","onBtnPopupOKClick2","window","location","href","mixUrl","main","coverPicUrl","name","formatTime","beginTime","pushStreamUrl","split","playIcon","closeIcon","popupCloseIcon","children","deps","wrap","Fragment","Wrap","comp","useMemo","show","close","closeClassName","wrapperClassName","layoutContent","document","querySelector","zIndexStyle","removeZindex","defaultStyle","getAttribute","indexOf","setAttribute","replace","display","ok","okText","justifyContent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;;AACO,IAAMA,0CAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAAW;AAAA,MACvCC,KADuC,GACxBD,KADwB,CACvCC,KADuC;AAAA,MAChCC,GADgC,GACxBF,KADwB,CAChCE,GADgC;AAG/C,SACI;AAAK,aAAS,EAAC,sBAAf;AAAsC,SAAK,EAAE;AAAEC,gBAAU,EAAE;AAAd;AAA7C,KACI;AAAK,aAAS,EAAC;AAAf,KACKF,KADL,CADJ,EAII;AAAK,aAAS,EAAC,0BAAf;AAA0C,OAAG,EAAEC;AAA/C,IAJJ,CADJ;AAQH,CAXM;AAaP;;AACO,IAAME,uCAAqB,GAAG,SAAxBA,qBAAwB,CAACJ,KAAD,EAAW;AAAA,MACpCC,KADoC,GACpBD,KADoB,CACpCC,KADoC;AAAA,MAC7BI,IAD6B,GACpBL,KADoB,CAC7BK,IAD6B;AAG5C,SACI;AAAK,aAAS,EAAC;AAAf,KACI;AAAK,aAAS,EAAC;AAAf,KACKJ,KADL,CADJ,EAII;AAAK,aAAS,EAAC;AAAf,KACKI,IADL,CAJJ,CADJ;AAUH,CAbM;AAeP;;AACO,IAAMC,wCAAsB,GAAG,SAAzBA,sBAAyB,CAACN,KAAD,EAAW;AAAA,MACrCC,KADqC,GACpBD,KADoB,CACrCC,KADqC;AAAA,MAC9BM,KAD8B,GACpBP,KADoB,CAC9BO,KAD8B,EAG7C;;AACA,MAAMC,aAAa,GAAGC,sCAAW,CAAC,YAAM,CAAG,CAAV,EAAY,EAAZ,CAAjC,CAJ6C,CAM7C;;AACA,MAAMC,cAAc,GAAGD,sCAAW,CAC9B,YAAM;AACF,QAAIE,0DAAe,CAACJ,KAAD,CAAnB,EAA4B;AACxBK,8BAAK,CAACC,OAAN,CAAc,MAAd;AACH,KAFD,MAEO;AACHD,8BAAK,CAACE,IAAN,CAAW,sBAAX;AACH;AACJ,GAP6B,EAQ9B,CAACP,KAAD,CAR8B,CAAlC;AAWA,SACI;AAAK,aAAS,EAAC;AAAf,KACI;AAAK,aAAS,EAAC;AAAf,KACKN,KADL,CADJ,EAII;AAAO,aAAS,EAAC,4BAAjB;AAA8C,SAAK,EAAEM,KAArD;AAA4D,YAAQ,EAAEC,aAAtE;AAAqF,cAAU,EAAE;AAAjG,IAJJ,EAKI;AAAK,aAAS,EAAC,2BAAf;AAA2C,WAAO,EAAE;AAAA,aAAME,cAAc,EAApB;AAAA;AAApD,gCALJ,CADJ;AASH,CA3BM;AA6BP;;AACO,IAAMK,0CAAwB,GAAG,SAA3BA,wBAA2B,CAACf,KAAD,EAAW;AAAA,MACvCK,IADuC,GACpBL,KADoB,CACvCK,IADuC;AAAA,MACjCW,QADiC,GACpBhB,KADoB,CACjCgB,QADiC;AAG/C,SACI;AAAK,aAAS,EAAC;AAAf,KACI;AAAK,aAAS,EAAC,8BAAf;AAA8C,SAAK,EAAE;AAAEC,WAAK,EAAED,QAAQ,KAAK,CAAb,GAAiB,MAAjB,GAA0B;AAAnC;AAArD,KACKX,IADL,CADJ,CADJ;AAOH,CAVM;AAYP;;AACO,IAAMa,sCAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,KAAD,EAAW;AAAA,MACnCK,IADmC,GACML,KADN,CACnCK,IADmC;AAAA,MAC7BW,QAD6B,GACMhB,KADN,CAC7BgB,QAD6B;AAAA,MACnBd,GADmB,GACMF,KADN,CACnBE,GADmB;AAAA,MACdiB,KADc,GACMnB,KADN,CACdmB,KADc;AAAA,MACPC,QADO,GACMpB,KADN,CACPoB,QADO;AAG3C,SACI;AAAK,aAAS,EAAC,sBAAf;AAAsC,SAAK,EAAE;AAAEC,kBAAY,EAAE;AAAhB;AAA7C,KACI;AAAK,aAAS,qCAA8BL,QAAQ,KAAK,CAAb,GAAiB,YAAjB,GAAgC,YAA9D,CAAd;AAA4F,WAAO,EAAEG;AAArG,KACI;AAAK,aAAS,EAAC,+BAAf;AAA+C,OAAG,EAAEjB;AAApD,IADJ,EAEKG,IAFL,CADJ,EAKI;AAAG,aAAS,EAAC,kCAAb;AAAgD,QAAI,EAAEe,QAAtD;AAAgE,UAAM,EAAC;AAAvE,mDALJ,EAMI;AAAK,aAAS,EAAC,uCAAf;AAAuD,OAAG,EAAEE,+BAAYA;AAAxE,IANJ,CADJ;AAUH,CAbM,C;;;;;;;;;;;;;;;;;;;;AClFP;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMC,WAAW,GAAG,CAAC,yCAAD,EAA4C,kCAA5C,EAAgF,2BAAhF,CAApB,C,CAEA;;AACA,IAAMH,sBAAQ,GAAG,mDAAjB;AAEe,+FAAM;AAAA,qBACUI,4CAAW,CAAC,UAACC,KAAD;AAAA,WAAY;AAC/CC,cAAQ,EAAED,KAAK,CAACE,KAAN,CAAYD,QAAZ,CAAqBZ,IADgB;AAE/Cc,UAAI,EAAEH,KAAK,CAACI,IAAN,CAAWD;AAF8B,KAAZ;AAAA,GAAD,EAGlCE,qCAHkC,CADrB;AAAA,MACTJ,QADS,gBACTA,QADS;AAAA,MACCE,IADD,gBACCA,IADD;;AAKjB,MAAMG,QAAQ,GAAGC,4CAAW,EAA5B;AACA,MAAMC,KAAK,GAAGC,iCAAM,EAApB;;AANiB,kBAOiBC,mCAAQ,CAAC,KAAD,CAPzB;AAAA;AAAA,MAOVC,SAPU;AAAA,MAOCC,YAPD,kBAOiC;;;AAPjC,mBAQmBF,mCAAQ,CAAC,KAAD,CAR3B;AAAA;AAAA,MAQVG,UARU;AAAA,MAQEC,aARF,kBAQmC;;;AAEpDC,sCAAS,CAAC,YAAM;AACZ,QAAIZ,IAAI,CAACa,MAAL,KAAgB,CAApB,EAAuB;AACnBF,mBAAa,CAAC,IAAD,CAAb;AACA;AACH,KAJW,CAMZ;;;AACA,QAAIN,KAAK,CAACS,OAAV,EAAmB;AACnBT,SAAK,CAACS,OAAN,GAAgBC,WAAW;AAAA;AAAA;AAAA;AAAA,+BAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACOC,qCAAa,CAAC;AAAEC,sBAAM,EAAEjB,IAAI,CAACiB;AAAf,eAAD,CADpB;;AAAA;AAClBC,8BADkB;;AAExB,kBAAIC,QAAQ,CAACD,gBAAgB,CAACE,GAAlB,CAAR,KAAmC,CAAvC,EAA0C;AACtCT,6BAAa,CAAC,IAAD,CAAb;AACAU,6BAAa,CAAChB,KAAD,CAAb;AACH;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAMxB,KANwB,CAA3B;AAQA,WAAO,YAAM;AACTgB,mBAAa,CAAChB,KAAD,CAAb;AACAA,WAAK,CAACS,OAAN,GAAgB,IAAhB;AACH,KAHD;AAIH,GApBQ,EAoBN,CAACd,IAAD,CApBM,CAAT,CAViB,CAgCjB;;AACA,MAAMsB,iBAAiB,GAAGzC,sCAAW;AAAA;AAAA;AAAA;AAAA,6BACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,gBAAI,CAACiB,QAAQ,CAACyB,UAAd,EAA0B;AACtBpB,sBAAQ,CAACqB,sCAAa,CAAC,SAAD,EAAY,IAAZ,CAAd,CAAR;AACH,aAHL,CAKI;;;AALJ;AAAA,mBAMmCR,qCAAa,CAAC;AACzCC,oBAAM,EAAEjB,IAAI,CAACiB;AAD4B,aAAD,CAAb,UAEtB,UAAUQ,GAAV,EAAe;AACpBzC,sCAAK,CAACE,IAAN,CAAW,SAAX;AACA,oBAAMuC,GAAN;AACH,aAL8B,CANnC;;AAAA;AAMUP,4BANV;;AAAA,kBAaQA,gBAAgB,CAACQ,IAAjB,KAA0B,CAblC;AAAA;AAAA;AAAA;;AAccC,qBAdd,GAc0BR,QAAQ,CAACD,gBAAgB,CAACE,GAAlB,CAdlC;AAAA,2BAegBO,SAfhB;AAAA,8CAgBiB,CAhBjB,wBAiBiB,CAjBjB,wBA8CiB,CA9CjB;AAAA;;AAAA;AAAA;AAAA,mBAoB+CC,qCAAa,CAAC;AACzCX,oBAAM,EAAEjB,IAAI,CAACiB,MAD4B;AAEzCM,wBAAU,EAAEzB,QAAQ,CAACyB,UAFoB;AAGzCV,oBAAM,EAAGc,SAAS,GAAG;AAHoB,aAAD,CAAb,UAItB,UAAUF,GAAV,EAAe;AACpBzC,sCAAK,CAACE,IAAN,CAAW,SAAX;AACA,oBAAMuC,GAAN;AACH,aAP8B,CApB/C;;AAAA;AAoBsBI,4BApBtB;;AA6BgB,gBAAIA,gBAAgB,CAACH,IAAjB,KAA0B,CAA9B,EAAiC;AAC7B;AACAvB,sBAAQ,CAAC2B,mCAAW,CAAC;AACjBb,sBAAM,EAAEjB,IAAI,CAACiB;AADI,eAAD,CAAZ,CAAR,CAEIc,IAFJ,CAES,UAACC,GAAD,EAAS;AACd,oBAAIA,GAAG,CAACN,IAAJ,KAAa,CAAjB,EAAoB;AAChB1C,0CAAK,CAACE,IAAN,CAAW8C,GAAG,CAACC,GAAf;AACH;AACJ,eAND,WAMS,UAAUR,GAAV,EAAe;AACpBzC,wCAAK,CAACE,IAAN,CAAW,SAAX;AACA,sBAAMuC,GAAN;AACH,eATD;AAUH,aAZD,MAYO;AACHzC,sCAAK,CAACE,IAAN,CAAW2C,gBAAgB,CAACI,GAA5B;AACH;;AA3CjB;;AAAA;AA+CgBtB,yBAAa,CAAC,IAAD,CAAb;AA/ChB;;AAAA;AAkDgBA,yBAAa,CAAC,IAAD,CAAb;AAlDhB;;AAAA;AAAA;AAAA;;AAAA;AAsDQ3B,oCAAK,CAACE,IAAN,CAAWgC,gBAAgB,CAACe,GAA5B;;AAtDR;AAyDIxB,wBAAY,CAAC,KAAD,CAAZ;;AAzDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADiC,IA4DjC,CAACN,QAAD,EAAWH,IAAX,EAAiBF,QAAjB,CA5DiC,CAArC,CAjCiB,CAgGjB;;AACA,MAAMoC,mBAAmB,GAAGrD,sCAAW,CACnC,YAAM;AACF4B,gBAAY,CAAC,IAAD,CAAZ;AACH,GAHkC,EAInC,EAJmC,CAAvC,CAjGiB,CAwGjB;;AACA,MAAM0B,oBAAoB,GAAGtD,sCAAW,CACpC,YAAM;AACF4B,gBAAY,CAAC,KAAD,CAAZ;AACH,GAHmC,EAIpC,EAJoC,CAAxC,CAzGiB,CAgHjB;;AACA,MAAM2B,kBAAkB,GAAGvD,sCAAW,CAClC,YAAM;AACFwD,UAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBC,yCAAM,CAACC,IAAP,CAAY,OAAZ,CAAvB;AACH,GAHiC,EAIlC,EAJkC,CAAtC;AAOA,SACI;AAAK,aAAS,EAAC;AAAf,KACI;AAAK,aAAS,EAAC;AAAf,KACI,uCAAC,0CAAD;AAA0B,SAAK,EAAE,OAAjC;AAA0C,OAAG,EAAEzC,IAAI,CAAC0C;AAApD,IADJ,EAEI,uCAAC,uCAAD;AAAuB,SAAK,EAAE,OAA9B;AAAuC,QAAI,EAAE1C,IAAI,CAAC2C;AAAlD,IAFJ,EAGI,uCAAC,uCAAD;AAAuB,SAAK,EAAE,OAA9B;AAAuC,QAAI,EAAEC,qDAAU,CAAC5C,IAAI,CAAC6C,SAAN,EAAiB,kBAAjB;AAAvD,IAHJ,EAIK7C,IAAI,CAACZ,QAAL,KAAkB,CAAlB,IAAuBY,IAAI,CAAC8C,aAA5B,GACK,uCAAC,wCAAD;AAAwB,SAAK,EAAE,MAA/B;AAAuC,SAAK,YAAK9C,IAAI,CAAC8C,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAL,eAA0C/C,IAAI,CAAC8C,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAA1C,cAA8E/C,IAAI,CAAC8C,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAA9E;AAA5C,IADL,GAEK,uCAAC,uCAAD;AAAuB,SAAK,EAAE,MAA9B;AAAsC,QAAI,EAAE;AAA5C,IANV,EAOK/C,IAAI,CAACZ,QAAL,KAAkB,CAAlB,IAAuBY,IAAI,CAAC8C,aAA5B,GACK,uCAAC,wCAAD;AAAwB,SAAK,EAAE,OAA/B;AAAwC,SAAK,EAAE9C,IAAI,CAAC8C,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B;AAA/C,IADL,GAEK,uCAAC,uCAAD;AAAuB,SAAK,EAAE,OAA9B;AAAuC,QAAI,EAAE;AAA7C,IATV,EAWI,uCAAC,wCAAD;AAAwB,SAAK,EAAE,UAA/B;AAA2C,SAAK,wCAAiC/C,IAAI,CAACiB,MAAtC;AAAhD,IAXJ,EAYI,uCAAC,0CAAD;AAA0B,QAAI,EAAEjB,IAAI,CAACZ,QAAL,KAAkB,CAAlB,GAAsBO,WAAW,CAACK,IAAI,CAACa,MAAN,CAAjC,GAAiDlB,WAAW,CAAC,CAAD,CAA5F;AAAiG,YAAQ,EAAEK,IAAI,CAACZ,QAAhH;AAA0H,UAAM,EAAEY,IAAI,CAACa;AAAvI,IAZJ,EAaI,uCAAC,sCAAD;AAAsB,QAAI,EAAEb,IAAI,CAACa,MAAL,KAAgB,CAAhB,GAAoB,MAApB,GAA6B,MAAzD;AAAiE,YAAQ,EAAEb,IAAI,CAACZ,QAAhF;AAA0F,OAAG,EAAEY,IAAI,CAACa,MAAL,KAAgB,CAAhB,GAAoBmC,8BAApB,GAA+BC,+BAA9H;AAAyI,SAAK,EAAEf,mBAAhJ;AAAqK,YAAQ,EAAE1C,sBAAQA;AAAvL,IAbJ,CADJ,EAgBI,uCAAC,wBAAD;AACI,YAAQ,EACJ,uCAAC,qCAAD;AACI,WAAK,EAAE,IADX;AAEI,UAAI,EAAEQ,IAAI,CAACa,MAAL,KAAgB,CAAhB,GAAoB,0BAApB,GAAiD,QAF3D;AAGI,WAAK,EAAEsB,oBAHX;AAII,YAAM,EAAEnC,IAAI,CAACa,MAAL,KAAgB,CAAhB,GAAoB,MAApB,GAA6B,MAJzC;AAKI,QAAE,EAAES;AALR,MAFR;AAUI,QAAI,EAAEd,SAVV;AAWI,SAAK,EAAE2B,oBAXX;AAYI,aAAS,EAAEe,qCAZf;AAaI,kBAAc,EAAE;AAbpB,IAhBJ,EA+BI,uCAAC,wBAAD;AACI,YAAQ,EACJ,uCAAC,qCAAD;AACI,WAAK,EAAE,IADX;AAEI,UAAI,EAAE,SAFV;AAGI,QAAE,EAAEd,kBAHR;AAII,YAAM,EAAE;AAJZ,MAFR;AASI,QAAI,EAAE1B,UATV;AAUI,kBAAc,EAAE;AAVpB,IA/BJ,CADJ;AA8CH,CAtKD,E;;;;;;;;;;;;;;;;;ACrBA;AAEe,4DAA8C;AAAA,MAA3CyC,QAA2C,QAA3CA,QAA2C;AAAA,uBAAjCC,IAAiC;AAAA,MAAjCA,IAAiC,0BAA1B,EAA0B;AAAA,uBAAtBC,IAAsB;AAAA,MAAtBA,IAAsB,0BAAfC,2BAAe;AACzD;AACA,MAAMC,IAAI,GAAGF,IAAb,CAFyD,CAGzD;AACA;AAEA;;AACA,MAAMG,IAAI,GAAGC,kCAAO,CAACN,QAAD,EAAWC,IAAX,CAApB;AACA,SAAO,uCAAC,IAAD,QAAOI,IAAP,CAAP;AACH,CATD,E;;ACFA;AACA;AACA;AAEe,qFAOT;AAAA,MANFL,QAME,QANFA,QAME;AAAA,MALFO,IAKE,QALFA,IAKE;AAAA,MAJFC,KAIE,QAJFA,KAIE;AAAA,MAHFV,SAGE,QAHFA,SAGE;AAAA,MAFFW,cAEE,QAFFA,cAEE;AAAA,MADFC,gBACE,QADFA,gBACE;AACF;AACA;AACAjD,sCAAS,CAAC,YAAM;AACZ,QAAMkD,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAtB;AACA,QAAI,CAACF,aAAL,EAAoB;AAEpB,QAAMG,WAAW,GAAG,eAApB;;AACA,QAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,UAAMC,YAAY,GAAGL,aAAa,CAACM,YAAd,CAA2B,OAA3B,CAArB;AACAD,kBAAY,IACRA,YAAY,CAACE,OAAb,CAAqBJ,WAArB,IAAoC,CAAC,CADzC,IAEIH,aAAa,CAACQ,YAAd,CAA2B,OAA3B,EAAoCH,YAAY,CAACI,OAAb,CAAqBN,WAArB,EAAkC,EAAlC,CAApC,CAFJ;AAGH,KALD;;AAOA,QAAIP,IAAJ,EAAU;AACN,UAAMS,YAAY,GAAGL,aAAa,CAACM,YAAd,CAA2B,OAA3B,CAArB;AACAD,kBAAY,IACRA,YAAY,CAACE,OAAb,CAAqBJ,WAArB,MAAsC,CAAC,CAD3C,IAEIH,aAAa,CAACQ,YAAd,CAA2B,OAA3B,EAAoCH,YAAY,GAAGF,WAAnD,CAFJ;AAGH,KALD,MAKO;AACHC,kBAAY;AACf;;AAED,WAAO,YAAM;AACTA,kBAAY;AACf,KAFD;AAGH,GAxBQ,EAwBN,CAACR,IAAD,CAxBM,CAAT;AA0BA,SAAO,uCAAC,OAAD;AAAS,QAAI,EAAE,CAACP,QAAD,EAAWO,IAAX,EAAiBC,KAAjB;AAAf,KACF;AAAA,WAAM;AAAK,eAAS,0BAAmBE,gBAAgB,IAAI,EAAvC,CAAd;AACH,WAAK,EAAE;AACHW,eAAO,EAAEd,IAAI,GAAG,MAAH,GAAY;AADtB;AADJ,OAIH;AAAK,eAAS,EAAC;AAAf,OACI;AAAK,eAAS,wBAAiBE,cAAc,IAAI,EAAnC,CAAd;AAAuD,SAAG,EAAEX,SAA5D;AAAuE,aAAO,EAAEU;AAAhF,MADJ,EAEKR,QAFL,CAJG,EAQH;AAAK,eAAS,EAAC,YAAf;AAA4B,aAAO,EAAEQ;AAArC,MARG,CAAN;AAAA,GADE,CAAP;AAYH,CAhDD,E;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEe,mEAACvF,KAAD,EAAW;AAAA,MACdC,KADc,GACqBD,KADrB,CACdC,KADc;AAAA,MACPI,IADO,GACqBL,KADrB,CACPK,IADO;AAAA,MACDkF,KADC,GACqBvF,KADrB,CACDuF,KADC;AAAA,MACMc,EADN,GACqBrG,KADrB,CACMqG,EADN;AAAA,MACUC,MADV,GACqBtG,KADrB,CACUsG,MADV;AAEtB,SACI;AAAK,aAAS,EAAC;AAAf,KACI;AAAK,aAAS,EAAC;AAAf,KAA8CrG,KAA9C,CADJ,EAEI;AAAK,aAAS,EAAC;AAAf,KACKI,IADL,CAFJ,EAKI;AAAK,aAAS,EAAC,+BAAf;AAA+C,SAAK,EAAE;AAAEkG,oBAAc,EAAEhB,KAAK,IAAIc,EAAT,GAAc,eAAd,GAAgC;AAAlD;AAAtD,KACKd,KAAK,IAAI;AAAK,aAAS,EAAC,iCAAf;AAAiD,WAAO,EAAEA;AAA1D,oBADd,EAEKc,EAAE,IAAI;AAAK,aAAS,EAAC,8BAAf;AAA8C,WAAO,EAAEA;AAAvD,KAA4DC,MAA5D,CAFX,CALJ,CADJ;AAYH,CAdD,E;;;;;;;ACJA,iBAAiB,qBAAuB,wC;;;;;;;ACAxC,iBAAiB,qBAAuB,wC;;;;;;;ACAxC,iBAAiB,qBAAuB,uC;;;;;;;ACAxC,iBAAiB,qBAAuB,8C","file":"containers-ImLiveControl.js","sourcesContent":["import React, { useCallback } from 'react'\n\nimport './index.scss'\n\nimport { execCommandCopy } from 'multiPublic'\nimport Toast from 'multiComps/Toast'\nimport btnArrowIcon from '../Image/im-live-control-arrow.png'\n\n/** @desc 图片Item */\nexport const ImLiveControlPictureItem = (props) => {\n    const { title, src } = props\n\n    return (\n        <div className=\"im-live-control-item\" style={{ alignItems: 'flex-start' }}>\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <img className=\"im-live-control-item-img\" src={src} />\n        </div>\n    )\n}\n\n/** @desc 文字Item */\nexport const ImLiveControlTextItem = (props) => {\n    const { title, text } = props\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <div className=\"im-live-control-item-text\">\n                {text}\n            </div>\n        </div>\n    )\n}\n\n/** @desc 输入框Item */\nexport const ImLiveControlInputItem = (props) => {\n    const { title, value } = props\n\n    // 需要选中状态，但是不能更改，所以不能用readOnly 或 defaultVal\n    const onInputChange = useCallback(() => { }, [])\n\n    // 点击一键复制按钮事件\n    const onBtnCopyClick = useCallback(\n        () => {\n            if (execCommandCopy(value)) {\n                Toast.success('复制成功')\n            } else {\n                Toast.info('复制失败，该浏览器不支持点击复制到剪贴板')\n            }\n        },\n        [value]\n    )\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <input className=\"im-live-control-item-input\" value={value} onChange={onInputChange} spellCheck={false} />\n            <div className=\"im-live-control-item-copy\" onClick={() => onBtnCopyClick()}>一键复制</div>\n        </div>\n    )\n}\n\n/** @desc 说明Item */\nexport const ImLiveControlExplainItem = (props) => {\n    const { text, roomType } = props\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-explain\" style={{ color: roomType === 1 ? '#999' : '#F63C2A' }}>\n                {text}\n            </div>\n        </div>\n    )\n}\n\n/** @desc 按钮Item */\nexport const ImLiveControlBtnItem = (props) => {\n    const { text, roomType, src, click, coursUrl } = props\n\n    return (\n        <div className=\"im-live-control-item\" style={{ marginBottom: 0 }}>\n            <div className={`im-live-control-item-btn ${roomType === 1 ? 'backColor1' : 'backColor2'}`} onClick={click}>\n                <img className=\"im-live-control-item-btn-icon\" src={src} />\n                {text}\n            </div>\n            <a className=\"im-live-control-item-btn-explain\" href={coursUrl} target=\"_blank\">MarsBit电脑直播教程</a>\n            <img className=\"im-live-control-item-btn-explain-icon\" src={btnArrowIcon} />\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\n\nimport Popup from 'multiComps/Popup'\nimport Toast from 'multiComps/Toast'\nimport { formatTime, mixUrl } from 'multiPublic'\nimport { loginShowHide } from 'multiRedux/actions/login'\nimport { getRoomStatus, setRoomStatus, getRoomByID } from '../../redux/actions/live'\nimport { ImLiveControlPictureItem, ImLiveControlTextItem, ImLiveControlInputItem, ImLiveControlExplainItem, ImLiveControlBtnItem } from './ImLiveControlItem'\nimport ImLiveControlPopup from './ImLiveControlPopup'\nimport closeIcon from './Image/im-live-control-close.png'\nimport playIcon from './Image/im-live-control-play.png'\nimport popupCloseIcon from './Image/im-live-control-popup-close.png'\n\nconst explainText = ['直播软件（如OBS软件）设置完成推流后，点击“开始直播”按钮后直播才会正式开始', '直播结束后，点击“结束直播”按钮后，直播间状态会自动更改为回放中', '当前为手机直播，请在MarsBit上开启或关闭直播']\n\n// 火星财经电脑直播教程\nconst coursUrl = 'https://news.marsbit.co/20210201154152675262.html'\n\nexport default () => {\n    const { userInfo, room } = useSelector((state) => ({\n        userInfo: state.login.userInfo.info,\n        room: state.live.room\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const timer = useRef()\n    const [isPopShow, setIsPopShow] = useState(false) // 是否开启弹窗\n    const [isPopShow2, setIsPopShow2] = useState(false) // 是否开启弹窗2\n\n    useEffect(() => {\n        if (room.status === 2) {\n            setIsPopShow2(true)\n            return\n        }\n\n        // 循环请求直播间状态, 非本页面关闭时，跳转到直播列表页\n        if (timer.current) return\n        timer.current = setInterval(async () => {\n            const getRoomStatusRes = await getRoomStatus({ roomId: room.roomId })\n            if (parseInt(getRoomStatusRes.obj) === 2) {\n                setIsPopShow2(true)\n                clearInterval(timer)\n            }\n        }, 10000)\n\n        return () => {\n            clearInterval(timer)\n            timer.current = null\n        }\n    }, [room])\n\n    // 点击弹窗确定按钮事件\n    const onBtnPopupOKClick = useCallback(\n        async () => {\n            if (!userInfo.passportId) {\n                dispatch(loginShowHide('account', true))\n            }\n\n            // 请求当前直播间状态\n            const getRoomStatusRes = await getRoomStatus({\n                roomId: room.roomId\n            }).catch(function (err) {\n                Toast.info('获取直播间错误')\n                throw err\n            })\n\n            if (getRoomStatusRes.code === 1) {\n                const oldStatus = parseInt(getRoomStatusRes.obj)\n                switch (oldStatus) {\n                    case 0:\n                    case 1:\n\n                        // 改变直播间状态\n                        const setRoomStatusRes = await setRoomStatus({\n                            roomId: room.roomId,\n                            passportId: userInfo.passportId,\n                            status: (oldStatus + 1)\n                        }).catch(function (err) {\n                            Toast.info('获取直播间错误')\n                            throw err\n                        })\n\n                        if (setRoomStatusRes.code === 1) {\n                            // 刷新直播间数据\n                            dispatch(getRoomByID({\n                                roomId: room.roomId\n                            })).then((res) => {\n                                if (res.code !== 1) {\n                                    Toast.info(res.msg)\n                                }\n                            }).catch(function (err) {\n                                Toast.info('获取直播间错误')\n                                throw err\n                            })\n                        } else {\n                            Toast.info(setRoomStatusRes.msg)\n                        }\n\n                        break\n                    case 2:\n                        setIsPopShow2(true)\n                        break\n                    default:\n                        setIsPopShow2(true)\n                        break\n                }\n            } else {\n                Toast.info(getRoomStatusRes.msg)\n            }\n\n            setIsPopShow(false)\n        },\n        [dispatch, room, userInfo]\n    )\n\n    // 点击开始关闭按钮事件\n    const onBtnPlayOrEndClick = useCallback(\n        () => {\n            setIsPopShow(true)\n        },\n        []\n    )\n\n    // 点击弹窗关闭按钮事件\n    const onBtnPopupCloseClick = useCallback(\n        () => {\n            setIsPopShow(false)\n        },\n        []\n    )\n\n    // 点击直播间已关闭弹窗确定按钮事件\n    const onBtnPopupOKClick2 = useCallback(\n        () => {\n            window.location.href = mixUrl.main('/live')\n        },\n        []\n    )\n\n    return (\n        <div className=\"im-live-control-page\">\n            <div className=\"im-live-control-page-main-box\">\n                <ImLiveControlPictureItem title={'直播封面：'} src={room.coverPicUrl} />\n                <ImLiveControlTextItem title={'直播标题：'} text={room.name} />\n                <ImLiveControlTextItem title={'直播时间：'} text={formatTime(room.beginTime, 'yyyy-MM-dd hh:mm')} />\n                {room.roomType === 1 && room.pushStreamUrl\n                    ? <ImLiveControlInputItem title={'服务器：'} value={`${room.pushStreamUrl.split('/')[0]}//${room.pushStreamUrl.split('/')[2]}/${room.pushStreamUrl.split('/')[3]}`} />\n                    : <ImLiveControlTextItem title={'服务器：'} text={'手机直播不支持串流'} />}\n                {room.roomType === 1 && room.pushStreamUrl\n                    ? <ImLiveControlInputItem title={'串流密钥：'} value={room.pushStreamUrl.split('/')[4]} />\n                    : <ImLiveControlTextItem title={'串流密钥：'} text={'手机直播不支持串流'} />}\n                {/* <ImLiveControlInputItem title={'拉流地址：'} value={room.pullStreamUrl} /> */}\n                <ImLiveControlInputItem title={'直播间观看地址：'} value={`https://www.marsbit.co/live/${room.roomId}`} />\n                <ImLiveControlExplainItem text={room.roomType === 1 ? explainText[room.status] : explainText[2]} roomType={room.roomType} status={room.status} />\n                <ImLiveControlBtnItem text={room.status === 0 ? '开始直播' : '结束直播'} roomType={room.roomType} src={room.status === 0 ? playIcon : closeIcon} click={onBtnPlayOrEndClick} coursUrl={coursUrl} />\n            </div>\n            <Popup\n                children={\n                    <ImLiveControlPopup\n                        title={'提示'}\n                        text={room.status === 0 ? '直播软件（如OBS）设置完成后才可正常开始直播。' : '是否结束直播'}\n                        close={onBtnPopupCloseClick}\n                        okText={room.status === 0 ? '开始直播' : '结束直播'}\n                        ok={onBtnPopupOKClick}\n                    />\n                }\n                show={isPopShow}\n                close={onBtnPopupCloseClick}\n                closeIcon={popupCloseIcon}\n                closeClassName={'im-live-control-popup-close'}\n            />\n            <Popup\n                children={\n                    <ImLiveControlPopup\n                        title={'提示'}\n                        text={'直播间已被关闭'}\n                        ok={onBtnPopupOKClick2}\n                        okText={'确定'}\n                    />\n                }\n                show={isPopShow2}\n                closeClassName={'im-live-control-popup-close2'}\n            />\n        </div>\n    )\n}\n","import React, { useMemo, Fragment } from 'react'\n\nexport default ({ children, deps = [], wrap = Fragment }) => {\n    // 转换参数为大写开头\n    const Wrap = wrap\n    // 这里由于React 的限制，必须要返回单一节点，因此做了一层包装。\n    // 包装节点可自定义传入一个组件类型\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const comp = useMemo(children, deps)\n    return <Wrap>{comp}</Wrap>\n}\n","import React, { useEffect } from 'react'\nimport './index.scss'\nimport UseMemo from '../../public/hooks/useMemo'\n\nexport default ({\n    children,\n    show,\n    close,\n    closeIcon,\n    closeClassName,\n    wrapperClassName\n}) => {\n    // 显示时让弹出框在最上层\n    // 按项目布局定--只需要layout-content在layout-header,layout-header-auto等外层布局上就好\n    useEffect(() => {\n        const layoutContent = document.querySelector('.layout-content')\n        if (!layoutContent) return\n\n        const zIndexStyle = '; z-index: 10'\n        const removeZindex = () => {\n            const defaultStyle = layoutContent.getAttribute('style')\n            defaultStyle &&\n                defaultStyle.indexOf(zIndexStyle) > -1 &&\n                layoutContent.setAttribute('style', defaultStyle.replace(zIndexStyle, ''))\n        }\n\n        if (show) {\n            const defaultStyle = layoutContent.getAttribute('style')\n            defaultStyle &&\n                defaultStyle.indexOf(zIndexStyle) === -1 &&\n                layoutContent.setAttribute('style', defaultStyle + zIndexStyle)\n        } else {\n            removeZindex()\n        }\n\n        return () => {\n            removeZindex()\n        }\n    }, [show])\n\n    return <UseMemo deps={[children, show, close]}>\n        {() => <div className={`popup-wrapper ${wrapperClassName || ''}`}\n            style={{\n                display: show ? 'flex' : 'none'\n            }}>\n            <div className=\"popup-content\">\n                <img className={`popup-close ${closeClassName || ''}`} src={closeIcon} onClick={close} />\n                {children}\n            </div>\n            <div className=\"popup-mask\" onClick={close}></div>\n        </div>}\n    </UseMemo>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport default (props) => {\n    const { title, text, close, ok, okText } = props\n    return (\n        <div className=\"im-live-control-popup\">\n            <div className=\"im-live-control-popup-title\">{title}</div>\n            <div className=\"im-live-control-popup-text\">\n                {text}\n            </div>\n            <div className=\"im-live-control-popup-btn-box\" style={{ justifyContent: close && ok ? 'space-between' : 'center' }}>\n                {close && <div className=\"im-live-control-popup-btn close\" onClick={close}>取消</div>}\n                {ok && <div className=\"im-live-control-popup-btn ok\" onClick={ok}>{okText}</div>}\n            </div>\n        </div>\n    )\n}\n","module.exports = __webpack_public_path__ + \"im-live-control-arrow-3d60a162.png\";","module.exports = __webpack_public_path__ + \"im-live-control-close-011bb54b.png\";","module.exports = __webpack_public_path__ + \"im-live-control-play-2d150157.png\";","module.exports = __webpack_public_path__ + \"im-live-control-popup-close-d56650a0.png\";"],"sourceRoot":""}