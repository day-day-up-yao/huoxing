{"version":3,"sources":["webpack:///./assets/containers/VideoList/index.js","webpack:///./assets/containers/VideoList/Image/video-btn.png"],"names":["gap","useSelector","state","videoListData","video","shallowEqual","dispatch","useDispatch","useState","btnText","setBtnText","isOk","setIsOk","pageNum","setPageNum","contBox","useRef","useEffect","waterfall","useCallback","items","document","getElementsByClassName","itemWidth","offsetWidth","columns","arr","i","length","style","top","left","push","offsetHeight","minHeight","index","j","offsetLeft","current","height","Math","max","getMoreData","currentPage","getVideoList","pageSize","onBtnMoreClick","newPageNum","pageCount","onBtnItemClick","item","id","publishTime","window","location","href","mixUrl","main","opacity","inforList","isArray","map","videoImg","coverPic","indexOf","JSON","parse","title","pc","IconBtn","content","commentCounts","hotCounts","videoTime","recordCount"],"mappings":"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","file":"containers-VideoList.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\nimport { isArray, mixUrl } from 'multiPublic'\nimport IconBtn from './Image/video-btn.png'\nimport { getVideoList } from '../../redux/actions/video'\n\nconst gap = 20 // 每个Item的间距\n\nexport default () => {\n    const { videoListData } = useSelector((state) => ({\n        videoListData: state.video.videoListData // 视频列表数据\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const [btnText, setBtnText] = useState('查看更多')\n    const [isOk, setIsOk] = useState(false)\n    const [pageNum, setPageNum] = useState(1) // 页数\n    const contBox = useRef() // cont 实例\n\n    useEffect(() => {\n        waterfall()\n    }, [videoListData])\n\n    // 产生瀑布流效果\n    const waterfall = useCallback(\n        () => {\n            let items = document.getElementsByClassName('video-list-page-item')\n            // 首先确定列数 = 页面的宽度 / 图片的宽度\n            // let pageWidth = 1200\n            let itemWidth = items[0].offsetWidth\n            // let columns = parseInt(pageWidth / (itemWidth + gap))\n            let columns = 4\n            let arr = [] // 定义一个数组，用来存储元素的高度\n            for (let i = 0; i < items.length; i++) {\n                if (i < columns) {\n                    // 满足这个条件则说明在第一行，文章里面有提到\n                    items[i].style.top = 0\n                    items[i].style.left = (itemWidth + gap) * i + 'px'\n                    arr.push(items[i].offsetHeight)\n                } else {\n                    // 其他行，先找出最小高度列，和索引\n                    // 假设最小高度是第一个元素\n                    let minHeight = arr[0]\n                    let index = 0\n                    // 找出最小高度\n                    for (let j = 0; j < arr.length; j++) {\n                        if (minHeight > arr[j]) {\n                            minHeight = arr[j]\n                            index = j\n                        }\n                    }\n                    // 设置下一行的第一个盒子的位置\n                    // top值就是最小列的高度+gap\n                    items[i].style.top = arr[index] + gap + 'px'\n                    items[i].style.left = items[index].offsetLeft + 'px'\n\n                    // 修改最小列的高度\n                    // 最小列的高度 = 当前自己的高度 + 拼接过来的高度 + 间隙的高度\n                    arr[index] = arr[index] + items[i].offsetHeight + gap\n                }\n            }\n\n            // 设置整体高度\n            contBox.current.style.height = Math.max(...arr) + 'px'\n            setIsOk(true)\n        },\n        []\n    )\n\n    // 请求更多数据\n    const getMoreData = useCallback(\n        (currentPage) => {\n            dispatch(getVideoList({ currentPage: currentPage, pageSize: 24 }))\n        },\n        []\n    )\n\n    // 点击查看更多按钮事件\n    const onBtnMoreClick = useCallback(\n        () => {\n            let newPageNum = pageNum + 1\n            setPageNum(newPageNum)\n            if (videoListData.pageCount >= newPageNum) {\n                getMoreData(newPageNum)\n            } else {\n                setBtnText('没有更多了')\n            }\n        },\n        [pageNum]\n    )\n\n    // 点击每项按钮\n    const onBtnItemClick = useCallback(\n        (item) => {\n            if (!item.id || !item.publishTime) return\n            window.location.href = mixUrl.main(`/video/detail/${item.id}/${item.publishTime}`)\n        },\n        []\n    )\n\n    return (\n        <div className=\"video-list-page\">\n            <div className=\"video-list-page-cont\" ref={contBox} style={{ opacity: isOk === true ? 1 : 0 }}>\n                {\n                    videoListData.inforList && isArray(videoListData.inforList) && videoListData.inforList.map((item, index) => {\n                        const videoImg = !item.coverPic || item.coverPic.indexOf('{') === -1 ? '' : JSON.parse(item.coverPic)\n                        return (\n                            <div className=\"video-list-page-item\" key={index} onClick={() => onBtnItemClick(item)}>\n                                <div className=\"video-item-img\">\n                                    <a title={item.title} target=\"_blank\">\n                                        <img src={!videoImg || !videoImg.pc ? '' : videoImg.pc} alt={item.title} />\n                                        <span className=\"btn\">\n                                            <img src={IconBtn} alt=\"播放\" />\n                                        </span>\n                                        {/* <span className=\"title\">MarsBit视频</span> */}\n                                    </a>\n                                </div>\n                                <a>\n                                    <h5>{item.title}</h5>\n                                    <div className=\"video-item-describe\">\n                                        {item.content}\n                                    </div>\n                                </a>\n                                <div className=\"box-bottom\">\n                                    <p className=\"comment\"><span>\n                                        {item.commentCounts}</span>评论</p>\n                                    <p className=\"endorse\"><span>{item.hotCounts}</span></p>\n                                    <p className=\"time\"><span>{item.videoTime}</span></p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            {\n                videoListData.recordCount && videoListData.recordCount > 12 &&\n                <div className=\"video-list-page-more\" onClick={() => onBtnMoreClick()}>{btnText}</div>\n            }\n\n        </div>\n    )\n}\n","module.exports = __webpack_public_path__ + \"video-btn-d985f525.png\";"],"sourceRoot":""}