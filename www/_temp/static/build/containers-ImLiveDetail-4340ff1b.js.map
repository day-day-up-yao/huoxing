{"version":3,"sources":["webpack:///./assets/public/hooks/useTWebLivePlayer.js","webpack:///./assets/public/hooks/useTWebLiveIm.js","webpack:///./assets/components/ImLiveDetail/image/live_detail_type_2.gif","webpack:///./assets/components/ImLiveDetail/image/live_detail_pop.png","webpack:///./assets/components/ImLiveDetail/image/live-tip-warning.png","webpack:///./assets/components/ImLiveDetail/image/live-tip-clear.png","webpack:///./assets/components/ImLiveDetail/image/live-tip-close.png","webpack:///./assets/components/ImLiveDetail/image/live-tip-cross.png","webpack:///./assets/containers/ImLiveDetail/Image/live_chat_nolive.png","webpack:///./assets/containers/ImLiveDetail/Image/live-join-phone.png","webpack:///./assets/containers/ImLiveDetail/Image/live-join-wx.png","webpack:///./assets/components/ImLiveDetail/LeftLiveVideo/LeftLiveVideoHeader/index.js","webpack:///./assets/components/ImLiveDetail/LiveTipBox/index.js","webpack:///./assets/containers/ImLiveDetail/LeftLiveVideo/index.js","webpack:///./assets/containers/ImLiveDetail/LeftLiveAd/index.js","webpack:///./assets/components/ImLiveDetail/LeftLiveInfo/index.js","webpack:///./assets/containers/ImLiveDetail/LeftLiveBottomBox/index.js","webpack:///./assets/components/ImLiveDetail/ImLiveChatItem/index.js","webpack:///./assets/containers/ImLiveDetail/RightLiveChat/index.js","webpack:///./assets/containers/ImLiveDetail/RightLivePresenter/index.js","webpack:///./assets/containers/ImLiveDetail/RightLiveJoin/index.js","webpack:///./assets/containers/ImLiveDetail/index.js"],"names":["timeZero","num","Number","concat","commentStyle","color","fontSize","textShadow","__webpack_exports__","props","dispatch","useDispatch","_useSelector","useSelector","state","roomHistoryList","live","room","shallowEqual","_useState","useState","d","h","m","s","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","countTime","setCountTime","elementID","getCountTimeText","useCallback","nowTime","Date","getTime","leftTime","beginTime","obj","Math","floor","status","setTimeout","_useState3","_useState4","mutedBtnShow","setMutedBtnShow","_useState5","_useState6","player","setPlayer","useEffect","document","querySelector","removeAttribute","video","muted","startPlay","url","type","mobileoptions","id","poster","coverPicUrl","width","height","pip","screenShot","autoplay","lang","playsinline","ignores","options","rotate","innerRotate","clockwise","pipConfig","bottom","right","controls","comments","area","start","end","isPc","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","playbackRate","defaultPlaybackRate","commentsArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","val","value","push","mode","duration","updateTime","txt","content","style","err","danmu","roomType","cssFullscreen","fileExtension","require","replace","HlsJsPlayer","Player","isAutoplaySupported","supported","console","log","once","setAttribute","play","window","livePlayer","livePush","liveGather","on","eventId","eventInfo","action","roomStatus","onbeforeunload","_useState7","_useState8","oldRoomStatus","setOldRoomStatus","playingUrl","webPullStreamUrl","pullStreamUrl","Toast","info","indexOf","split","playbackUrl","recordVideoUrl","destroy","timer","setInterval","getRoomPopularity","roomIDs","roomId","clearInterval","getRoomByID","body","onclick","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2___default","im","setIm","imReady","setImReady","imLogin","setImLogin","imJoin","setImJoin","createIM","setTextMessageReceived","TWebLive","SDKAppID","EVENT","IM_READY","event","IM_NOT_READY","IM_REMOTE_USER_JOIN","data","forEach","message","nick","payload","userIDList","IM_REMOTE_USER_LEAVE","IM_KICKED_OUT","IM_NET_STATE_CHANGED","IM_PUSH_STOPPED","_tim","TIM","MESSAGE_RECEIVED","from","text","getImLogin","_ref","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","passportId","sigRes","wrap","_context","prev","axios","sent","login","userID","userSig","then","imResponse","imError","warn","stop","_x","apply","this","arguments","joinImRoom","enterRoom","TYPES","ENTER_ROOM_SUCCESS","ALREADY_IN_ROOM","module","exports","__webpack_require__","p","LeftLiveVideo_LeftLiveVideoHeader","name","type2","presenterList","popularity","pop","onBtnGetTipAddClick","playNum","playNumText","toFixed","react_default","createElement","className","AuthorInfo","authorInfo","src","typeIcon2","marginRight","title","popIcon","length","nickName","formatTime","onClick","warningIcon","typeArr","ImLiveDetail_LiveTipBox","slicedToArray_default","nowType","setNowType","textImg","setTextImg","isUpImg","setIsUpImg","textArea","useRef","curWordsNum","wordsNum","trim","target","current","innerText","substring","onBtnChangeTypeClick","dataURLtoBlob","dataurl","arr","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","Blob","coverImgUpload","e","file","files","FileReader","reader","readAsDataURL","onloadend","result","uploadImg","uploadFile","watermark","res","code","closeImg","onBtnOKClick","reason","imgUrl","getLiveTipAdd","onBtnClearClick","clearIcon","map","item","index","key","placeholder","ref","onChange","crossIcon","accept","closeIcon","ImLiveDetail_LeftLiveVideo","popularityList","_useTWebLivePlayer","useTWebLivePlayer","isPip","setIsPip","isTipShow","setIsTipShow","box","getElementById","scrollFunc","windowScroll","scrollOffset","top","getPIP","zIndex","exitPIP","removeEventListener","extends_default","isArray","display","ImLiveDetail_LeftLiveAd","liveDetailImgData","home","href","pcImgSrc","ImLiveDetail_LeftLiveInfo","brief","dangerouslySetInnerHTML","__html","typeName","ImLiveDetail_LeftLiveBottomBox","t","useTranslation","roomLiveRecommendList","inforList","onBtnTypeClick","LeftLiveRecommend","listData","ImLiveDetail_ImLiveChatItem","textClass","anchorme","input","attributes","ImLiveDetail_RightLiveChat","userInfo","setListData","isClickChat","setIsClickChat","listScroll","timeImLogin","timeImJoin","onTextMessageReceived","elementItem","JSON","parse","cmd","_elements","msgId","presenterItem","guestList","guesItem","setChatItem","userDefinedField","delChatItem","operationType","_useTWebLiveIm","useTWebLiveIm","scrollIntoView","md5","uuid","list","elementOffset","stringify","i","splice","setAddChat","asyncToGenerator_default","regenerator_default","zg","abrupt","loginShowHide","test","renameShowHide","liveComentSend","msg","focus","t0","loginPopup","RightLiveBoxTitle","noLiveIcon","onKeyUp","keyCode","disabled","ImLiveDetail_RightLivePresenter","RightLiveGoodUpItem","ImLiveDetail_RightLiveJoin","phoneIcon","wxIcon","marginTop","liveGatherAjax","RightDownloadBox","isLive"],"mappings":"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","file":"containers-ImLiveDetail-4340ff1b.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\n// import HlsJsPlayer from 'xgplayer-hls.js'\n\nimport { getRoomPopularity, getRoomByID } from '../../redux/actions/live'\nimport Toast from 'multiComps/Toast'\nimport { isAutoplaySupported, fileExtension, isPc } from 'multiPublic/index'\nimport liveGather from './useLiveGather'\n\nconst timeZero = (num) => {\n    if (Number(num) < 10) {\n        return `0${num}`\n    } else {\n        return num\n    }\n}\n\nexport const commentStyle = {\n    color: 'rgba(255, 255, 255, 0.9)',\n    fontSize: '24px',\n    textShadow: 'rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px'\n    // padding: '5px 11px',\n    // border: '1px solid rgba(255, 255, 255, 0.4)',\n    // borderRadius: '50px',\n    // backgroundColor: 'rgba(255, 255, 255, 0.2)'\n}\n\nexport default (props) => {\n    const dispatch = useDispatch()\n    const { room, roomHistoryList } = useSelector((state) => ({\n        roomHistoryList: state.live.roomHistoryList,\n        room: state.live.room\n    }), shallowEqual)\n\n    const [countTime, setCountTime] = useState({\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0\n    })\n\n    // elementID 播放器绑定ID\n    const { elementID } = props\n\n    // 倒计时\n    const getCountTimeText = useCallback(() => {\n        let nowTime = new Date().getTime()\n        let endTime = Number(room.beginTime)\n        let leftTime = endTime - nowTime\n        let obj = {\n            d: 0,\n            h: 0,\n            m: 0,\n            s: 0\n        }\n        if (leftTime >= 0) {\n            obj.d = Math.floor(leftTime / 1000 / 60 / 60 / 24)\n            obj.h = Math.floor(leftTime / 1000 / 60 / 60 % 24)\n            obj.m = Math.floor(leftTime / 1000 / 60 % 60)\n            obj.s = Math.floor(leftTime / 1000 % 60)\n        }\n\n        setCountTime(obj)\n\n        if (room.status === 0) {\n            setTimeout(getCountTimeText, 1000)\n        }\n    }, [])\n\n    // 播放\n    const [mutedBtnShow, setMutedBtnShow] = useState(false)\n    const [player, setPlayer] = useState(null) // 直播中实例\n    useEffect(() => {\n        if (!player || mutedBtnShow) return\n\n        document.querySelector('.xgplayer-icon-large').removeAttribute('style')\n        document.querySelector('.xgplayer-icon-muted').removeAttribute('style')\n        player.video.muted = false\n    }, [mutedBtnShow])\n    const startPlay = useCallback((url, type) => {\n        if (!url) return\n        // 移动端的控制条选项\n        let mobileoptions = {\n            id: elementID,\n            url: url,\n            poster: room.coverPicUrl,\n            width: elementID === 'id_test_video' ? '100%' : 884,\n            height: elementID === 'id_test_video' ? '100%' : 500,\n            pip: false, // 画中画\n            screenShot: false,\n            autoplay: true,\n            lang: 'zh-cn',\n            playsinline: true,\n            ignores: ['volume']\n        }\n\n        let options = {\n            id: elementID,\n            url: url,\n            poster: room.coverPicUrl,\n            // playbackRate: [0.5, 0.75, 1, 1.5, 2],\n            // defaultPlaybackRate: 1,\n            rotate: { // 视频旋转按钮配置项\n                innerRotate: true, // 只旋转内部video\n                clockwise: false // 旋转方向是否为顺时针\n            },\n            pip: true, // 画中画\n            pipConfig: {\n                bottom: 200,\n                right: 0,\n                width: 320,\n                height: 180\n            },\n            screenShot: true, // 截图功能\n            autoplay: true, // 自动播放，行为会受到浏览器规则限制\n            // videoInit: true, // 在没有设置poster的情况下显示视频首帧,移动端无效\n            width: elementID === 'id_test_video' ? '100%' : 884,\n            height: elementID === 'id_test_video' ? '100%' : 500,\n            lang: 'zh-cn',\n            // useHls: true, // 插件解码\n            playsinline: true,\n            controls: true // isPc() // 控制条显示（移动端禁止）\n        }\n\n        // 弹幕\n        options.danmu = {\n            // panel: true,\n            comments: [],\n            area: { // 弹幕显示区域\n                start: 0.02, // 区域顶部到播放器顶部所占播放器高度的比例\n                end: 1.02 // 区域底部到播放器顶部所占播放器高度的比例\n            }\n        }\n\n        // 回放添加，变速按钮，弹幕数组\n        // 移动端回翻和pc端回放要区别开来\n        if (type === 'playback' && isPc()) {\n            options = {\n                ...options,\n                playbackRate: [0.5, 0.75, 1, 1.5, 2],\n                defaultPlaybackRate: 1\n            }\n\n            let commentsArray = []\n            for (const val of roomHistoryList) {\n                // console.log(`${val.content}: ${(val.updateTime - room.beginTime) / 1000}s`)\n                commentsArray.push({\n                    mode: 'scroll',\n                    duration: 10000,\n                    id: val.id,\n                    start: val.updateTime - room.beginTime,\n                    // txt: `${val.nickName}：${val.content}`,\n                    txt: val.content,\n                    style: commentStyle\n                })\n            }\n            options.danmu.comments = commentsArray\n        } else if (type === 'playback' && !isPc()) {\n            options = mobileoptions\n            // 根据横竖屏，先计算，出一个高度\n            if (room.roomType === 1) {\n                options.height = 211\n                // options.rotateFullscreen = true\n                options.cssFullscreen = true\n            } else {\n                options.height = 310\n            }\n        } else {\n            options.controls = false // 手机直播 隐藏控制条\n        }\n\n        let player = null\n        if (fileExtension(url) === 'flv') {\n            // iphone不支持flv----->https://github.com/bytedance/xgplayer/issues/385\n\n            // options = {\n            //     ...options,\n            //     isLive: type === 'playing',\n            //     cors: true\n            // }\n            // require('xgplayer')\n            // const FlvPlayer = require('xgplayer-flv')\n            // player = new FlvPlayer(options)\n            // console.log('000')\n\n            require('xgplayer')\n            options = {\n                ...options,\n                url: options.url.replace('.flv', '.m3u8')\n            }\n            const HlsJsPlayer = require('xgplayer-hls.js')\n            player = new HlsJsPlayer(options)\n        } else if (fileExtension(url) === 'm3u8') {\n            require('xgplayer')\n            const HlsJsPlayer = require('xgplayer-hls.js')\n            player = new HlsJsPlayer(options)\n        } else {\n            const Player = require('xgplayer')\n            require('xgplayer-mp4')\n            player = new Player(options)\n        }\n\n        // Usage: isAutoplaySupported(callback);\n        // Using a callback assures that support\n        // has been properly checked\n        isAutoplaySupported(function (supported) {\n            if (supported) {\n                // HTML5 Video Autoplay Supported!\n                console.log('HTML5 Video Autoplay Supported!')\n            } else {\n                // HTML5 Video Autoplay Not Supported :(\n                console.log('HTML5 Video Autoplay Not Supported :(')\n                player.once('canplay', function () {\n                    document.querySelector('.xgplayer-icon-large').setAttribute('style', 'display:none')\n                    document.querySelector('.xgplayer-icon-muted').setAttribute('style', 'display:block')\n                    player.video.muted = true\n                    player.play()\n                    setMutedBtnShow(true)\n                })\n            }\n        })\n\n        setPlayer(player)\n        window.livePlayer = player // 挂载到全局，以便发送评论时，发送弹幕\n\n        // roomHistoryList 服务端请求roomHistoryList，此处inputs加与不加，关系不大。服务端请求数据可减少startPlay数据判断\n    }, [])\n\n    // 点击上报事件\n    const livePush = liveGather()\n    useEffect(() => {\n        if (!player) return\n\n        console.log(1111)\n\n        player.on('play', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'play' } })\n        })\n        player.on('pause', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'pause' } })\n        })\n        player.on('requestFullscreen', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'fullscreen' } })\n        })\n        player.on('exitFullscreen', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'exit_fullscreen' } })\n        })\n    }, [player])\n    const roomStatus = useCallback((room) => {\n        let status = ''\n        switch (room.status) {\n            case 0:\n                status = 'not_started'\n                break\n            case 1:\n                status = 'living'\n                break\n            case 2:\n                status = 'finished'\n                break\n            default:\n                status = 'not_started'\n        }\n        return status\n    }, [])\n    useEffect(() => {\n        if (!room) return\n\n        // 页面刷新退出前，上报关闭直播间时，直播间状态\n        window.onbeforeunload = function () {\n            livePush({ eventId: 'exit_room', eventInfo: { state: roomStatus(room) } })\n        }\n    }, [room])\n    const [oldRoomStatus, setOldRoomStatus] = useState()\n    useEffect(() => {\n        // 未开始和直播中才上报\n        if (!room || (room.status !== 0 && room.status !== 1)) return\n\n        if (room.status === oldRoomStatus) return\n        setOldRoomStatus(room.status)\n\n        livePush({ eventId: 'enter_room', eventInfo: { state: roomStatus(room) } })\n    }, [room])\n\n    useEffect(() => {\n        if (!room) return\n        switch (room.status) {\n            case 0: // 即将开始\n                getCountTimeText()\n                break\n            case 1: // 直播中\n                let playingUrl = room.webPullStreamUrl ? room.webPullStreamUrl : room.pullStreamUrl\n\n                if (!playingUrl) {\n                    Toast.info('未获取到视频直播地址，请刷新试试')\n                    return\n                }\n\n                if (player === null) {\n                    if (playingUrl.indexOf('?txSecret=') > -1) playingUrl = (playingUrl.split('?txSecret='))[0]\n                    if (playingUrl.indexOf('https://') === -1) playingUrl = playingUrl.replace('http://', 'https://')\n                    startPlay(playingUrl, 'playing')\n                }\n                break\n            case 2: // 回放中\n                livePush({ eventId: 'enter_playback' })\n                let playbackUrl = room.recordVideoUrl\n                if (!playbackUrl) {\n                    // 会因为重复请求，而一直弹出\n                    // Toast.info('未获取到视频回放地址，请刷新试试')\n                    return\n                }\n\n                if (player !== null) {\n                    player.destroy(true)\n                    setPlayer(null)\n                }\n\n                if (playbackUrl.indexOf('https://') === -1) {\n                    playbackUrl = playbackUrl.replace('http://', 'https://')\n                }\n                startPlay(playbackUrl, 'playback')\n                break\n            default:\n                setTimeout(() => {\n                    Toast.info('直播间不存在或已删除')\n                }, 500)\n                break\n        }\n    }, [room])\n\n    // 监听人气值实时更新\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (room.status === 1) {\n                dispatch(getRoomPopularity({ roomIDs: room.roomId }))\n            }\n        }, 5000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [dispatch.live, room])\n\n    // 监听直播间状态，即将开始-->直播-->回放\n    useEffect(() => {\n        console.log(666)\n        const timer = setInterval(() => {\n            if (room.status === 0 || (room.status === 2 && !room.recordVideoUrl)) {\n                dispatch(getRoomByID({ roomId: room.roomId }))\n            } else {\n                clearInterval(timer)\n            }\n        }, 3000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [dispatch.live, room])\n\n    // 监听移动端点击播放\n    useEffect(() => {\n        if (!isPc() && player) {\n            document.body.onclick = () => {\n                player.play()\n            }\n        }\n    }, [player])\n\n    return { player, countTime, timeZero, setMutedBtnShow, mutedBtnShow }\n}\n","import { useState, useCallback } from 'react'\nimport axios from 'axios'\nimport TIM from 'tim-js-sdk'\n// import { imSdkAppId } from '../../../config/config-server'\n\nexport default () => {\n    const [im, setIm] = useState(null)\n    const [imReady, setImReady] = useState(false)\n    const [imLogin, setImLogin] = useState(false)\n    const [imJoin, setImJoin] = useState(false)\n\n    const createIM = useCallback((setTextMessageReceived) => {\n        const TWebLive = require('tweblive')\n\n        const im = TWebLive.createIM({\n            SDKAppID: 1400383128\n        })\n\n        const onIMReady = function (event) {\n            setImReady(true)\n        }\n        const onSdkNotReady = function (event) {\n            console.log(`用户被NotReady触发`)\n            setImReady(false)\n        }\n        // const onTextMessageReceived = function (event) {\n        //     event.data.forEach(function (message) {\n        //         console.log((message.from || message.nick) + ' : ', message.payload.text)\n        //     })\n        //     setTextMessageReceived(event)\n        // }\n        const onCustomMessageReceived = function (event) {\n            console.log('custom message received', event.data)\n            event.data.forEach(function (message) {\n                console.log((message.from || message.nick) + ' : ', message.payload.text)\n            })\n            setTextMessageReceived(event)\n        }\n        const onRemoteUserJoin = function (event) {\n            event.data.forEach(function (message) {\n                console.log((message.nick || message.payload.userIDList[0]) + ' 来了')\n            })\n        }\n        const onRemoteUserLeave = function (event) {\n            event.data.forEach(function (message) {\n                console.log((message.nick || message.payload.userIDList[0]) + ' 走了')\n            })\n        }\n        const onKickedOut = function (event) {\n            console.log(`用户被踢下线时触发`)\n            console.log(event.data.type)\n            // TWebLive.TYPES.KICKED_OUT_MULT_ACCOUNT(Web端，同一账号，多页面登录被踢)\n            // TWebLive.TYPES.KICKED_OUT_MULT_DEVICE(同一账号，多端登录被踢)\n            // TWebLive.TYPES.KICKED_OUT_USERSIG_EXPIRED(签名过期)\n        }\n        let onNetStateChange = function (event) {\n            console.log(`网络状态发生改变`)\n            console.log(event.data.state)\n            // event.data.state 当前网络状态，枚举值及说明如下：\n            // TWebLive.TYPES.NET_STATE_CONNECTED - 已接入网络\n            // TWebLive.TYPES.NET_STATE_CONNECTING - 连接中。很可能遇到网络抖动，SDK 在重试。接入侧可根据此状态提示“当前网络不稳定”或“连接中”\n            // TWebLive.TYPES.NET_STATE_DISCONNECTED - 未接入网络。接入侧可根据此状态提示“当前网络不可用”。SDK 仍会继续重试，若用户网络恢复，SDK 会自动同步消息\n        }\n        let onPushStopped = function (event) {\n            console.log(`主播停止推流时触发`)\n            console.log('postscript: ', event.data)\n        }\n\n        // 接入侧监听此事件，然后可调用 SDK 发送消息等\n        im.on(TWebLive.EVENT.IM_READY, onIMReady)\n        // 接入侧监听此事件，然后可调用 SDK 发送消息等\n        im.on(TWebLive.EVENT.IM_NOT_READY, onSdkNotReady)\n        // // 收到文本消息，上屏\n        // im.on(TWebLive.EVENT.IM_TEXT_MESSAGE_RECEIVED, onTextMessageReceived)\n        // // 收到自定义消息时触发\n        // im.on(TWebLive.EVENT.IM_CUSTOM_MESSAGE_RECEIVED, onCustomMessageReceived)\n        // 远程用户进入触发\n        im.on(TWebLive.EVENT.IM_REMOTE_USER_JOIN, onRemoteUserJoin)\n        // 远程用户离开触发\n        im.on(TWebLive.EVENT.IM_REMOTE_USER_LEAVE, onRemoteUserLeave)\n        // 远程用户离开\n        im.on(TWebLive.EVENT.IM_KICKED_OUT, onKickedOut)\n        // 网络状态改变\n        im.on(TWebLive.EVENT.IM_NET_STATE_CHANGED, onNetStateChange)\n        // 主播停止推流\n        im.on(TWebLive.EVENT.IM_PUSH_STOPPED, onPushStopped)\n        // tweblive不能接收到系统消息，通过tim接收\n        im._tim.on(TIM.EVENT.MESSAGE_RECEIVED, onCustomMessageReceived)\n\n        setIm(im)\n    }, [])\n\n    const getImLogin = useCallback(async (passportId) => {\n        const sigRes = await axios({ url: `/imusersig/${passportId}` })\n\n        // 2、登录\n        // im.registerPlugin({ 'cos-js-sdk': COS })\n        im.login({ userID: passportId, userSig: sigRes.data.data }).then((imResponse) => {\n            console.log('im.login')\n            console.log('登录成功')\n            console.log(imResponse) // 登录成功\n            // if (imResponse.data.repeatLogin === true) {\n            //     // 标识账号已登录，本次登录操作为重复登录\n            //     console.log(imResponse.data.errorInfo)\n            // }\n            setImLogin(true)\n        }).catch((imError) => {\n            console.log('登录失败')\n            console.warn('im | login | failed', imError) // 登录失败的相关信息\n            setImLogin(false)\n        })\n    }, [im])\n\n    const joinImRoom = useCallback((roomId) => {\n        const TWebLive = require('tweblive')\n\n        if (im.enterRoom) {\n            // 3、加入直播间\n            im.enterRoom(roomId).then((imResponse) => {\n                console.log(imResponse.data)\n                switch (imResponse.data.status) {\n                    case TWebLive.TYPES.ENTER_ROOM_SUCCESS: // 加入直播间成功\n                        console.log('成功加入直播间')\n                        setImJoin(true)\n                        break\n                    case TWebLive.TYPES.ALREADY_IN_ROOM: // 已经在直播间内\n                        console.log('已经在直播间里')\n                        setImJoin(true)\n                        break\n                    default:\n                        setImJoin(false)\n                        break\n                }\n            }).catch((imError) => {\n                console.warn('im | enterRoom | failed', imError) // 加入直播间失败的相关信息\n                setImJoin(false)\n            })\n        }\n    }, [im])\n\n    return {\n        imReady,\n        imLogin,\n        imJoin,\n        createIM,\n        getImLogin,\n        joinImRoom,\n        setImLogin,\n        setImJoin,\n        im\n    }\n}\n","module.exports = __webpack_public_path__ + \"live_detail_type_2-8a275757.gif\";","module.exports = __webpack_public_path__ + \"live_detail_pop-e84b1852.png\";","module.exports = __webpack_public_path__ + \"live-tip-warning-63dcc696.png\";","module.exports = __webpack_public_path__ + \"live-tip-clear-f707987a.png\";","module.exports = __webpack_public_path__ + \"live-tip-close-77eb6637.png\";","module.exports = __webpack_public_path__ + \"live-tip-cross-e684198f.png\";","module.exports = __webpack_public_path__ + \"live_chat_nolive-79dc86f9.png\";","module.exports = __webpack_public_path__ + \"live-join-phone-1baef09e.png\";","module.exports = __webpack_public_path__ + \"live-join-wx-368c013c.png\";","import React from 'react'\nimport { formatTime } from 'multiPublic'\n\nimport './index.scss'\n\nimport { Avatar } from 'multiComps/AuthorInfo'\nimport typeIcon2 from '../../image/live_detail_type_2.gif'\nimport popIcon from '../../image/live_detail_pop.png'\nimport warningIcon from '../../image/live-tip-warning.png'\n\nexport default (props) => {\n    const {\n        status, // 当前直播状态  0即将开始 1直播中 2回放中\n        name, // 直播间标题\n        type2, // 直播间分类\n        beginTime, // 直播时间\n        presenterList, // 直播主持人列表\n        popularity, // 初始观看人数\n        pop, // 观看人次列表\n        onBtnGetTipAddClick // 点击举报按钮事件\n    } = props\n\n    let playNum = pop.popularity ? pop.popularity : (popularity && popularity !== 0 ? popularity : 0)\n    let playNumText = playNum\n    if (playNum > 1000000) {\n        playNumText = `99.9万+`\n    } else if (playNum > 10000) {\n        playNumText = `${(playNum / 10000).toFixed(1)}万`\n    }\n\n    return (\n        <div className=\"im-live-detail-left-live-video-header\">\n            <Avatar className=\"im-live-detail-left-live-video-header-img\" authorInfo={presenterList[0]} />\n            <div className=\"im-live-detail-left-live-video-header-info\">\n                <div className=\"im-live-detail-left-live-video-header-top-box\">\n                    <div className=\"im-live-detail-left-live-video-header-top-left\">\n                        {status !== undefined && status === 0 && <div className=\"im-live-detail-left-live-video-header-icon im-live-detail-left-live-video-header-type1\">即将开始</div>}\n                        {status !== undefined && status === 1 && <div className=\"im-live-detail-left-live-video-header-icon im-live-detail-left-live-video-header-type2\">\n                            <img src={typeIcon2} style={{ height: '16px', marginRight: '4px' }} />\n                            直播中\n                        </div>}\n                        {status !== undefined && status === 2 && <div className=\"im-live-detail-left-live-video-header-icon im-live-detail-left-live-video-header-type3\">回放中</div>}\n                        {name && name !== '' && <div className=\"im-live-detail-left-live-video-header-title\" title={name}>{name}</div>}\n                        {type2 && type2 !== '' && <div className=\"im-live-detail-left-live-video-header-title-sp\">{type2}</div>}\n                    </div>\n                    <div className=\"im-live-detail-left-live-video-header-top-text\">\n                        <img className=\"im-live-detail-left-live-video-header-top-text-icon\" src={popIcon} />\n                        {`观看人次：${playNumText}`}\n                    </div>\n                </div>\n                <div className=\"im-live-detail-left-live-video-header-bottom-box\">\n                    <div className=\"im-live-detail-left-live-video-header-bottom-left\">\n                        {name && name !== '' && <div className=\"im-live-detail-left-live-video-header-bottom-text\">{`主播：${presenterList && presenterList.length > 0 && presenterList[0].nickName !== '' ? presenterList[0].nickName : ''}`}</div>}\n                        {beginTime && beginTime !== '' && <div className=\"im-live-detail-left-live-video-header-bottom-text\">{`直播时间：${formatTime(beginTime, 'yyyy-MM-dd hh:mm')}`}</div>}\n                    </div>\n                    <div className=\"im-live-detail-left-live-video-header-bottom-right\" onClick={() => onBtnGetTipAddClick()}>\n                        <img className=\"im-live-detail-left-live-video-header-bottom-right-icon\" src={warningIcon} />\n                        举报\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React, { useState, useCallback, useRef } from 'react'\n\nimport './index.scss'\n\nimport { trim } from 'multiPublic'\nimport Toast from 'multiComps/Toast'\nimport { uploadImg, getLiveTipAdd } from '../../../redux/actions/live'\nimport clearIcon from '../image/live-tip-clear.png'\nimport closeIcon from '../image/live-tip-close.png'\nimport crossIcon from '../image/live-tip-cross.png'\n\n// 举报类型数组\nconst typeArr = [\n    { type: 1, name: '违法违禁' },\n    { type: 2, name: '淫秽色情' },\n    { type: 3, name: '抽烟喝酒' },\n    { type: 4, name: '危险行为' },\n    { type: 5, name: '侮辱谩骂' },\n    { type: 6, name: '其他' }\n]\n\nexport default (props) => {\n    const { room, onBtnGetTipAddClick } = props\n    const [nowType, setNowType] = useState(0) // 当前选择的举报类型\n    const [textImg, setTextImg] = useState('') // 举报图片\n    const [isUpImg, setIsUpImg] = useState(false) // 是否正在上传图片\n    const textArea = useRef() // 输入框实例\n    const curWordsNum = useRef() // 输入字数\n\n    /** @desc 评论输入字数量 */\n    const wordsNum = useCallback((event) => {\n        const val = trim(event.target.value)\n        if (val.length <= 100) {\n            curWordsNum.current.innerText = val.length\n        } else {\n            event.target.value = val.substring(0, 300)\n        }\n    }, [])\n\n    // 点击举报类型按钮事件\n    const onBtnChangeTypeClick = useCallback(\n        (type) => {\n            setNowType(type)\n        },\n        []\n    )\n\n    // 图片地址转换Blob格式\n    const dataURLtoBlob = (dataurl) => {\n        let arr = dataurl.split(',')\n        let mime = arr[0].match(/:(.*?);/)[1]\n        let bstr = atob(arr[1])\n        let n = bstr.length\n        let u8arr = new Uint8Array(n)\n        while (n--) {\n            u8arr[n] = bstr.charCodeAt(n)\n        }\n        return new Blob([u8arr], { type: mime })\n    }\n\n    // 上传图片事件\n    const coverImgUpload = useCallback(\n        (e) => {\n            let file = e.target.files[0] // 获取文件\n            if (window.FileReader) { // 如果浏览器支持FileReader\n                const reader = new FileReader() // 新建一个FileReader对象\n                reader.readAsDataURL(file) // 读取文件url\n                reader.onloadend = (e) => {\n                    setTextImg(e.target.result)\n                    setIsUpImg(true)\n                    uploadImg({\n                        uploadFile: dataURLtoBlob(e.target.result),\n                        type: 'news',\n                        data: '',\n                        watermark: 0\n                    }).then((res) => {\n                        if (res.code === 1) {\n                            setTextImg(res.obj)\n                        }\n                        setIsUpImg(false)\n                    }).catch((err) => {\n                        console.log('上传图片失败')\n                        setIsUpImg(false)\n                        throw err\n                    })\n                }\n            }\n        },\n        []\n    )\n\n    // 点击取消图片事件\n    const closeImg = useCallback(\n        () => {\n            setTextImg('')\n        },\n        []\n    )\n\n    // 点击提交按钮事件\n    const onBtnOKClick = useCallback(\n        () => {\n            if (isUpImg === true) return\n            if (nowType === 0) {\n                Toast.info('请选择举报类型')\n                return\n            }\n\n            let passportId = room.presenterList && room.presenterList.length > 0 ? room.presenterList[0].passportId : ''\n            if (passportId === '') return\n            let val = trim(textArea.current.value)\n            let obj = {\n                roomId: room.roomId,\n                passportId: passportId,\n                type: nowType,\n                reason: val,\n                imgUrl: textImg\n            }\n\n            getLiveTipAdd(obj).then((res) => {\n                if (res.code === 1) {\n                    Toast.info('举报成功')\n                    setTimeout(() => {\n                        onBtnGetTipAddClick()\n                    }, 1000)\n                }\n            }).catch((err) => {\n                Toast.info('举报失败')\n                throw err\n            })\n        },\n        [isUpImg, nowType, onBtnGetTipAddClick]\n    )\n\n    // 点击取消按钮事件\n    const onBtnClearClick = useCallback(\n        () => {\n            onBtnGetTipAddClick()\n        },\n        [onBtnGetTipAddClick]\n    )\n\n    return (\n        <div className=\"im-live-tip-box\">\n            <div className=\"im-live-tip-box-bg\"></div>\n            <div className=\"im-live-tip-box-popup\">\n                <div className=\"im-live-tip-box-top\">\n                    <div className=\"im-live-tip-box-title\">举报理由</div>\n                    <div className=\"im-live-tip-box-clear\" onClick={() => onBtnClearClick()}>\n                        <img className=\"im-live-tip-box-clear-img\" src={clearIcon} />\n                    </div>\n                </div>\n                <div className=\"im-live-tip-box-type-list\">\n                    {\n                        typeArr.map((item, index) => {\n                            return (\n                                <div className={`im-live-tip-box-type-item ${item.type === nowType ? 'im-live-tip-box-type-item-active' : ''}`} key={index} onClick={() => onBtnChangeTypeClick(item.type)} >\n                                    {item.name}\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"im-live-tip-box-reason\">\n                    <textarea className=\"im-live-tip-box-reason-input\" placeholder=\"（必填）填写举报理由与上传截图，可让快速处理相关问题\" ref={textArea} onChange={wordsNum}></textarea>\n                    <div className=\"im-live-tip-box-reason-input-sp\"><em ref={curWordsNum}>0</em>/300</div>\n                </div>\n                <div className=\"im-live-tip-box-update\">\n                    <div className=\"im-live-tip-box-update-img-bg\">\n                        <img className={`im-live-tip-box-update-img-cross ${textImg !== '' ? 'im-live-tip-box-update-img-text' : ''}`} src={textImg !== '' ? textImg : crossIcon} />\n                        <input className=\"im-live-tip-box-update-img-inputfile\" onChange={(e) => coverImgUpload(e)} name=\"file\" id=\"file\" type=\"file\" accept=\".jpg,.jpeg,.png\" />\n                        {textImg !== '' ? <img className=\"im-live-tip-box-update-img-close\" onClick={() => closeImg()} src={closeIcon} /> : null}\n                    </div>\n                    <div className=\"im-live-tip-box-update-text\">（必填）图片大小不超过4M</div>\n                </div>\n                <div className=\"im-live-tip-box-btn\" onClick={() => onBtnOKClick()}>提交</div>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\n\nimport './index.scss'\n\nimport LeftLiveVideoHeader from '../../../components/ImLiveDetail/LeftLiveVideo/LeftLiveVideoHeader'\n// import LeftLiveVideoFooter from '../../../components/ImLiveDetail/LeftLiveVideo/LeftLiveVideoFooter'\nimport LiveTipBox from '../../../components/ImLiveDetail/LiveTipBox'\nimport useTWebLivePlayer from '../../../public/hooks/useTWebLivePlayer'\nimport { windowScroll, scrollOffset, isArray } from 'multiPublic'\n\nexport default () => {\n    const { room, popularityList } = useSelector((state) => ({\n        room: state.live.room,\n        popularityList: state.live.popularityList\n    }), shallowEqual)\n    const {\n        player,\n        countTime,\n        timeZero,\n        setMutedBtnShow,\n        mutedBtnShow\n    } = useTWebLivePlayer({ elementID: 'im-live-detail-left-live-video' })\n    const [isPip, setIsPip] = useState(0)\n    const [isTipShow, setIsTipShow] = useState(false) // 是否显示举报弹窗\n\n    // 滚动画中画\n    useEffect(() => {\n        if ((room.status !== 2 && room.status !== 1) || !player) return\n        const box = document.getElementById('im-live-detail-left-live-video')\n        const scrollFunc = windowScroll((res) => {\n            if (res === 'down' && isPip === 0 && scrollOffset().top > 600) {\n                player.getPIP()\n                setIsPip(1)\n                box.style.zIndex = 1000\n            }\n\n            if (res === 'up' && isPip === 1 && scrollOffset().top < 600) {\n                player.exitPIP()\n                setIsPip(0)\n                box.style.zIndex = 0\n            }\n        })\n\n        return () => {\n            window.removeEventListener('scroll', scrollFunc, false)\n        }\n    }, [room, player, isPip])\n\n    // 点击举报按钮事件\n    const onBtnGetTipAddClick = useCallback(\n        () => {\n            setIsTipShow(!isTipShow)\n        },\n        [isTipShow]\n    )\n\n    return (\n        <div className=\"im-live-detail-left-live-video\">\n            <LeftLiveVideoHeader {...room} pop={popularityList && isArray(popularityList) && popularityList.length > 0 ? popularityList[0] : 0} onBtnGetTipAddClick={onBtnGetTipAddClick} />\n            <div className=\"im-live-detail-left-live-video-wrapper\">\n                {room.status === 0 || (room.status === 2 && !room.recordVideoUrl) ? <img className=\"im-live-detail-left-live-video-bg\" src={room.coverPicUrl} /> : null}\n                <div className=\"im-live-detail-video-wrapper\">\n                    <div id=\"im-live-detail-left-live-video\" style={{ width: '100%', height: '100%', zIndex: 0 }}></div>\n                    <div className=\"click-cancel-muted\" style={{ display: mutedBtnShow ? 'block' : 'none' }} onClick={() => {\n                        if (!player) return\n                        setMutedBtnShow(false)\n                    }}>\n                        <button>点击取消静音</button>\n                    </div>\n                </div>\n                {room.status === 0 ? <div className=\"im-live-detail-left-live-video-footer\">\n                    {countTime.d === 0 && countTime.h === 0 && countTime.m === 0 && countTime.s === 0\n                        ? <div className=\"im-live-detail-left-live-video-footer-text1\">主播马上就到，敬请期待</div>\n                        : <div className=\"im-live-detail-left-live-video-footer-text1\">距开播预计还剩</div>}\n                    {countTime.d === 0 && countTime.h === 0 && countTime.m === 0 && countTime.s === 0 ? null\n                        : <div className=\"im-live-detail-left-live-video-footer-text2\">\n                            {timeZero(countTime.d)}\n                            <span className=\"im-live-detail-left-live-video-footer-text1\">天</span>\n                            {timeZero(countTime.h)}\n                            <span className=\"im-live-detail-left-live-video-footer-text1\">时</span>\n                            {timeZero(countTime.m)}\n                            <span className=\"im-live-detail-left-live-video-footer-text1\">分</span>\n                            {timeZero(countTime.s)}\n                            <span className=\"im-live-detail-left-live-video-footer-text1\">秒</span>\n                        </div>}\n                </div> : null}\n                {room.status === 2 && !room.recordVideoUrl ? <div className=\"im-live-detail-left-live-video-footer\">\n                    <div className=\"im-live-detail-left-live-video-footer-text1\">直播已结束，回放制作中，敬请期待</div>\n                </div> : null}\n            </div>\n            {/* <LeftLiveVideoFooter {...room} countTime={countTime} /> */}\n            {isTipShow === true ? <LiveTipBox room={room} onBtnGetTipAddClick={onBtnGetTipAddClick} /> : null}\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\n\nimport './index.scss'\n\n// import joinIcon from '../Image/live-ad-join.png'\n\nexport default () => {\n    const { liveDetailImgData } = useSelector((state) => ({\n        liveDetailImgData: state.home.liveDetailImgData\n    }), shallowEqual)\n\n    return (\n        <div className=\"im-live-detail-left-live-ad\">\n            <a className=\"im-live-list-right-join-box\" href={liveDetailImgData.length > 0 ? liveDetailImgData[0].url : ''} target=\"_blank\">\n                <img className=\"im-live-detail-left-live-ad-img\" src={liveDetailImgData.length > 0 ? liveDetailImgData[0].pcImgSrc : ''} />\n            </a>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport default (props) => {\n    const {\n        brief // 直播简介\n    } = props\n\n    return (\n        <div className=\"im-live-detail-left-live-info\">\n            <div className=\"ql-container ql-snow\">\n                <div className=\"ql-editor\" dangerouslySetInnerHTML={{ __html: brief }} />\n            </div>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport './index.scss'\n\nimport LeftLiveInfo from '../../../components/ImLiveDetail/LeftLiveInfo'\nimport LeftLiveRecommend from '../../../components/ImLiveDetail/LeftLiveRecommend'\n\nconst typeName = {\n    INFO: 'info',\n    RECOMMEND: 'recommend'\n}\n\nexport default () => {\n    const { t } = useTranslation()\n    const { brief, roomLiveRecommendList } = useSelector((state) => ({\n        brief: state.live.room.brief,\n        roomLiveRecommendList: state.live.roomLiveRecommendList.inforList // 推荐列表\n    }), shallowEqual)\n    const [nowType, setNowType] = useState(typeName.INFO)\n\n    // 点击切换标签按钮事件\n    const onBtnTypeClick = (type) => {\n        setNowType(type)\n    }\n\n    return (\n        <div className=\"im-live-detail-left-live-bottom-box\">\n            <div className=\"im-live-detail-left-live-bottom-box-header\">\n                <div className=\"im-live-detail-left-live-bottom-box-header-item\" onClick={() => onBtnTypeClick(typeName.INFO)}>\n                    <div className={`im-live-detail-left-live-bottom-box-header-text ${nowType === typeName.INFO ? 'im-live-detail-left-live-bottom-box-header-select' : ''}`}>\n                        {t('live_brief')}\n                    </div>\n                    {nowType === typeName.INFO && <div className=\"im-live-detail-left-live-bottom-box-header-line\"></div>}\n                </div>\n                <div className=\"im-live-detail-left-live-bottom-box-header-item\" onClick={() => onBtnTypeClick(typeName.RECOMMEND)}>\n                    <div className={`im-live-detail-left-live-bottom-box-header-text ${nowType === typeName.RECOMMEND ? 'im-live-detail-left-live-bottom-box-header-select' : ''}`}>\n                      {t('live_tj_strem')}\n                    </div>\n                    {nowType === typeName.RECOMMEND && <div className=\"im-live-detail-left-live-bottom-box-header-line\"></div>}\n                </div>\n            </div>\n            <div className=\"im-live-detail-left-live-bottom-box-wrapper\">\n                {nowType === typeName.INFO && <LeftLiveInfo brief={brief} />}\n                {nowType === typeName.RECOMMEND && <LeftLiveRecommend listData={roomLiveRecommendList} />}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n// import { urlToLink } from 'multiPublic/index'\nimport anchorme from 'anchorme'\n\nimport './index.scss'\n\nexport default (props) => {\n    const {\n        type, // 类型 0.普通 1.主播 2.嘉宾 98.加入信息 99.系统\n        nick, // 姓名\n        text // 内容\n    } = props\n\n    const textClass = type !== undefined\n        ? type === 99 ? 'im-live-detail-right-chart-item-sys'\n            : type === 98 ? 'im-live-detail-right-chart-item-name'\n                : ''\n        : ''\n\n    return (\n        <div className=\"im-live-detail-right-chart-item\">\n            {type !== undefined && type === 1 && <span className=\"im-live-detail-right-chart-item-sp im-live-detail-right-chart-item-icon1\">主播</span>}\n            {type !== undefined && type === 2 && <span className=\"im-live-detail-right-chart-item-sp im-live-detail-right-chart-item-icon2\">嘉宾</span>}\n            {nick !== undefined && <span className=\"im-live-detail-right-chart-item-name\">{`${nick}：`}</span>}\n            {/* {text !== undefined\n                ? type === 1 || type === 2\n                    ? <span className={`im-live-chart-item ${textClass}`} dangerouslySetInnerHTML={{ __html: urlToLink(text) }} />\n                    : <span className={textClass}>{text}</span>\n                : ''} */}\n            {/* {text !== undefined\n                ? <span className={`im-live-chart-item ${textClass}`} dangerouslySetInnerHTML={{ __html: urlToLink(text) }} />\n                : ''\n            } */}\n            {text !== undefined\n                ? <span className={`im-live-chart-item ${textClass}`}\n                    dangerouslySetInnerHTML={{\n                        __html: anchorme({\n                            input: text,\n                            options: {\n                                attributes: {\n                                    target: '_blank'\n                                }\n                            }\n                        })\n                    }}\n                />\n                : ''\n            }\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport md5 from 'blueimp-md5'\nimport { useTranslation } from 'react-i18next'\n\nimport './index.scss'\n\nimport { trim, isArray, uuid, elementOffset } from 'multiPublic'\nimport { loginShowHide, renameShowHide } from 'multiRedux/actions/login'\nimport { liveComentSend, getRoomByID } from '../../../redux/actions/live'\nimport ImLiveChatItem from '../../../components/ImLiveDetail/ImLiveChatItem'\nimport RightLiveBoxTitle from '../../../components/ImLiveDetail/RightLiveBoxTitle'\nimport useTWebLiveIm from '../../../public/hooks/useTWebLiveIm'\nimport noLiveIcon from '../Image/live_chat_nolive.png'\nimport liveGather from '../../../public/hooks/useLiveGather'\n// import { commentStyle } from '../../../public/hooks/useTWebLivePlayer'\nimport Toast from 'multiComps/Toast'\n\nexport default () => {\n    const livePush = liveGather()\n\n    const { t } = useTranslation()\n\n    const { room, userInfo, roomHistoryList } = useSelector((state) => ({\n        room: state.live.room,\n        roomHistoryList: state.live.roomHistoryList,\n        userInfo: state.login.userInfo.info\n    }), shallowEqual)\n    // console.log(roomHistoryList, 2222)\n    const dispatch = useDispatch()\n    const [listData, setListData] = useState([])\n    const [isClickChat, setIsClickChat] = useState(0)\n    const curWordsNum = useRef()\n    const textArea = useRef()\n    const listScroll = useRef()\n    const timeImLogin = useRef()\n    const timeImJoin = useRef()\n\n    // 发送弹幕\n    // const sendDamu = useCallback((val) => {\n    //     if (!window.livePlayer) return\n    //     window.livePlayer.danmu.sendComment({\n    //         mode: 'scroll',\n    //         duration: 15000,\n    //         id: uuid(),\n    //         txt: val,\n    //         style: commentStyle\n    //     })\n    // }, [])\n\n    // console.log(listData)\n\n    // 监听聊天室新信息\n    const onTextMessageReceived = (event) => {\n        if (!event || !event.data || !isArray(event.data)) return\n        event.data.map((elementItem) => {\n            if (!elementItem.type) return\n            switch (elementItem.type) {\n                case 'TIMCustomElem':\n                    if (!elementItem.payload || !elementItem.payload.data) return\n                    let cmd = JSON.parse(elementItem.payload.data).cmd\n                    if (cmd === 'CustomTextMsg') {\n                        if (!elementItem._elements || !isArray(elementItem._elements)) return\n                        let obj = { type: 0 }\n                        elementItem._elements.map((item) => {\n                            if (item.type === 'TIMCustomElem') {\n                                let data = JSON.parse(item.content.data).data\n                                obj.nick = data.nickName\n                                obj.msgId = data.msgId\n\n                                let presenterList = !room.presenterList ? [] : room.presenterList\n                                presenterList.map((presenterItem) => {\n                                    if (data.passportId === presenterItem.passportId) {\n                                        obj.type = 1\n                                    }\n                                })\n\n                                let guestList = !room.guestList ? [] : room.guestList\n                                guestList.map((guesItem) => {\n                                    if (data.passportId === guesItem.passportId) {\n                                        obj.type = 2\n                                    }\n                                })\n                            } else if (item.type === 'TIMTextElem') {\n                                obj.text = item.content.text\n                            } else {\n                                console.log('====================================')\n                                console.log(`新的类型参数：${item}`)\n                                console.log('====================================')\n                            }\n                        })\n\n                        setChatItem(obj)\n                        // sendDamu(obj.text)\n                    }\n                    break\n                case 'TIMGroupSystemNoticeElem':\n                    if (!elementItem.payload) return\n                    if (elementItem.payload.userDefinedField && elementItem.payload.userDefinedField !== '') {\n                        let userDefinedField = JSON.parse(elementItem.payload.userDefinedField)\n                        let cmd = userDefinedField.cmd\n\n                        // 删除评论\n                        if (cmd === 'delMsgHx' && userDefinedField.data && userDefinedField.data.msgId) {\n                            delChatItem(userDefinedField.data.msgId)\n                        }\n\n                        // 禁言\n                        if (cmd === 'forbidMsgHx' && userDefinedField.data && userDefinedField.data.passportId && userDefinedField.data.content) {\n                            if (userInfo.passportId && userInfo.passportId === userDefinedField.data.passportId) {\n                                setChatItem({ type: 99, text: userDefinedField.data.content })\n                            }\n                        }\n                    } else if (elementItem.payload.operationType && elementItem.payload.operationType === 5) {\n                        // 直播间直播结束（群被解散）\n                        dispatch(getRoomByID({ roomId: room.roomId }))\n                        setImJoin(false)\n                    }\n                    break\n                default:\n                    break\n            }\n        })\n    }\n\n    const { createIM, getImLogin, joinImRoom, setImJoin, im, imReady, imLogin, imJoin } = useTWebLiveIm()\n\n    useEffect(() => {\n        let status = room.status ? room.status : 0\n        switch (status) {\n            case 0:\n                setIsClickChat(1)\n                break\n            case 1:\n                setIsClickChat(0)\n                break\n            case 2:\n                setIsClickChat(1)\n                break\n            default:\n                break\n        }\n    }, [room])\n\n    // 加载回放中历史聊天记录\n    useEffect(() => {\n        if (room.status === 0) return\n        if (roomHistoryList && isArray(roomHistoryList) && roomHistoryList.length > 0) {\n            setListData([])\n            roomHistoryList.map((item) => {\n                let obj = {\n                    nick: item.nickName,\n                    text: item.content,\n                    type: 0\n                }\n\n                let presenterList = !room.presenterList ? [] : room.presenterList\n                presenterList.map((presenterItem) => {\n                    if (item.passportId === presenterItem.passportId) {\n                        obj.type = 1\n                    }\n                })\n\n                let guestList = !room.guestList ? [] : room.guestList\n                guestList.map((guesItem) => {\n                    if (item.passportId === guesItem.passportId) {\n                        obj.type = 2\n                    }\n                })\n\n                setChatItem(obj)\n            })\n\n            setTimeout(() => {\n                listScroll.current.scrollIntoView(false) // 移动到列表底部\n            }, 500)\n        }\n    }, [room, roomHistoryList])\n\n    // 创建直播间\n    useEffect(() => {\n        if (room.status !== 1) return\n        createIM(onTextMessageReceived)\n    }, [room.status])\n    // 登录\n    useEffect(() => {\n        if (!im) return\n        // 未登录下用 uuid md5 取第8-24位\n        const passportId = !userInfo.passportId ? md5(uuid()).substring(7, 23) : userInfo.passportId\n        getImLogin(passportId)\n    }, [im, userInfo])\n    // 加入聊天室\n    useEffect(() => {\n        if (timeImLogin.current) {\n            clearInterval(timeImLogin.current)\n            timeImLogin.current = null\n        }\n\n        if (imReady) {\n            if (!imLogin && room.status === 1) {\n                timeImLogin.current = setInterval(() => {\n                    // 未登录下用 uuid md5 取第8-24位\n                    const passportId = !userInfo.passportId ? md5(uuid()).substring(7, 23) : userInfo.passportId\n                    getImLogin(passportId)\n                }, 10000)\n            } else {\n                clearInterval(timeImLogin.current)\n                timeImLogin.current = null\n                joinImRoom(room.roomId)\n            }\n        }\n\n        return () => {\n            clearInterval(timeImLogin.current)\n        }\n    }, [imReady, imLogin, userInfo, room.status])\n    // 掉线后循环请求加入\n    useEffect(() => {\n        if (timeImJoin.current) {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n        if (!imJoin && room.status === 1) {\n            timeImJoin.current = setInterval(() => {\n                joinImRoom(room.roomId)\n            }, 10000)\n        } else {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n\n        return () => {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n    }, [room.status, imJoin])\n    useEffect(() => {\n        if (imReady === true && imLogin === true && imJoin === true) {\n            setChatItem({ type: 98, text: '欢迎来到MarsBit直播间！直播间内严禁出现违法违规、低俗色情、吸烟酗酒等内容，若有违规行为请及时举报' })\n\n            setTimeout(() => {\n                listScroll.current.scrollIntoView(false) // 移动到列表底部\n            }, 500)\n        }\n    }, [imReady, imLogin, imJoin])\n\n    // 插入聊天\n    const setChatItem = useCallback((data) => {\n        let list = listData\n        list.push(data)\n\n        if (elementOffset(listScroll.current).bottom === 645) {\n            setListData(JSON.parse(JSON.stringify(list)))\n            listScroll.current.scrollIntoView(false) // 移动到列表底部\n        } else {\n            setListData(JSON.parse(JSON.stringify(list)))\n            // console.log(JSON.parse(JSON.stringify(list)), 222)\n        }\n    }, [])\n\n    // 删除聊天\n    const delChatItem = useCallback(\n        (msgId) => {\n            let list = listData\n            for (let i = 0; i < list.length; i++) {\n                if (list[i].msgId && list[i].msgId === msgId) {\n                    list.splice(i, 1)\n                    break\n                }\n            }\n\n            if (elementOffset(listScroll.current).bottom === 645) {\n                setListData(JSON.parse(JSON.stringify(list)))\n                listScroll.current.scrollIntoView(false) // 移动到列表底部\n            } else {\n                setListData(JSON.parse(JSON.stringify(list)))\n            }\n        },\n        []\n    )\n\n    /** @desc 评论输入字数量 */\n    const wordsNum = useCallback((event) => {\n        const val = trim(event.target.value)\n        if (val.length <= 100) {\n            curWordsNum.current.innerText = val.length\n        } else {\n            event.target.value = val.substring(0, 100)\n        }\n    }, [])\n\n    // 发送评论\n    // im.sendCustomMessage() 由于存在自定义消息，故用系统发送消息办法\n    const setAddChat = useCallback(async () => {\n        if (!imJoin || isClickChat === 1) return\n\n        if (!userInfo.passportId) {\n            dispatch(loginShowHide('account', true))\n            return\n        }\n\n        if (!userInfo.nickName || userInfo.nickName === '') {\n            return\n        } else {\n            const zg = /^[0-9a-zA-Z]*$/\n            const text = userInfo.nickName.split('MarsBit')\n\n            if (text.length === 2 && text[0] === '' && zg.test(text[1])) {\n                dispatch(renameShowHide(true))\n                return\n            }\n        }\n\n        const val = trim(textArea.current.value)\n        if (val === '') return\n\n        try {\n            setIsClickChat(1)\n\n            const res = await liveComentSend({\n                roomId: room.roomId,\n                passportId: userInfo.passportId,\n                nickName: userInfo.nickName,\n                content: val\n            })\n\n            if (!res || res.code !== 1) {\n                // console.log(res)\n                // textArea.current.value = res.msg ? res.msg : '发送失败'\n                Toast.info(res.msg ? res.msg : '发送失败')\n                setIsClickChat(0)\n            } else {\n                setIsClickChat(0)\n                livePush({ eventId: 'send_msg' })\n            }\n            textArea.current.value = ''\n            textArea.current.focus()\n            listScroll.current.scrollIntoView(false) // 移动到列表底部\n        } catch (err) {\n            console.log('im | sendCustomMessage | failed', err)\n            setIsClickChat(0)\n        }\n    }, [imJoin, isClickChat, userInfo])\n\n    /** @desc 登录弹出 */\n    const loginPopup = useCallback(() => {\n        if (room && room.status === 2) return\n        dispatch(loginShowHide('account', true))\n    }, [])\n\n    return (\n        <div className=\"im-live-detail-right-live-chat\">\n            <RightLiveBoxTitle title={t('live_commincation')} />\n            {room && room.status !== undefined && room.status === 0 && <div className=\"im-live-detail-right-live-chat-nolive\">\n                <img className=\"im-live-detail-right-live-chat-nolive-icon\" src={noLiveIcon} />\n                {t('live_not_start')}\n            </div>}\n            <div className=\"im-live-detail-right-live-chat-list\" >\n                <div className=\"im-live-detail-right-live-chat-list-box\" id=\"id_scroll\" ref={listScroll}>\n                    {\n                        listData && listData.map((item, index) => {\n                            if (!item.text) return\n                            return (\n                                <ImLiveChatItem {...item} key={index} />\n                            )\n                        })\n                    }\n                </div>\n            </div>\n            <div className=\"im-live-detail-right-live-chat-input-box\">\n                {(!userInfo.passportId || (room && room.status !== undefined && room.status !== 1)) && <div className={`im-live-detail-right-live-chat-input ${room && room.status !== undefined && room.status === 2 ? 'im-live-detail-right-live-chat-input-end' : 'im-live-detail-right-live-chat-input-noload'}`} onClick={loginPopup}>\n                    {room && room.status !== undefined && room.status === 2 ? null : <span className=\"im-live-detail-right-live-chat-input-noload-sp\">登录</span>}\n                    {room && room.status !== undefined && room.status === 2 ? t('live_finsh') : t('live_to_say')}\n                </div>}\n                {\n                    userInfo &&\n                    userInfo.passportId &&\n                    room &&\n                    room.status !== undefined &&\n                    room.status === 1 &&\n                    <textarea\n                        className=\"im-live-detail-right-live-chat-input\"\n                        ref={textArea}\n                        onChange={wordsNum}\n                        onKeyUp={(event) => {\n                            if (event && event.type === 'keyup' && event.keyCode !== 13) return\n                            setAddChat()\n                        }}\n                        disabled={isClickChat === 1 || !imJoin}\n                    />\n                }\n                <div className=\"im-live-detail-right-live-chat-btn-box\">\n                    <div className=\"im-live-detail-right-live-btn-sp\"><em ref={curWordsNum}>0</em>/100</div>\n                    <div className={`im-live-detail-right-live-chat-btn ${room && room.status !== undefined && room.status !== 2 && isClickChat === 0 && imJoin === true ? 'im-live-detail-right-live-chat-btn-ok' : ''}`} onClick={setAddChat}>{t('live_send')}</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\n\nimport './index.scss'\n\nimport { isArray } from 'multiPublic'\nimport RightLiveBoxTitle from '../../../components/ImLiveDetail/RightLiveBoxTitle'\nimport RightLiveGoodUpItem from '../../../components/ImLiveList/RightLiveGoodUpItem'\n\nexport default () => {\n    const { room } = useSelector((state) => ({\n        room: state.live.room\n    }), shallowEqual)\n    return (\n        <div className=\"im-live-detail-right-live-presenter\">\n            <RightLiveBoxTitle title={'主讲人'} />\n            <div className=\"im-live-detail-right-live-presenter-box\">\n                {\n                    room.presenterList && isArray(room.presenterList) && room.presenterList.map((item, index) => {\n                        return (\n                            <RightLiveGoodUpItem {...item} key={index} />\n                        )\n                    })\n                }\n                {\n                    room.guestList && isArray(room.guestList) && room.guestList.map((item, index) => {\n                        return (\n                            <RightLiveGoodUpItem {...item} key={index} />\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nimport RightLiveBoxTitle from '../../../components/ImLiveDetail/RightLiveBoxTitle'\nimport phoneIcon from '../Image/live-join-phone.png'\nimport wxIcon from '../Image/live-join-wx.png'\n\nexport default () => {\n    return (\n        <div className=\"im-live-detail-right-live-join\">\n            <RightLiveBoxTitle title={'直播合作'} />\n            <div className=\"im-live-detail-right-live-join-box\">\n                <div className=\"im-live-detail-right-live-join-title\">直播咨询</div>\n                <div className=\"im-live-detail-right-live-join-text-box\">\n                    <img className=\"im-live-detail-right-live-join-img\" src={phoneIcon} />\n                    <div className=\"im-live-detail-right-live-join-text\">电话：18322606595</div>\n                </div>\n                <div className=\"im-live-detail-right-live-join-text-box\">\n                    <img className=\"im-live-detail-right-live-join-img\" src={wxIcon} />\n                    <div className=\"im-live-detail-right-live-join-text\">微信：CRYPTO1996</div>\n                </div>\n                <div className=\"im-live-detail-right-live-join-title\" style={{ marginTop: '24px' }} >商务合作</div>\n                <div className=\"im-live-detail-right-live-join-text-box\">\n                    <img className=\"im-live-detail-right-live-join-img\" src={phoneIcon} />\n                    <div className=\"im-live-detail-right-live-join-text\">电话：15555527736</div>\n                </div>\n                <div className=\"im-live-detail-right-live-join-text-box\">\n                    <img className=\"im-live-detail-right-live-join-img\" src={wxIcon} />\n                    <div className=\"im-live-detail-right-live-join-text\">微信：15555527736</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\n\nimport './index.scss'\n\nimport LeftLiveVideo from './LeftLiveVideo'\nimport LeftLiveAd from './LeftLiveAd'\nimport LeftLiveBottomBox from './LeftLiveBottomBox'\nimport RightDownloadBox from 'multiComps/Home/RightDownloadBox'\nimport RightLiveChat from './RightLiveChat'\nimport RightLivePresenter from './RightLivePresenter'\nimport RightLiveJoin from './RightLiveJoin'\nimport liveGather from '../../public/hooks/useLiveGather'\nimport liveGatherAjax from '../../public/hooks/useLiveGatherAjax'\n\nexport default () => {\n    liveGatherAjax()\n    const livePush = liveGather()\n    useEffect(() => {\n        livePush({ eventId: 'view_live_intro' })\n    }, [])\n    return (\n        <div className=\"im-live-detail-page\">\n            <div className=\"im-live-detail-page-main-box\">\n                <div className=\"im-live-detail-page-main-box-left\">\n                    <LeftLiveVideo />\n                    <LeftLiveAd />\n                    <LeftLiveBottomBox />\n                </div>\n                <div className=\"im-live-detail-page-main-box-right\">\n                    <RightLiveChat />\n                    <RightLivePresenter />\n                    <RightLiveJoin />\n                    <RightDownloadBox isLive />\n                </div>\n            </div>\n        </div>\n    )\n}\n"],"sourceRoot":""}