{"version":3,"sources":["webpack:///./assets/containers/VideoList/Image/video-btn.png","webpack:///./assets/containers/VideoList/index.js"],"names":["module","exports","__webpack_require__","p","__webpack_exports__","videoListData","useSelector","state","video","shallowEqual","dispatch","useDispatch","_useState","useState","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","btnText","setBtnText","_useState3","_useState4","isOk","setIsOk","_useState5","_useState6","pageNum","setPageNum","contBox","useRef","useEffect","waterfall","useCallback","items","document","getElementsByClassName","itemWidth","offsetWidth","arr","i","length","style","top","left","push","offsetHeight","minHeight","index","j","offsetLeft","current","height","Math","max","apply","getMoreData","currentPage","getVideoList","pageSize","onBtnMoreClick","newPageNum","pageCount","onBtnItemClick","item","id","publishTime","window","location","href","mixUrl","main","concat","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","ref","opacity","inforList","isArray","map","videoImg","coverPic","indexOf","JSON","parse","key","onClick","title","target","src","pc","alt","IconBtn","content","commentCounts","hotCounts","videoTime","recordCount"],"mappings":"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","file":"containers-VideoList-4340ff1b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"video-btn-d985f525.png\";","import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\nimport { isArray, mixUrl } from 'multiPublic'\nimport IconBtn from './Image/video-btn.png'\nimport { getVideoList } from '../../redux/actions/video'\n\nconst gap = 20 // 每个Item的间距\n\nexport default () => {\n    const { videoListData } = useSelector((state) => ({\n        videoListData: state.video.videoListData // 视频列表数据\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const [btnText, setBtnText] = useState('查看更多')\n    const [isOk, setIsOk] = useState(false)\n    const [pageNum, setPageNum] = useState(1) // 页数\n    const contBox = useRef() // cont 实例\n\n    useEffect(() => {\n        waterfall()\n    }, [videoListData])\n\n    // 产生瀑布流效果\n    const waterfall = useCallback(\n        () => {\n            let items = document.getElementsByClassName('video-list-page-item')\n            // 首先确定列数 = 页面的宽度 / 图片的宽度\n            // let pageWidth = 1200\n            let itemWidth = items[0].offsetWidth\n            // let columns = parseInt(pageWidth / (itemWidth + gap))\n            let columns = 4\n            let arr = [] // 定义一个数组，用来存储元素的高度\n            for (let i = 0; i < items.length; i++) {\n                if (i < columns) {\n                    // 满足这个条件则说明在第一行，文章里面有提到\n                    items[i].style.top = 0\n                    items[i].style.left = (itemWidth + gap) * i + 'px'\n                    arr.push(items[i].offsetHeight)\n                } else {\n                    // 其他行，先找出最小高度列，和索引\n                    // 假设最小高度是第一个元素\n                    let minHeight = arr[0]\n                    let index = 0\n                    // 找出最小高度\n                    for (let j = 0; j < arr.length; j++) {\n                        if (minHeight > arr[j]) {\n                            minHeight = arr[j]\n                            index = j\n                        }\n                    }\n                    // 设置下一行的第一个盒子的位置\n                    // top值就是最小列的高度+gap\n                    items[i].style.top = arr[index] + gap + 'px'\n                    items[i].style.left = items[index].offsetLeft + 'px'\n\n                    // 修改最小列的高度\n                    // 最小列的高度 = 当前自己的高度 + 拼接过来的高度 + 间隙的高度\n                    arr[index] = arr[index] + items[i].offsetHeight + gap\n                }\n            }\n\n            // 设置整体高度\n            contBox.current.style.height = Math.max(...arr) + 'px'\n            setIsOk(true)\n        },\n        []\n    )\n\n    // 请求更多数据\n    const getMoreData = useCallback(\n        (currentPage) => {\n            dispatch(getVideoList({ currentPage: currentPage, pageSize: 24 }))\n        },\n        []\n    )\n\n    // 点击查看更多按钮事件\n    const onBtnMoreClick = useCallback(\n        () => {\n            let newPageNum = pageNum + 1\n            setPageNum(newPageNum)\n            if (videoListData.pageCount >= newPageNum) {\n                getMoreData(newPageNum)\n            } else {\n                setBtnText('没有更多了')\n            }\n        },\n        [pageNum]\n    )\n\n    // 点击每项按钮\n    const onBtnItemClick = useCallback(\n        (item) => {\n            if (!item.id || !item.publishTime) return\n            window.location.href = mixUrl.main(`/video/detail/${item.id}/${item.publishTime}`)\n        },\n        []\n    )\n\n    return (\n        <div className=\"video-list-page\">\n            <div className=\"video-list-page-cont\" ref={contBox} style={{ opacity: isOk === true ? 1 : 0 }}>\n                {\n                    videoListData.inforList && isArray(videoListData.inforList) && videoListData.inforList.map((item, index) => {\n                        const videoImg = !item.coverPic || item.coverPic.indexOf('{') === -1 ? '' : JSON.parse(item.coverPic)\n                        return (\n                            <div className=\"video-list-page-item\" key={index} onClick={() => onBtnItemClick(item)}>\n                                <div className=\"video-item-img\">\n                                    <a title={item.title} target=\"_blank\">\n                                        <img src={!videoImg || !videoImg.pc ? '' : videoImg.pc} alt={item.title} />\n                                        <span className=\"btn\">\n                                            <img src={IconBtn} alt=\"播放\" />\n                                        </span>\n                                        {/* <span className=\"title\">MarsBit视频</span> */}\n                                    </a>\n                                </div>\n                                <a>\n                                    <h5>{item.title}</h5>\n                                    <div className=\"video-item-describe\">\n                                        {item.content}\n                                    </div>\n                                </a>\n                                <div className=\"box-bottom\">\n                                    <p className=\"comment\"><span>\n                                        {item.commentCounts}</span>评论</p>\n                                    <p className=\"endorse\"><span>{item.hotCounts}</span></p>\n                                    <p className=\"time\"><span>{item.videoTime}</span></p>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            {\n                videoListData.recordCount && videoListData.recordCount > 12 &&\n                <div className=\"video-list-page-more\" onClick={() => onBtnMoreClick()}>{btnText}</div>\n            }\n\n        </div>\n    )\n}\n"],"sourceRoot":""}