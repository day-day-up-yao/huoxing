{"version":3,"sources":["webpack:///./assets/components/ActivityList/Image/activity-list-item-site.png","webpack:///./assets/components/ActivityList/Image/activity-list-item-time.png","webpack:///./assets/containers/ActivityList/Image/activity-wx.png","webpack:///./assets/containers/ActivityList/Image/activity-a-wx.png","webpack:///./assets/containers/ActivityList/Image/activity-yx.png","webpack:///./assets/containers/ActivityList/Image/activity-page-left.png","webpack:///./assets/containers/ActivityList/Image/activity-page-right.png","webpack:///./assets/containers/ActivityList/TopBannerSwiper/index.js","webpack:///./assets/components/ActivityList/ActivityListItem/index.js","webpack:///./assets/containers/ActivityList/BottomList/index.js","webpack:///./assets/containers/ActivityList/index.js"],"names":["module","exports","__webpack_require__","p","ActivityList_TopBannerSwiper","activityRecommendListData","useSelector","state","activity","shallowEqual","react_default","a","createElement","className","style","height","inforList","length","swiper","loop","grabCursor","centeredSlides","slidesPerView","preventClicks","autoplay","delay","disableOnInteraction","pagination","el","type","clickable","navigation","nextEl","prevEl","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","map","item","index","coverPic","JSON","parse","swiper_slide","key","title","target","href","mixUrl","main","concat","id","src","pc_recommend","alt","width","ActivityList_ActivityListItem","props","currentTime","place","startTime","endTime","pic","pc","siteIcon","timeIcon","parseInt","formatTime","timeData","ActivityList_BottomList","_useSelector","activityPlaceList","activityAllListData","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray_default","nowPlace","setNowPlace","_useState3","_useState4","nowTime","setNowTime","_useState5","_useState6","nowPageNum","setNowPageNum","getListData","useCallback","params","obj","timeType","recommend","currentPage","pageSize","objectSpread_default","getActivityList","pageNumList","list","_loop","i","push","onClick","onBtnChangePageNumClick","_loop2","_loop3","_loop4","_loop5","_loop6","onBtnChangePlaceClick","onBtnChangeTime","timeId","num","pageCount","onBtnCopyClick","value","execCommandCopy","Toast","success","info","text","getNav","placeCount","yxIcon","wxIcon","wxActiveIcon","extends_default","pageLeftIcon","pageRightIcon","SwiperCore","use","Autoplay","EffectCoverflow","Navigation","Pagination","__webpack_exports__"],"mappings":"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","file":"containers-ActivityList-4340ff1b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"activity-list-item-site-c4248d67.png\";","module.exports = __webpack_public_path__ + \"activity-list-item-time-4f7a3a4a.png\";","module.exports = __webpack_public_path__ + \"activity-wx-f7149a6e.png\";","module.exports = __webpack_public_path__ + \"activity-a-wx-9633acf2.png\";","module.exports = __webpack_public_path__ + \"activity-yx-f7f1a434.png\";","module.exports = __webpack_public_path__ + \"activity-page-left-87410caf.png\";","module.exports = __webpack_public_path__ + \"activity-page-right-25ab7611.png\";","import React from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { Swiper, SwiperSlide } from 'swiper/react'\n\nimport './index.scss'\n\nimport { mixUrl } from 'multiPublic'\n\nexport default () => {\n    const { activityRecommendListData } = useSelector((state) => ({\n        activityRecommendListData: state.activity.activityRecommendListData\n    }), shallowEqual)\n\n    return (\n        <div className=\"activity-list-top-banner-swiper\" style={{ height: activityRecommendListData.inforList.length === 0 ? '65px' : '390px' }}>\n            {activityRecommendListData.inforList.length > 2\n                ? <div className=\"activity-list-top-banner-swiper-box\">\n                    <Swiper className=\"activity-list-top-banner-swiper-primary\"\n                        loop={true}\n                        grabCursor={true}\n                        centeredSlides={true}\n                        slidesPerView='auto'\n                        preventClicks={false}\n                        autoplay={{ delay: 5000, disableOnInteraction: 'false' }}\n                        pagination={{\n                            el: '.swiper-pagination.activity-p',\n                            type: 'bullets',\n                            clickable: false\n                        }}\n                        navigation={{ nextEl: '.activity-n-x', prevEl: '.activity-p-x' }}\n                        effect='coverflow'\n                        coverflowEffect={{\n                            rotate: 30, // 旋转的角度\n                            stretch: 300, // 拉伸   图片间左右的间距和密集度\n                            depth: 431, // 深度   切换图片间上下的间距和密集度\n                            modifier: 2, // 修正值 该值越大前面的效果越明显\n                            slideShadows: false // 页面阴影效果\n                        }}\n                    >\n                        {\n                            activityRecommendListData && activityRecommendListData.inforList.map((item, index) => {\n                                const coverPic = JSON.parse(item.coverPic)\n                                return (\n                                    <SwiperSlide key={index}>\n                                        <a title={item.title} target=\"_blank\" href={mixUrl.main(`/huodong/${item.id}`)}>\n                                            <img src={coverPic.pc_recommend} alt={item.title} />\n                                        </a>\n                                    </SwiperSlide>\n                                )\n                            })\n                        }\n                        <div className=\"swiper-pagination activity-p\"></div>\n                        <div className=\"swiper-button-next activity-n-x\"></div>\n                        <div className=\"swiper-button-prev activity-p-x\"></div>\n                    </Swiper>\n                </div>\n                : (activityRecommendListData.inforList.length > 0\n                    ? <div className=\"activity-list-top-banner-swiper-box\" style={{ width: '1200px' }}>\n                        <Swiper className=\"activity-list-top-banner-swiper-primary\"\n                            loop={true}\n                            preventClicks={false}\n                            autoplay={{ delay: 5000, disableOnInteraction: 'false' }}\n                            pagination={{\n                                el: '.swiper-pagination.activity-p',\n                                type: 'bullets',\n                                clickable: false\n                            }}\n                            navigation={{ nextEl: '.activity-next', prevEl: '.activity-prev' }}\n                        >\n                            {\n                                activityRecommendListData && activityRecommendListData.inforList.map((item, index) => {\n                                    const coverPic = JSON.parse(item.coverPic)\n                                    return (\n                                        <SwiperSlide key={index}>\n                                            <a title={item.title} target=\"_blank\" href={mixUrl.main(`/huodong/${item.id}`)}>\n                                                <img src={coverPic.pc_recommend} alt={item.title} />\n                                            </a>\n                                        </SwiperSlide>\n                                    )\n                                })\n                            }\n                            <div className=\"swiper-pagination activity-p\"></div>\n                            <div className=\"activity-next\"></div>\n                            <div className=\"activity-prev\"></div>\n                        </Swiper>\n                    </div>\n                    : null)\n            }\n        </div >\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\nimport { formatTime, mixUrl } from 'multiPublic'\n\nimport siteIcon from '../Image/activity-list-item-site.png'\nimport timeIcon from '../Image/activity-list-item-time.png'\n\nexport default (props) => {\n    const {\n        id,\n        currentTime,\n        title,\n        place,\n        startTime,\n        endTime,\n        coverPic\n    } = props\n\n    const pic = coverPic ? JSON.parse(coverPic) : {}\n    return (\n        <a className=\"activity-list-item\" href={mixUrl.main(`/huodong/${id}`)} >\n            <div className={`activity-list-item-state ${currentTime > endTime ? 'over' : ''}`}>\n                {currentTime > endTime ? '已结束' : '报名中'}\n            </div>\n            <img src={pic.pc ? pic.pc : ''} alt={title} title={title} />\n            <p title={title}>\n                {title}\n            </p>\n            <div className=\"activity-list-item-b\">\n                <p className=\"activity-list-item-site\">\n                    <img src={siteIcon} alt=\"\" />\n                    <span>{place}</span>\n                </p>\n                <p className=\"activity-list-item-time\">\n                    <img src={timeIcon} alt=\"\" />\n                    <span>\n                        {parseInt(endTime) - parseInt(startTime) < 86400000\n                            ? formatTime(startTime, 'MM月dd日')\n                            : `${formatTime(startTime, 'MM月dd日')}-${formatTime(endTime, 'MM月dd日')}`\n                        }\n                    </span>\n                </p>\n            </div>\n        </a>\n    )\n}\n","import React, { useState, useCallback } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\n\nimport { execCommandCopy } from 'multiPublic'\nimport { getActivityList } from '../../../redux/actions/activity'\nimport ActivityListItem from '../../../components/ActivityList/ActivityListItem'\nimport Toast from 'multiComps/Toast'\nimport wxIcon from '../Image/activity-wx.png'\nimport wxActiveIcon from '../Image/activity-a-wx.png'\nimport yxIcon from '../Image/activity-yx.png'\nimport pageLeftIcon from '../Image/activity-page-left.png'\nimport pageRightIcon from '../Image/activity-page-right.png'\n\n// 举办地址\nconst getNav = (place) => {\n    let text = ''\n    switch (place) {\n        case 'all':\n            text = '全部'\n            break\n        case 'overseas':\n            text = '海外'\n            break\n        case 'others':\n            text = '其他'\n            break\n        default:\n            text = place\n            break\n    }\n    return text\n}\n\n// 举办时间\nconst timeData = ['全部', '本周', '本月']\n\n// 邮箱地址\nconst emailAddress = '782257144@qq.com'\n\nexport default () => {\n    const { activityPlaceList, activityAllListData } = useSelector((state) => ({\n        activityPlaceList: state.activity.activityPlaceList,\n        activityAllListData: state.activity.activityAllListData\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const [nowPlace, setNowPlace] = useState('all') // 当前举办地址\n    const [nowTime, setNowTime] = useState(1) // 当前时间\n    const [nowPageNum, setNowPageNum] = useState(1) // 当前页码\n\n    // 请求切换数据\n    const getListData = useCallback(\n        (params) => {\n            let obj = { place: nowPlace, timeType: nowTime, recommend: 0, currentPage: nowPageNum, pageSize: 18 }\n            if (params) {\n                obj = { ...obj, ...params }\n            }\n            dispatch(getActivityList(obj))\n        },\n        [nowPlace, nowTime, nowPageNum]\n    )\n\n    // 页码展示组件\n    const pageNumList = useCallback(\n        (length) => {\n            if (length < 9) {\n                let list = []\n                for (let i = 1; i <= length; i++) {\n                    list.push(\n                        <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                            {i}\n                        </span>\n                    )\n                }\n                return list\n            } else {\n                let list = []\n                if (nowPageNum <= 3) {\n                    for (let i = 1; i <= 5; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span>\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                } else if (nowPageNum === 4) {\n                    for (let i = 1; i <= 6; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span>\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                } else if (nowPageNum === length - 3) {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = length - 5; i <= length; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n                } else if (nowPageNum >= length - 3) {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = length - 4; i <= length; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n                } else {\n                    list.push(\n                        <span className='page-item-text' key={'start'} onClick={() => onBtnChangePageNumClick(1)}>\n                            {1}\n                        </span>\n                    )\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit1'} onClick={() => onBtnChangePageNumClick(nowPageNum - 5 < 1 ? 1 : nowPageNum - 5)}>\n                            ···\n                        </span>\n                    )\n\n                    for (let i = nowPageNum - 2; i <= nowPageNum + 2; i++) {\n                        list.push(\n                            <span className={`page-item-text ${i === nowPageNum ? 'active' : ''}`} key={i} onClick={() => onBtnChangePageNumClick(i)}>\n                                {i}\n                            </span>\n                        )\n                    }\n\n                    list.push(\n                        <span className='page-item-text omit' key={'omit2'} onClick={() => onBtnChangePageNumClick(nowPageNum + 5 > length ? length : nowPageNum + 5)}>\n                            ···\n                        </span >\n                    )\n                    list.push(\n                        <span className='page-item-text' key={'end'} onClick={() => onBtnChangePageNumClick(length)}>\n                            {length}\n                        </span>\n                    )\n                }\n\n                return list\n            }\n        },\n        [nowPageNum]\n    )\n\n    // 点击切换地址按钮事件\n    const onBtnChangePlaceClick = useCallback(\n        (place) => {\n            setNowPlace(place)\n            setNowPageNum(1)\n            getListData({ place: place, currentPage: 1 })\n        },\n        []\n    )\n\n    // 点击切换地址按钮事件\n    const onBtnChangeTime = useCallback(\n        (timeId) => {\n            setNowTime(timeId)\n            setNowPageNum(1)\n            getListData({ timeType: timeId, currentPage: 1 })\n        },\n        []\n    )\n\n    // 点击切换页码按钮事件\n    const onBtnChangePageNumClick = useCallback(\n        (num) => {\n            if (num < 1 || num > activityAllListData.pageCount) return\n            setNowPageNum(num)\n            getListData({ currentPage: num })\n        },\n        [activityAllListData]\n    )\n\n    // 点击一键复制按钮事件\n    const onBtnCopyClick = useCallback(\n        (value) => {\n            if (execCommandCopy(value)) {\n                Toast.success('复制成功')\n            } else {\n                Toast.info('复制失败，该浏览器不支持点击复制到剪贴板')\n            }\n        },\n        []\n    )\n\n    return (\n        <div className=\"activity-list-page-bottom-list\">\n            <div className=\"activity-list-page-bottom-list-wrapper\">\n                <ul className=\"activity-list-page-bottom-list-nav\" id=\"activityNav\">\n                    {\n                        activityPlaceList && activityPlaceList.map((item, index) => {\n                            return (\n                                <li className={item.place === nowPlace ? 'active' : ''} onClick={() => onBtnChangePlaceClick(item.place)} key={index}>\n                                    {getNav(item.place)}\n                                    {index !== 0\n                                        ? <span>{`(${item.placeCount})`}</span>\n                                        : null\n                                    }\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n                <div className=\"activity-list-page-bottom-list-date\">\n                    <span>时间</span>\n                    {timeData.map((item, index) => {\n                        const timeId = index + 1\n                        return (\n                            <p className={timeId === nowTime ? 'active' : ''} onClick={() => onBtnChangeTime(timeId)} key={index}>\n                                {item}\n                            </p>\n                        )\n                    })}\n                    <div className=\"contact\">联系我们:\n                        <div className=\"yx\">\n                            <img src={yxIcon} alt=\"\" />\n                            <div className=\"yx-cont\">\n                                <font id=\"fMailbox\">邮箱：{emailAddress}</font>\n                                <div className=\"copy\" onClick={() => onBtnCopyClick(emailAddress)}>复制</div>\n                                <i></i>\n                            </div>\n                        </div>\n                        <div className=\"wx\">\n                            <img src={wxIcon} alt=\"\" />\n                            <div className=\"wx-cont\">\n                                <img src={wxActiveIcon} alt=\"\" />\n                                <span>微信：linghu_chong_</span>\n                                <i></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"activity-list-page-bottom-list-list\">\n                    {activityAllListData && activityAllListData.pageCount >= 1\n                        ? activityAllListData.inforList.map((item, index) => {\n                            return (\n                                <ActivityListItem {...item} currentTime={activityAllListData.currentTime} key={index} />\n                            )\n                        })\n                        : <div className=\"not-available\" />\n                    }\n                </div>\n                {activityAllListData && activityAllListData.pageCount > 1\n                    ? <div className=\"activity-list-page-bottom-list-page\">\n                        <div className=\"activity-list-page-bottom-list-page-list\">\n                            <p className=\"page-item-btn\" onClick={() => onBtnChangePageNumClick(nowPageNum - 1)} key={'left'}>\n                                <img src={pageLeftIcon} alt=\"\" />\n                            </p>\n                            {pageNumList(activityAllListData.pageCount)}\n                            <p className=\"page-item-btn\" onClick={() => onBtnChangePageNumClick(nowPageNum + 1)} key={'right'}>\n                                <img src={pageRightIcon} alt=\"\" />\n                            </p>\n                        </div>\n                    </div>\n                    : null\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './index.scss'\n\nimport TopBannerSwiper from './TopBannerSwiper'\nimport BottomList from './BottomList'\n\nimport SwiperCore, { Autoplay, EffectCoverflow, Navigation, Pagination } from 'swiper'\nSwiperCore.use([Autoplay, EffectCoverflow, Navigation, Pagination])\n\nexport default () => {\n    return (\n        <div className=\"activity-list-page\">\n            <TopBannerSwiper />\n            <BottomList />\n        </div>\n    )\n}\n"],"sourceRoot":""}