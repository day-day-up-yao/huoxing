{"version":3,"sources":["webpack:///./_multiappsharing/public/hooks/useMemo.js","webpack:///./_multiappsharing/components/Popup/index.js","webpack:///./assets/containers/ImLiveControl/ImLiveControlPopup/index.js","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-arrow.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-close.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-play.png","webpack:///./assets/containers/ImLiveControl/Image/im-live-control-popup-close.png","webpack:///./assets/containers/ImLiveControl/ImLiveControlItem/index.js","webpack:///./assets/containers/ImLiveControl/index.js"],"names":["useMemo","_ref","children","_ref$deps","deps","_ref$wrap","wrap","Wrap","Fragment","comp","react_default","a","createElement","__webpack_exports__","show","close","closeIcon","closeClassName","wrapperClassName","useEffect","layoutContent","document","querySelector","removeZindex","defaultStyle","getAttribute","indexOf","setAttribute","replace","className","concat","style","display","src","onClick","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","props","title","text","ok","okText","justifyContent","module","exports","p","ImLiveControlPictureItem","alignItems","ImLiveControlTextItem","ImLiveControlInputItem","value","onInputChange","useCallback","onBtnCopyClick","execCommandCopy","Toast","success","info","onChange","spellCheck","ImLiveControlExplainItem","roomType","color","ImLiveControlBtnItem","click","coursUrl","marginBottom","href","target","btnArrowIcon","explainText","_useSelector","useSelector","state","userInfo","login","room","live","shallowEqual","dispatch","useDispatch","timer","useRef","_useState","useState","_useState2","slicedToArray_default","isPopShow","setIsPopShow","_useState3","_useState4","isPopShow2","setIsPopShow2","status","current","setInterval","asyncToGenerator_default","regenerator_default","mark","_callee","getRoomStatusRes","_context","prev","next","getRoomStatus","roomId","sent","parseInt","obj","clearInterval","stop","onBtnPopupOKClick","_callee2","oldStatus","setRoomStatusRes","_context2","passportId","loginShowHide","err","code","t0","setRoomStatus","getRoomByID","then","res","msg","abrupt","onBtnPlayOrEndClick","onBtnPopupCloseClick","onBtnPopupOKClick2","window","location","mixUrl","main","ImLiveControlItem_ImLiveControlPictureItem","coverPicUrl","ImLiveControlItem_ImLiveControlTextItem","name","formatTime","beginTime","pushStreamUrl","ImLiveControlItem_ImLiveControlInputItem","split","ImLiveControlItem_ImLiveControlExplainItem","ImLiveControlItem_ImLiveControlBtnItem","playIcon","Popup","ImLiveControlPopup","popupCloseIcon"],"mappings":"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","file":"containers-ImLiveControl-4340ff1b.js","sourcesContent":["import React, { useMemo, Fragment } from 'react'\n\nexport default ({ children, deps = [], wrap = Fragment }) => {\n    // 转换参数为大写开头\n    const Wrap = wrap\n    // 这里由于React 的限制，必须要返回单一节点，因此做了一层包装。\n    // 包装节点可自定义传入一个组件类型\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const comp = useMemo(children, deps)\n    return <Wrap>{comp}</Wrap>\n}\n","import React, { useEffect } from 'react'\nimport './index.scss'\nimport UseMemo from '../../public/hooks/useMemo'\n\nexport default ({\n    children,\n    show,\n    close,\n    closeIcon,\n    closeClassName,\n    wrapperClassName\n}) => {\n    // 显示时让弹出框在最上层\n    // 按项目布局定--只需要layout-content在layout-header,layout-header-auto等外层布局上就好\n    useEffect(() => {\n        const layoutContent = document.querySelector('.layout-content')\n        if (!layoutContent) return\n\n        const zIndexStyle = '; z-index: 10'\n        const removeZindex = () => {\n            const defaultStyle = layoutContent.getAttribute('style')\n            defaultStyle &&\n                defaultStyle.indexOf(zIndexStyle) > -1 &&\n                layoutContent.setAttribute('style', defaultStyle.replace(zIndexStyle, ''))\n        }\n\n        if (show) {\n            const defaultStyle = layoutContent.getAttribute('style')\n            defaultStyle &&\n                defaultStyle.indexOf(zIndexStyle) === -1 &&\n                layoutContent.setAttribute('style', defaultStyle + zIndexStyle)\n        } else {\n            removeZindex()\n        }\n\n        return () => {\n            removeZindex()\n        }\n    }, [show])\n\n    return <UseMemo deps={[children, show, close]}>\n        {() => <div className={`popup-wrapper ${wrapperClassName || ''}`}\n            style={{\n                display: show ? 'flex' : 'none'\n            }}>\n            <div className=\"popup-content\">\n                <img className={`popup-close ${closeClassName || ''}`} src={closeIcon} onClick={close} />\n                {children}\n            </div>\n            <div className=\"popup-mask\" onClick={close}></div>\n        </div>}\n    </UseMemo>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nexport default (props) => {\n    const { title, text, close, ok, okText } = props\n    return (\n        <div className=\"im-live-control-popup\">\n            <div className=\"im-live-control-popup-title\">{title}</div>\n            <div className=\"im-live-control-popup-text\">\n                {text}\n            </div>\n            <div className=\"im-live-control-popup-btn-box\" style={{ justifyContent: close && ok ? 'space-between' : 'center' }}>\n                {close && <div className=\"im-live-control-popup-btn close\" onClick={close}>取消</div>}\n                {ok && <div className=\"im-live-control-popup-btn ok\" onClick={ok}>{okText}</div>}\n            </div>\n        </div>\n    )\n}\n","module.exports = __webpack_public_path__ + \"im-live-control-arrow-3d60a162.png\";","module.exports = __webpack_public_path__ + \"im-live-control-close-011bb54b.png\";","module.exports = __webpack_public_path__ + \"im-live-control-play-2d150157.png\";","module.exports = __webpack_public_path__ + \"im-live-control-popup-close-d56650a0.png\";","import React, { useCallback } from 'react'\n\nimport './index.scss'\n\nimport { execCommandCopy } from 'multiPublic'\nimport Toast from 'multiComps/Toast'\nimport btnArrowIcon from '../Image/im-live-control-arrow.png'\n\n/** @desc 图片Item */\nexport const ImLiveControlPictureItem = (props) => {\n    const { title, src } = props\n\n    return (\n        <div className=\"im-live-control-item\" style={{ alignItems: 'flex-start' }}>\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <img className=\"im-live-control-item-img\" src={src} />\n        </div>\n    )\n}\n\n/** @desc 文字Item */\nexport const ImLiveControlTextItem = (props) => {\n    const { title, text } = props\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <div className=\"im-live-control-item-text\">\n                {text}\n            </div>\n        </div>\n    )\n}\n\n/** @desc 输入框Item */\nexport const ImLiveControlInputItem = (props) => {\n    const { title, value } = props\n\n    // 需要选中状态，但是不能更改，所以不能用readOnly 或 defaultVal\n    const onInputChange = useCallback(() => { }, [])\n\n    // 点击一键复制按钮事件\n    const onBtnCopyClick = useCallback(\n        () => {\n            if (execCommandCopy(value)) {\n                Toast.success('复制成功')\n            } else {\n                Toast.info('复制失败，该浏览器不支持点击复制到剪贴板')\n            }\n        },\n        [value]\n    )\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-title\">\n                {title}\n            </div>\n            <input className=\"im-live-control-item-input\" value={value} onChange={onInputChange} spellCheck={false} />\n            <div className=\"im-live-control-item-copy\" onClick={() => onBtnCopyClick()}>一键复制</div>\n        </div>\n    )\n}\n\n/** @desc 说明Item */\nexport const ImLiveControlExplainItem = (props) => {\n    const { text, roomType } = props\n\n    return (\n        <div className=\"im-live-control-item\">\n            <div className=\"im-live-control-item-explain\" style={{ color: roomType === 1 ? '#999' : '#F63C2A' }}>\n                {text}\n            </div>\n        </div>\n    )\n}\n\n/** @desc 按钮Item */\nexport const ImLiveControlBtnItem = (props) => {\n    const { text, roomType, src, click, coursUrl } = props\n\n    return (\n        <div className=\"im-live-control-item\" style={{ marginBottom: 0 }}>\n            <div className={`im-live-control-item-btn ${roomType === 1 ? 'backColor1' : 'backColor2'}`} onClick={click}>\n                <img className=\"im-live-control-item-btn-icon\" src={src} />\n                {text}\n            </div>\n            <a className=\"im-live-control-item-btn-explain\" href={coursUrl} target=\"_blank\">MarsBit电脑直播教程</a>\n            <img className=\"im-live-control-item-btn-explain-icon\" src={btnArrowIcon} />\n        </div>\n    )\n}\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\n\nimport './index.scss'\n\nimport Popup from 'multiComps/Popup'\nimport Toast from 'multiComps/Toast'\nimport { formatTime, mixUrl } from 'multiPublic'\nimport { loginShowHide } from 'multiRedux/actions/login'\nimport { getRoomStatus, setRoomStatus, getRoomByID } from '../../redux/actions/live'\nimport { ImLiveControlPictureItem, ImLiveControlTextItem, ImLiveControlInputItem, ImLiveControlExplainItem, ImLiveControlBtnItem } from './ImLiveControlItem'\nimport ImLiveControlPopup from './ImLiveControlPopup'\nimport closeIcon from './Image/im-live-control-close.png'\nimport playIcon from './Image/im-live-control-play.png'\nimport popupCloseIcon from './Image/im-live-control-popup-close.png'\n\nconst explainText = ['直播软件（如OBS软件）设置完成推流后，点击“开始直播”按钮后直播才会正式开始', '直播结束后，点击“结束直播”按钮后，直播间状态会自动更改为回放中', '当前为手机直播，请在MarsBit上开启或关闭直播']\n\n// 火星财经电脑直播教程\nconst coursUrl = 'https://news.marsbit.co/20210201154152675262.html'\n\nexport default () => {\n    const { userInfo, room } = useSelector((state) => ({\n        userInfo: state.login.userInfo.info,\n        room: state.live.room\n    }), shallowEqual)\n    const dispatch = useDispatch()\n    const timer = useRef()\n    const [isPopShow, setIsPopShow] = useState(false) // 是否开启弹窗\n    const [isPopShow2, setIsPopShow2] = useState(false) // 是否开启弹窗2\n\n    useEffect(() => {\n        if (room.status === 2) {\n            setIsPopShow2(true)\n            return\n        }\n\n        // 循环请求直播间状态, 非本页面关闭时，跳转到直播列表页\n        if (timer.current) return\n        timer.current = setInterval(async () => {\n            const getRoomStatusRes = await getRoomStatus({ roomId: room.roomId })\n            if (parseInt(getRoomStatusRes.obj) === 2) {\n                setIsPopShow2(true)\n                clearInterval(timer)\n            }\n        }, 10000)\n\n        return () => {\n            clearInterval(timer)\n            timer.current = null\n        }\n    }, [room])\n\n    // 点击弹窗确定按钮事件\n    const onBtnPopupOKClick = useCallback(\n        async () => {\n            if (!userInfo.passportId) {\n                dispatch(loginShowHide('account', true))\n            }\n\n            // 请求当前直播间状态\n            const getRoomStatusRes = await getRoomStatus({\n                roomId: room.roomId\n            }).catch(function (err) {\n                Toast.info('获取直播间错误')\n                throw err\n            })\n\n            if (getRoomStatusRes.code === 1) {\n                const oldStatus = parseInt(getRoomStatusRes.obj)\n                switch (oldStatus) {\n                    case 0:\n                    case 1:\n\n                        // 改变直播间状态\n                        const setRoomStatusRes = await setRoomStatus({\n                            roomId: room.roomId,\n                            passportId: userInfo.passportId,\n                            status: (oldStatus + 1)\n                        }).catch(function (err) {\n                            Toast.info('获取直播间错误')\n                            throw err\n                        })\n\n                        if (setRoomStatusRes.code === 1) {\n                            // 刷新直播间数据\n                            dispatch(getRoomByID({\n                                roomId: room.roomId\n                            })).then((res) => {\n                                if (res.code !== 1) {\n                                    Toast.info(res.msg)\n                                }\n                            }).catch(function (err) {\n                                Toast.info('获取直播间错误')\n                                throw err\n                            })\n                        } else {\n                            Toast.info(setRoomStatusRes.msg)\n                        }\n\n                        break\n                    case 2:\n                        setIsPopShow2(true)\n                        break\n                    default:\n                        setIsPopShow2(true)\n                        break\n                }\n            } else {\n                Toast.info(getRoomStatusRes.msg)\n            }\n\n            setIsPopShow(false)\n        },\n        [dispatch, room, userInfo]\n    )\n\n    // 点击开始关闭按钮事件\n    const onBtnPlayOrEndClick = useCallback(\n        () => {\n            setIsPopShow(true)\n        },\n        []\n    )\n\n    // 点击弹窗关闭按钮事件\n    const onBtnPopupCloseClick = useCallback(\n        () => {\n            setIsPopShow(false)\n        },\n        []\n    )\n\n    // 点击直播间已关闭弹窗确定按钮事件\n    const onBtnPopupOKClick2 = useCallback(\n        () => {\n            window.location.href = mixUrl.main('/live')\n        },\n        []\n    )\n\n    return (\n        <div className=\"im-live-control-page\">\n            <div className=\"im-live-control-page-main-box\">\n                <ImLiveControlPictureItem title={'直播封面：'} src={room.coverPicUrl} />\n                <ImLiveControlTextItem title={'直播标题：'} text={room.name} />\n                <ImLiveControlTextItem title={'直播时间：'} text={formatTime(room.beginTime, 'yyyy-MM-dd hh:mm')} />\n                {room.roomType === 1 && room.pushStreamUrl\n                    ? <ImLiveControlInputItem title={'服务器：'} value={`${room.pushStreamUrl.split('/')[0]}//${room.pushStreamUrl.split('/')[2]}/${room.pushStreamUrl.split('/')[3]}`} />\n                    : <ImLiveControlTextItem title={'服务器：'} text={'手机直播不支持串流'} />}\n                {room.roomType === 1 && room.pushStreamUrl\n                    ? <ImLiveControlInputItem title={'串流密钥：'} value={room.pushStreamUrl.split('/')[4]} />\n                    : <ImLiveControlTextItem title={'串流密钥：'} text={'手机直播不支持串流'} />}\n                {/* <ImLiveControlInputItem title={'拉流地址：'} value={room.pullStreamUrl} /> */}\n                <ImLiveControlInputItem title={'直播间观看地址：'} value={`https://www.marsbit.co/live/${room.roomId}`} />\n                <ImLiveControlExplainItem text={room.roomType === 1 ? explainText[room.status] : explainText[2]} roomType={room.roomType} status={room.status} />\n                <ImLiveControlBtnItem text={room.status === 0 ? '开始直播' : '结束直播'} roomType={room.roomType} src={room.status === 0 ? playIcon : closeIcon} click={onBtnPlayOrEndClick} coursUrl={coursUrl} />\n            </div>\n            <Popup\n                children={\n                    <ImLiveControlPopup\n                        title={'提示'}\n                        text={room.status === 0 ? '直播软件（如OBS）设置完成后才可正常开始直播。' : '是否结束直播'}\n                        close={onBtnPopupCloseClick}\n                        okText={room.status === 0 ? '开始直播' : '结束直播'}\n                        ok={onBtnPopupOKClick}\n                    />\n                }\n                show={isPopShow}\n                close={onBtnPopupCloseClick}\n                closeIcon={popupCloseIcon}\n                closeClassName={'im-live-control-popup-close'}\n            />\n            <Popup\n                children={\n                    <ImLiveControlPopup\n                        title={'提示'}\n                        text={'直播间已被关闭'}\n                        ok={onBtnPopupOKClick2}\n                        okText={'确定'}\n                    />\n                }\n                show={isPopShow2}\n                closeClassName={'im-live-control-popup-close2'}\n            />\n        </div>\n    )\n}\n"],"sourceRoot":""}