{"version":3,"sources":["webpack:///./assets/public/hooks/useLiveGather.js","webpack:///./_multiappsharing/components-m/WebchatOpenInBrowser/index.js","webpack:///./_multiappsharing/public/hooks/useAppDownload.js","webpack:///./_multiappsharing/public/img/v-orange.svg","webpack:///./_multiappsharing/public/img/v-blue.svg","webpack:///./_multiappsharing/components-m/WebchatOpenInBrowser/images/wechat-download-tips.png","webpack:///./_multiappsharing/components-m/DownloadBtn/index.js","webpack:///./_multiappsharing/components-m/DownloadBtn/images/cellphone-icon.png","webpack:///./assets/public/hooks/useTWebLivePlayer.js","webpack:///./assets/public/hooks/useTWebLiveIm.js","webpack:///./_multiappsharing/components-m/Layout/FooterDownload/index.js","webpack:///./_multiappsharing/components-m/Layout/FooterDownload/img/m-share-logo.png","webpack:///./assets/containers-m/LiveShare/HotLiveroom/Image/im-live-list-item-status.gif","webpack:///./assets/containers-m/LiveShare/HotLiveroom/Image/im-live-list-item-status2.png","webpack:///./assets/containers-m/LiveShare/LiveInfo/images/live-share-guest-blue.png","webpack:///./assets/containers-m/LiveShare/LiveInfo/images/live-share-guest-yellow.png","webpack:///./assets/containers-m/LiveShare/LiveroomDesc/images/arrow-img.png","webpack:///./assets/containers-m/LiveShare/LiveInfo/index.jsx","webpack:///./assets/containers-m/LiveShare/HotLiveroom/LiveRoomItem/index.jsx","webpack:///./assets/containers-m/LiveShare/HotLiveroom/index.jsx","webpack:///./assets/containers-m/LiveShare/LiveroomDesc/index.js","webpack:///./assets/containers-m/LiveShare/LiveroomVideo/index.jsx","webpack:///./assets/containers-m/LiveShare/NostartButton/index.jsx","webpack:///./assets/containers-m/LiveShare/LiveGuestInfo/LiveGuestItem/Profile/index.jsx","webpack:///./assets/containers-m/LiveShare/LiveGuestInfo/LiveGuestItem/index.jsx","webpack:///./assets/containers-m/LiveShare/LiveGuestInfo/index.jsx","webpack:///./assets/containers-m/LiveShare/index.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_redux__WEBPACK_IMPORTED_MODULE_1__","_Users_admin_Desktop_HUOXING_hx_www_huoxing24_com_multiappsharing_redux_actions_public__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","dispatch","useDispatch","room","useSelector","state","live","useCallback","_ref","eventId","eventInfo","gatherLive","liveState","react__WEBPACK_IMPORTED_MODULE_0___default","n","_images_wechat_download_tips_png__WEBPACK_IMPORTED_MODULE_2__","_images_wechat_download_tips_png__WEBPACK_IMPORTED_MODULE_2___default","props","openInBrowser","a","createElement","className","onClick","setOpenInBrowser","src","tipsImg","alt","_redux_actions_public__WEBPACK_IMPORTED_MODULE_1__","_components_Toast__WEBPACK_IMPORTED_MODULE_2__","_public__WEBPACK_IMPORTED_MODULE_3__","iosUrl","andUrl","useRef","openApp","url","doNotDownload","callback","intHandle","_clickTime","_count","location","href","isIos","isAndroid","current","Date","setInterval","elsTime","clearInterval","document","hidden","webkitHidden","console","log","appDownload","type","id","obj","isWechat","concat","useEffect","getAndroidDownloadUrl","then","res","code","Toast","info","msg","err","module","exports","p","_useState","useState","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","iphonex","setIphonex","_useState3","_useState4","useAppDownload","clickDownload","isIphoneX","react__WEBPACK_IMPORTED_MODULE_1___default","phoneIcon","_components_m_WebchatOpenInBrowser__WEBPACK_IMPORTED_MODULE_4__","timeZero","num","Number","commentStyle","color","fontSize","textShadow","_useSelector","roomHistoryList","shallowEqual","d","h","m","s","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","countTime","setCountTime","elementID","getCountTimeText","nowTime","getTime","leftTime","beginTime","Math","floor","status","setTimeout","mutedBtnShow","setMutedBtnShow","_useState5","_useState6","player","setPlayer","querySelector","removeAttribute","video","muted","startPlay","mobileoptions","poster","coverPicUrl","width","height","pip","screenShot","autoplay","lang","playsinline","ignores","options","rotate","innerRotate","clockwise","pipConfig","bottom","right","controls","comments","area","start","end","isPc","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","playbackRate","defaultPlaybackRate","commentsArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","val","value","push","mode","duration","updateTime","txt","content","style","danmu","roomType","cssFullscreen","fileExtension","require","replace","HlsJsPlayer","Player","isAutoplaySupported","supported","once","setAttribute","play","window","livePlayer","livePush","liveGather","on","action","roomStatus","onbeforeunload","_useState7","_useState8","oldRoomStatus","setOldRoomStatus","playingUrl","webPullStreamUrl","pullStreamUrl","indexOf","split","playbackUrl","recordVideoUrl","destroy","timer","getRoomPopularity","roomIDs","roomId","getRoomByID","body","onclick","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_2___default","im","setIm","imReady","setImReady","imLogin","setImLogin","imJoin","setImJoin","createIM","setTextMessageReceived","TWebLive","SDKAppID","EVENT","IM_READY","event","IM_NOT_READY","IM_REMOTE_USER_JOIN","data","forEach","message","nick","payload","userIDList","IM_REMOTE_USER_LEAVE","IM_KICKED_OUT","IM_NET_STATE_CHANGED","IM_PUSH_STOPPED","_tim","TIM","MESSAGE_RECEIVED","from","text","getImLogin","_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","passportId","sigRes","wrap","_context","prev","axios","sent","login","userID","userSig","imResponse","imError","warn","stop","_x","apply","this","arguments","joinImRoom","enterRoom","TYPES","ENTER_ROOM_SUCCESS","ALREADY_IN_ROOM","t","useTranslation","mLogo","_components_m_WebchatOpenInBrowser__WEBPACK_IMPORTED_MODULE_5__","LiveShare_LiveInfo","presenter","presenterList","Array","isArray","presenterGrade","vGrade","gradeBlue","gradeYellow","playNum","pop","popularity","name","playNumText","toFixed","react_default","IconStatus","IconStatus2","iconUrl","nickName","formatTime","HotLiveroom_LiveRoomItem","itemType","publishTime","mixUrl","main","target","LiveShare_HotLiveroom","listData","display","length","map","item","index","extends_default","key","LiveroomDesc","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","onCheckboxChange","setState","showAll","onChange","checked","dangerouslySetInnerHTML","__html","brief","htmlFor","arrowImg","Component","LiveShare_LiveroomVideo","userInfo","paddingTop","slicedToArray_default","setStyle","_useTWebLivePlayer","useTWebLivePlayer","timeImLogin","timeImJoin","onTextMessageReceived","elementItem","operationType","_useTWebLiveIm","useTWebLiveIm","md5","uuid","substring","videoStyle","margin","objectSpread_default","LiveShare_NostartButton","time","LiveGuestItem_Profile","authorInfo","iconHide","authStyle","authName","parseInt","vOrange","vBlue","nickname","title","userType","introduce","LiveGuestInfo_LiveGuestItem","LiveShare_LiveGuestInfo","guestList","roomData","popularityList","roomLiveRecommendList","inforList","livelinkid","match","params","setLiveState","isBoxShow","setIsBoxShow","FooterDownload","changeBoxShow","boxShow","background","containers_m_LiveShare_LiveroomDesc","DownloadBtn"],"mappings":"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","file":"containers-m-LiveShare-4340ff1b.js","sourcesContent":["import { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { gatherLive } from 'multiRedux/actions/public'\nexport default () => {\n    const dispatch = useDispatch()\n    const { room } = useSelector((state) => ({\n        room: state.live.room\n    }))\n\n    return useCallback(({ eventId, eventInfo }) => {\n        dispatch(gatherLive({ liveState: room, eventId, eventInfo }))\n    }, [])\n}\n","import React from 'react'\nimport './index.scss'\nimport tipsImg from './images/wechat-download-tips.png'\n\nexport default (props) => {\n    return props.openInBrowser && <div\n        className=\"download-app-wechat-tips\"\n        onClick={() => props.setOpenInBrowser(false)}>\n        <div className=\"download-app-img\">\n            <img src={tipsImg} alt=\"请在浏览器中打开\" />\n        </div>\n    </div>\n}\n","import { useEffect, useCallback, useRef } from 'react'\nimport { getAndroidDownloadUrl } from '../../redux/actions/public'\nimport Toast from '../../components/Toast'\nimport { isAndroid, isIos, isWechat } from '../../public'\n\nconst checkOpen = (callback) => {\n    let _clickTime = +(new Date())\n    // 启动间隔20ms运行的定时器，并检测累计消耗时间是否超过3000ms，超过则结束\n    let _count = 0\n    let intHandle\n    intHandle = setInterval(() => {\n        _count++\n        let elsTime = +(new Date()) - _clickTime\n        if (_count >= 100 || elsTime > 3000) {\n            clearInterval(intHandle)\n            if (elsTime > 3000 || document.hidden || document.webkitHidden) {\n                console.log('正在打开app')\n            } else {\n                callback()\n            }\n        }\n    }, 20)\n}\n\n/**\n * @params type 当前页面类型 id文章视频等相对应的id\n * newsDetail新闻详情，newsList新闻列表\n * flashDetail快讯详情，flashList快讯列表\n * videoDetail视频详情，videoList视频列表\n * authorCenter作者中心\n * 不传type默认跳转到首页\n * 返回appDownload 传递以上参数\n * 并返回openInBrowser是否提示浏览器中打开\n * */\nexport default () => {\n    const iosUrl = 'https://itunes.apple.com/cn/app/id1343659925?mt=8'\n    const andUrl = useRef('')\n\n    const openApp = useCallback((url, doNotDownload) => {\n        location.href = url\n        checkOpen(() => {\n            if (isIos() && !doNotDownload) location.href = iosUrl\n            if (isAndroid() && !doNotDownload) location.href = andUrl.current\n        })\n    }, [andUrl])\n\n    const appDownload = useCallback((type, id, obj) => {\n        const doNotDownload = obj ? obj.doNotDownload : false\n        let openInBrowser = false\n        if (isWechat() && isIos()) {\n            // 打开appStore\n            location.href = iosUrl\n        } else if (isWechat() && isAndroid()) {\n            // 提示浏览器中打开\n            openInBrowser = true\n        } else {\n            switch (type) {\n                case 'liveshare':\n                    openApp(`marsbusiness://liveshare/${id}`, doNotDownload)\n                    break\n                case 'newsDetail':\n                    openApp(`marsbusiness://news/${id}`, doNotDownload)\n                    break\n                case 'newsList':\n                    openApp(`marsbusiness://newlist/${id}`, doNotDownload)\n                    break\n                case 'flashDetail':\n                    openApp(`marsbusiness://fast/${id}`, doNotDownload)\n                    break\n                case 'flashList':\n                    openApp(`marsbusiness://home/fast`, doNotDownload)\n                    break\n                case 'videoDetail':\n                    openApp(`marsbusiness://video/${id}`, doNotDownload)\n                    break\n                case 'videoList':\n                    openApp(`marsbusiness://home/video`, doNotDownload)\n                    break\n                case 'authorCenter':\n                    openApp(`marsbusiness://authorCenter/${id}`, doNotDownload)\n                    break\n                case 'noticeDetail':\n                    openApp(`marsbusiness://noticeDetail/${id}`, doNotDownload)\n                    break\n                default:\n                    openApp(`marsbusiness://home/new`, doNotDownload)\n            }\n        }\n\n        return openInBrowser\n    }, [andUrl])\n\n    useEffect(() => {\n        getAndroidDownloadUrl().then(function (res) {\n            if (res.code === 1) {\n                andUrl.current = res.obj\n            } else {\n                Toast.info(res.msg)\n            }\n        }).catch(function (err) {\n            throw err\n        })\n    }, [])\n\n    return appDownload\n}\n","module.exports = __webpack_public_path__ + \"v-orange-ddf372b8.svg\";","module.exports = __webpack_public_path__ + \"v-blue-77c6a4e4.svg\";","module.exports = __webpack_public_path__ + \"wechat-download-tips-fef770a1.png\";","import React, { useState, useCallback, useEffect } from 'react'\nimport './index.scss'\n\nimport { isIphoneX } from 'multiPublic/index'\nimport WebchatOpenInBrowser from '../../components-m/WebchatOpenInBrowser'\nimport useAppDownload from '../../public/hooks/useAppDownload'\nimport phoneIcon from './images/cellphone-icon.png'\n\nexport default (props) => {\n    const [iphonex, setIphonex] = useState(false)\n    const [openInBrowser, setOpenInBrowser] = useState(false)\n    const appDownload = useAppDownload()\n    const clickDownload = useCallback(() => {\n        setOpenInBrowser(appDownload(props.type, props.id))\n    }, [])\n    useEffect(() => {\n        isIphoneX() && setIphonex(true)\n    }, [])\n    return <div className={`download-app-wrapper ${iphonex ? 'iphonex' : ''}`}>\n        <a className=\"download-app-btn\" onClick={clickDownload}>\n            <img src={phoneIcon} alt=\"下载MarsBit\"/>\n            下载MarsBit APP\n        </a>\n        <WebchatOpenInBrowser openInBrowser={openInBrowser} setOpenInBrowser={setOpenInBrowser} />\n    </div >\n}\n","module.exports = __webpack_public_path__ + \"cellphone-icon-524dafc5.png\";","import { useState, useEffect, useCallback } from 'react'\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\n// import HlsJsPlayer from 'xgplayer-hls.js'\n\nimport { getRoomPopularity, getRoomByID } from '../../redux/actions/live'\nimport Toast from 'multiComps/Toast'\nimport { isAutoplaySupported, fileExtension, isPc } from 'multiPublic/index'\nimport liveGather from './useLiveGather'\n\nconst timeZero = (num) => {\n    if (Number(num) < 10) {\n        return `0${num}`\n    } else {\n        return num\n    }\n}\n\nexport const commentStyle = {\n    color: 'rgba(255, 255, 255, 0.9)',\n    fontSize: '24px',\n    textShadow: 'rgb(0, 0, 0) 1px 0px 1px, rgb(0, 0, 0) 0px 1px 1px, rgb(0, 0, 0) 0px -1px 1px, rgb(0, 0, 0) -1px 0px 1px'\n    // padding: '5px 11px',\n    // border: '1px solid rgba(255, 255, 255, 0.4)',\n    // borderRadius: '50px',\n    // backgroundColor: 'rgba(255, 255, 255, 0.2)'\n}\n\nexport default (props) => {\n    const dispatch = useDispatch()\n    const { room, roomHistoryList } = useSelector((state) => ({\n        roomHistoryList: state.live.roomHistoryList,\n        room: state.live.room\n    }), shallowEqual)\n\n    const [countTime, setCountTime] = useState({\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0\n    })\n\n    // elementID 播放器绑定ID\n    const { elementID } = props\n\n    // 倒计时\n    const getCountTimeText = useCallback(() => {\n        let nowTime = new Date().getTime()\n        let endTime = Number(room.beginTime)\n        let leftTime = endTime - nowTime\n        let obj = {\n            d: 0,\n            h: 0,\n            m: 0,\n            s: 0\n        }\n        if (leftTime >= 0) {\n            obj.d = Math.floor(leftTime / 1000 / 60 / 60 / 24)\n            obj.h = Math.floor(leftTime / 1000 / 60 / 60 % 24)\n            obj.m = Math.floor(leftTime / 1000 / 60 % 60)\n            obj.s = Math.floor(leftTime / 1000 % 60)\n        }\n\n        setCountTime(obj)\n\n        if (room.status === 0) {\n            setTimeout(getCountTimeText, 1000)\n        }\n    }, [])\n\n    // 播放\n    const [mutedBtnShow, setMutedBtnShow] = useState(false)\n    const [player, setPlayer] = useState(null) // 直播中实例\n    useEffect(() => {\n        if (!player || mutedBtnShow) return\n\n        document.querySelector('.xgplayer-icon-large').removeAttribute('style')\n        document.querySelector('.xgplayer-icon-muted').removeAttribute('style')\n        player.video.muted = false\n    }, [mutedBtnShow])\n    const startPlay = useCallback((url, type) => {\n        if (!url) return\n        // 移动端的控制条选项\n        let mobileoptions = {\n            id: elementID,\n            url: url,\n            poster: room.coverPicUrl,\n            width: elementID === 'id_test_video' ? '100%' : 884,\n            height: elementID === 'id_test_video' ? '100%' : 500,\n            pip: false, // 画中画\n            screenShot: false,\n            autoplay: true,\n            lang: 'zh-cn',\n            playsinline: true,\n            ignores: ['volume']\n        }\n\n        let options = {\n            id: elementID,\n            url: url,\n            poster: room.coverPicUrl,\n            // playbackRate: [0.5, 0.75, 1, 1.5, 2],\n            // defaultPlaybackRate: 1,\n            rotate: { // 视频旋转按钮配置项\n                innerRotate: true, // 只旋转内部video\n                clockwise: false // 旋转方向是否为顺时针\n            },\n            pip: true, // 画中画\n            pipConfig: {\n                bottom: 200,\n                right: 0,\n                width: 320,\n                height: 180\n            },\n            screenShot: true, // 截图功能\n            autoplay: true, // 自动播放，行为会受到浏览器规则限制\n            // videoInit: true, // 在没有设置poster的情况下显示视频首帧,移动端无效\n            width: elementID === 'id_test_video' ? '100%' : 884,\n            height: elementID === 'id_test_video' ? '100%' : 500,\n            lang: 'zh-cn',\n            // useHls: true, // 插件解码\n            playsinline: true,\n            controls: true // isPc() // 控制条显示（移动端禁止）\n        }\n\n        // 弹幕\n        options.danmu = {\n            // panel: true,\n            comments: [],\n            area: { // 弹幕显示区域\n                start: 0.02, // 区域顶部到播放器顶部所占播放器高度的比例\n                end: 1.02 // 区域底部到播放器顶部所占播放器高度的比例\n            }\n        }\n\n        // 回放添加，变速按钮，弹幕数组\n        // 移动端回翻和pc端回放要区别开来\n        if (type === 'playback' && isPc()) {\n            options = {\n                ...options,\n                playbackRate: [0.5, 0.75, 1, 1.5, 2],\n                defaultPlaybackRate: 1\n            }\n\n            let commentsArray = []\n            for (const val of roomHistoryList) {\n                // console.log(`${val.content}: ${(val.updateTime - room.beginTime) / 1000}s`)\n                commentsArray.push({\n                    mode: 'scroll',\n                    duration: 10000,\n                    id: val.id,\n                    start: val.updateTime - room.beginTime,\n                    // txt: `${val.nickName}：${val.content}`,\n                    txt: val.content,\n                    style: commentStyle\n                })\n            }\n            options.danmu.comments = commentsArray\n        } else if (type === 'playback' && !isPc()) {\n            options = mobileoptions\n            // 根据横竖屏，先计算，出一个高度\n            if (room.roomType === 1) {\n                options.height = 211\n                // options.rotateFullscreen = true\n                options.cssFullscreen = true\n            } else {\n                options.height = 310\n            }\n        } else {\n            options.controls = false // 手机直播 隐藏控制条\n        }\n\n        let player = null\n        if (fileExtension(url) === 'flv') {\n            // iphone不支持flv----->https://github.com/bytedance/xgplayer/issues/385\n\n            // options = {\n            //     ...options,\n            //     isLive: type === 'playing',\n            //     cors: true\n            // }\n            // require('xgplayer')\n            // const FlvPlayer = require('xgplayer-flv')\n            // player = new FlvPlayer(options)\n            // console.log('000')\n\n            require('xgplayer')\n            options = {\n                ...options,\n                url: options.url.replace('.flv', '.m3u8')\n            }\n            const HlsJsPlayer = require('xgplayer-hls.js')\n            player = new HlsJsPlayer(options)\n        } else if (fileExtension(url) === 'm3u8') {\n            require('xgplayer')\n            const HlsJsPlayer = require('xgplayer-hls.js')\n            player = new HlsJsPlayer(options)\n        } else {\n            const Player = require('xgplayer')\n            require('xgplayer-mp4')\n            player = new Player(options)\n        }\n\n        // Usage: isAutoplaySupported(callback);\n        // Using a callback assures that support\n        // has been properly checked\n        isAutoplaySupported(function (supported) {\n            if (supported) {\n                // HTML5 Video Autoplay Supported!\n                console.log('HTML5 Video Autoplay Supported!')\n            } else {\n                // HTML5 Video Autoplay Not Supported :(\n                console.log('HTML5 Video Autoplay Not Supported :(')\n                player.once('canplay', function () {\n                    document.querySelector('.xgplayer-icon-large').setAttribute('style', 'display:none')\n                    document.querySelector('.xgplayer-icon-muted').setAttribute('style', 'display:block')\n                    player.video.muted = true\n                    player.play()\n                    setMutedBtnShow(true)\n                })\n            }\n        })\n\n        setPlayer(player)\n        window.livePlayer = player // 挂载到全局，以便发送评论时，发送弹幕\n\n        // roomHistoryList 服务端请求roomHistoryList，此处inputs加与不加，关系不大。服务端请求数据可减少startPlay数据判断\n    }, [])\n\n    // 点击上报事件\n    const livePush = liveGather()\n    useEffect(() => {\n        if (!player) return\n\n        console.log(1111)\n\n        player.on('play', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'play' } })\n        })\n        player.on('pause', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'pause' } })\n        })\n        player.on('requestFullscreen', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'fullscreen' } })\n        })\n        player.on('exitFullscreen', function () {\n            livePush({ eventId: 'playback_control', eventInfo: { action: 'exit_fullscreen' } })\n        })\n    }, [player])\n    const roomStatus = useCallback((room) => {\n        let status = ''\n        switch (room.status) {\n            case 0:\n                status = 'not_started'\n                break\n            case 1:\n                status = 'living'\n                break\n            case 2:\n                status = 'finished'\n                break\n            default:\n                status = 'not_started'\n        }\n        return status\n    }, [])\n    useEffect(() => {\n        if (!room) return\n\n        // 页面刷新退出前，上报关闭直播间时，直播间状态\n        window.onbeforeunload = function () {\n            livePush({ eventId: 'exit_room', eventInfo: { state: roomStatus(room) } })\n        }\n    }, [room])\n    const [oldRoomStatus, setOldRoomStatus] = useState()\n    useEffect(() => {\n        // 未开始和直播中才上报\n        if (!room || (room.status !== 0 && room.status !== 1)) return\n\n        if (room.status === oldRoomStatus) return\n        setOldRoomStatus(room.status)\n\n        livePush({ eventId: 'enter_room', eventInfo: { state: roomStatus(room) } })\n    }, [room])\n\n    useEffect(() => {\n        if (!room) return\n        switch (room.status) {\n            case 0: // 即将开始\n                getCountTimeText()\n                break\n            case 1: // 直播中\n                let playingUrl = room.webPullStreamUrl ? room.webPullStreamUrl : room.pullStreamUrl\n\n                if (!playingUrl) {\n                    Toast.info('未获取到视频直播地址，请刷新试试')\n                    return\n                }\n\n                if (player === null) {\n                    if (playingUrl.indexOf('?txSecret=') > -1) playingUrl = (playingUrl.split('?txSecret='))[0]\n                    if (playingUrl.indexOf('https://') === -1) playingUrl = playingUrl.replace('http://', 'https://')\n                    startPlay(playingUrl, 'playing')\n                }\n                break\n            case 2: // 回放中\n                livePush({ eventId: 'enter_playback' })\n                let playbackUrl = room.recordVideoUrl\n                if (!playbackUrl) {\n                    // 会因为重复请求，而一直弹出\n                    // Toast.info('未获取到视频回放地址，请刷新试试')\n                    return\n                }\n\n                if (player !== null) {\n                    player.destroy(true)\n                    setPlayer(null)\n                }\n\n                if (playbackUrl.indexOf('https://') === -1) {\n                    playbackUrl = playbackUrl.replace('http://', 'https://')\n                }\n                startPlay(playbackUrl, 'playback')\n                break\n            default:\n                setTimeout(() => {\n                    Toast.info('直播间不存在或已删除')\n                }, 500)\n                break\n        }\n    }, [room])\n\n    // 监听人气值实时更新\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (room.status === 1) {\n                dispatch(getRoomPopularity({ roomIDs: room.roomId }))\n            }\n        }, 5000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [dispatch.live, room])\n\n    // 监听直播间状态，即将开始-->直播-->回放\n    useEffect(() => {\n        console.log(666)\n        const timer = setInterval(() => {\n            if (room.status === 0 || (room.status === 2 && !room.recordVideoUrl)) {\n                dispatch(getRoomByID({ roomId: room.roomId }))\n            } else {\n                clearInterval(timer)\n            }\n        }, 3000)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [dispatch.live, room])\n\n    // 监听移动端点击播放\n    useEffect(() => {\n        if (!isPc() && player) {\n            document.body.onclick = () => {\n                player.play()\n            }\n        }\n    }, [player])\n\n    return { player, countTime, timeZero, setMutedBtnShow, mutedBtnShow }\n}\n","import { useState, useCallback } from 'react'\nimport axios from 'axios'\nimport TIM from 'tim-js-sdk'\n// import { imSdkAppId } from '../../../config/config-server'\n\nexport default () => {\n    const [im, setIm] = useState(null)\n    const [imReady, setImReady] = useState(false)\n    const [imLogin, setImLogin] = useState(false)\n    const [imJoin, setImJoin] = useState(false)\n\n    const createIM = useCallback((setTextMessageReceived) => {\n        const TWebLive = require('tweblive')\n\n        const im = TWebLive.createIM({\n            SDKAppID: 1400383128\n        })\n\n        const onIMReady = function (event) {\n            setImReady(true)\n        }\n        const onSdkNotReady = function (event) {\n            console.log(`用户被NotReady触发`)\n            setImReady(false)\n        }\n        // const onTextMessageReceived = function (event) {\n        //     event.data.forEach(function (message) {\n        //         console.log((message.from || message.nick) + ' : ', message.payload.text)\n        //     })\n        //     setTextMessageReceived(event)\n        // }\n        const onCustomMessageReceived = function (event) {\n            console.log('custom message received', event.data)\n            event.data.forEach(function (message) {\n                console.log((message.from || message.nick) + ' : ', message.payload.text)\n            })\n            setTextMessageReceived(event)\n        }\n        const onRemoteUserJoin = function (event) {\n            event.data.forEach(function (message) {\n                console.log((message.nick || message.payload.userIDList[0]) + ' 来了')\n            })\n        }\n        const onRemoteUserLeave = function (event) {\n            event.data.forEach(function (message) {\n                console.log((message.nick || message.payload.userIDList[0]) + ' 走了')\n            })\n        }\n        const onKickedOut = function (event) {\n            console.log(`用户被踢下线时触发`)\n            console.log(event.data.type)\n            // TWebLive.TYPES.KICKED_OUT_MULT_ACCOUNT(Web端，同一账号，多页面登录被踢)\n            // TWebLive.TYPES.KICKED_OUT_MULT_DEVICE(同一账号，多端登录被踢)\n            // TWebLive.TYPES.KICKED_OUT_USERSIG_EXPIRED(签名过期)\n        }\n        let onNetStateChange = function (event) {\n            console.log(`网络状态发生改变`)\n            console.log(event.data.state)\n            // event.data.state 当前网络状态，枚举值及说明如下：\n            // TWebLive.TYPES.NET_STATE_CONNECTED - 已接入网络\n            // TWebLive.TYPES.NET_STATE_CONNECTING - 连接中。很可能遇到网络抖动，SDK 在重试。接入侧可根据此状态提示“当前网络不稳定”或“连接中”\n            // TWebLive.TYPES.NET_STATE_DISCONNECTED - 未接入网络。接入侧可根据此状态提示“当前网络不可用”。SDK 仍会继续重试，若用户网络恢复，SDK 会自动同步消息\n        }\n        let onPushStopped = function (event) {\n            console.log(`主播停止推流时触发`)\n            console.log('postscript: ', event.data)\n        }\n\n        // 接入侧监听此事件，然后可调用 SDK 发送消息等\n        im.on(TWebLive.EVENT.IM_READY, onIMReady)\n        // 接入侧监听此事件，然后可调用 SDK 发送消息等\n        im.on(TWebLive.EVENT.IM_NOT_READY, onSdkNotReady)\n        // // 收到文本消息，上屏\n        // im.on(TWebLive.EVENT.IM_TEXT_MESSAGE_RECEIVED, onTextMessageReceived)\n        // // 收到自定义消息时触发\n        // im.on(TWebLive.EVENT.IM_CUSTOM_MESSAGE_RECEIVED, onCustomMessageReceived)\n        // 远程用户进入触发\n        im.on(TWebLive.EVENT.IM_REMOTE_USER_JOIN, onRemoteUserJoin)\n        // 远程用户离开触发\n        im.on(TWebLive.EVENT.IM_REMOTE_USER_LEAVE, onRemoteUserLeave)\n        // 远程用户离开\n        im.on(TWebLive.EVENT.IM_KICKED_OUT, onKickedOut)\n        // 网络状态改变\n        im.on(TWebLive.EVENT.IM_NET_STATE_CHANGED, onNetStateChange)\n        // 主播停止推流\n        im.on(TWebLive.EVENT.IM_PUSH_STOPPED, onPushStopped)\n        // tweblive不能接收到系统消息，通过tim接收\n        im._tim.on(TIM.EVENT.MESSAGE_RECEIVED, onCustomMessageReceived)\n\n        setIm(im)\n    }, [])\n\n    const getImLogin = useCallback(async (passportId) => {\n        const sigRes = await axios({ url: `/imusersig/${passportId}` })\n\n        // 2、登录\n        // im.registerPlugin({ 'cos-js-sdk': COS })\n        im.login({ userID: passportId, userSig: sigRes.data.data }).then((imResponse) => {\n            console.log('im.login')\n            console.log('登录成功')\n            console.log(imResponse) // 登录成功\n            // if (imResponse.data.repeatLogin === true) {\n            //     // 标识账号已登录，本次登录操作为重复登录\n            //     console.log(imResponse.data.errorInfo)\n            // }\n            setImLogin(true)\n        }).catch((imError) => {\n            console.log('登录失败')\n            console.warn('im | login | failed', imError) // 登录失败的相关信息\n            setImLogin(false)\n        })\n    }, [im])\n\n    const joinImRoom = useCallback((roomId) => {\n        const TWebLive = require('tweblive')\n\n        if (im.enterRoom) {\n            // 3、加入直播间\n            im.enterRoom(roomId).then((imResponse) => {\n                console.log(imResponse.data)\n                switch (imResponse.data.status) {\n                    case TWebLive.TYPES.ENTER_ROOM_SUCCESS: // 加入直播间成功\n                        console.log('成功加入直播间')\n                        setImJoin(true)\n                        break\n                    case TWebLive.TYPES.ALREADY_IN_ROOM: // 已经在直播间内\n                        console.log('已经在直播间里')\n                        setImJoin(true)\n                        break\n                    default:\n                        setImJoin(false)\n                        break\n                }\n            }).catch((imError) => {\n                console.warn('im | enterRoom | failed', imError) // 加入直播间失败的相关信息\n                setImJoin(false)\n            })\n        }\n    }, [im])\n\n    return {\n        imReady,\n        imLogin,\n        imJoin,\n        createIM,\n        getImLogin,\n        joinImRoom,\n        setImLogin,\n        setImJoin,\n        im\n    }\n}\n","import React, { useState, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport './index.scss'\nimport mLogo from './img/m-share-logo.png'\nimport WebchatOpenInBrowser from '../../../components-m/WebchatOpenInBrowser'\nimport useAppDownload from '../../../public/hooks/useAppDownload'\nexport default function (props) {\n    const { t } = useTranslation()\n    const { type, id } = props\n    const [openInBrowser, setOpenInBrowser] = useState(false)\n    const appDownload = useAppDownload()\n    const clickDownload = useCallback(() => {\n        setOpenInBrowser(appDownload(type, id))\n    }, [])\n    return <div className=\"share-download-bottom active\" id=\"share-download-bottom\">\n        <div className=\"bottom-left\">\n            <img src={mLogo} />\n            <h4>MarsBit</h4>\n            <p>{t('all_world_dynamic')}</p>\n        </div>\n        <a className=\"b-down\" onClick={clickDownload}>{t('share_open')} APP</a>\n        <WebchatOpenInBrowser openInBrowser={openInBrowser} setOpenInBrowser={setOpenInBrowser} />\n    </div>\n}\n","module.exports = __webpack_public_path__ + \"m-share-logo-3e28eff7.png\";","module.exports = __webpack_public_path__ + \"im-live-list-item-status-19bd2cda.gif\";","module.exports = __webpack_public_path__ + \"im-live-list-item-status2-5d5cebf1.png\";","module.exports = __webpack_public_path__ + \"live-share-guest-blue-09bc8518.png\";","module.exports = __webpack_public_path__ + \"live-share-guest-yellow-d7c73d40.png\";","module.exports = __webpack_public_path__ + \"arrow-img-d0262ecc.png\";","import React from 'react'\n\nimport './index.scss'\nimport gradeBlue from '../../LiveShare/LiveInfo/images/live-share-guest-blue.png'\nimport gradeYellow from '../../LiveShare/LiveInfo/images/live-share-guest-yellow.png'\nimport IconStatus from '../HotLiveroom/Image/im-live-list-item-status.gif'\nimport IconStatus2 from '../HotLiveroom/Image/im-live-list-item-status2.png'\nimport { formatTime } from 'multiPublic'\n\nexport default (props) => {\n    const presenter = (props.presenterList && Array.isArray(props.presenterList) && props.presenterList[0]) || {}\n    const presenterGrade = 'vGrade' in presenter && ((presenter.vGrade === 2 || presenter.vGrade === 3)\n        ? gradeBlue\n        : presenter.vGrade === 1\n            ? gradeYellow\n            : null)\n    let playNum = props.pop.popularity ? props.pop.popularity : props.popularity\n    const {\n        name,\n        status,\n        beginTime\n    } = props\n    let playNumText = playNum\n    if (playNum > 1000000) {\n        playNumText = '99.9万+'\n    } else if (playNumText > 10000) {\n        playNumText = `${(playNumText / 10000).toFixed(1)}万`\n    }\n\n    return <div className=\"liveshare-m-info-box\">\n        <div className=\"liveshare-info-simple\">\n            <div className=\"video-title\">\n                <span className={`live-status im-item-status-${status && status === 2 ? 'finish' : (status && status === 1 ? 'living' : 'ready')}`}>\n                    {status && status === 1 ? <img src={IconStatus} /> : (status && status === 2) ? <img src={IconStatus2} /> : ''}\n                    <em>{status && status === 1 ? '直播中' : (status && status === 2 ? '回放中' : '即将开始')}</em>\n                </span>\n                <div className=\"title\">{name}</div>\n            </div>\n            {status ? <div className=\"liveshare-info-presenter\">\n                <div className=\"presenter-info\">\n                    <div className=\"avatar\"><img src={presenter.iconUrl}/></div>\n                    <div className=\"name\">{presenter.nickName}</div>\n                    {presenterGrade && <div className=\"grade\"><img src={presenterGrade}/></div>}\n                </div>\n                <div className=\"presenter-play-num\">观看人次：<span>{playNumText}</span></div>\n            </div> : <div className=\"live-time\">直播时间：{formatTime(beginTime, 'yyyy-MM-dd hh:mm')}</div>}\n        </div>\n    </div>\n}\n","import React from 'react'\n\nimport './index.scss'\n\nimport { mixUrl } from 'multiPublic'\n\nimport IconStatus from '../../HotLiveroom/Image/im-live-list-item-status.gif'\nimport IconStatus2 from '../../HotLiveroom/Image/im-live-list-item-status2.png'\n\nexport default (props) => {\n    const {\n        itemType, // item样式 undefind.正常直播列表组件  top1.广场推荐位左侧大图 top2.广场推荐位左侧左侧小图 top3.广场推荐位新小图 right.首页右侧列表 myvideo.个人视频列表组件 mylive.个人直播组件\n        roomId, // 房间ID\n        status, // 播放状态 0.未直播 1.直播中 2.回放中\n        popularity, // 观看人数\n        coverPicUrl, // 背景图片\n        // presenterList, // 主播人列表\n        name, // 直播间名称\n        id, // 视频ID（暂时只有视频列表组件）\n        publishTime // 视频创建时间（暂时只有视频列表组件）\n    } = props\n\n    let playNum = popularity && popularity !== '' ? popularity : 0\n    let playNumText = `${playNum} 人次`\n    if (playNum > 1000000) {\n        playNumText = `99.9万+  人次`\n    } else if (playNum > 10000) {\n        playNumText = `${(playNum / 10000).toFixed(1)}万 人次`\n    }\n    const href = itemType !== undefined && itemType === 'myvideo' ? mixUrl.main(`/video/detail/${id}/${publishTime}`) : mixUrl.main(`/liveshare/${roomId}`)\n\n    return (\n        <a className={`im-live-list-item im-live-list-item-${itemType}`} href={href} target=\"_self\">\n            <div className=\"im-live-list-item-video\">\n                <img className=\"im-live-list-item-video-img\" src={coverPicUrl} />\n                {itemType !== undefined && itemType === 'myvideo' ? null\n                    : <div className=\"im-live-list-item-video-state type-lt\">\n                        <div className={`im-live-list-item-video-state-box type-${status && status !== '' ? status : '0'}`}>\n                            {status && status === 1 ? <img className=\"im-live-list-item-video-state-box-img\" src={IconStatus} /> : (status && status === 0 ? '' : <img className=\"im-live-list-item-video-state-box-img\" src={IconStatus2} />)}\n                            {status && status === 1 ? '直播中' : (status && status === 2 ? '回放中' : '即将开始')}\n                        </div>\n                        {status && status !== 0 ? <div className=\"im-live-list-item-video-state-box type-pop\">\n                            {playNumText}\n                        </div> : null}\n                    </div>\n                }\n                {itemType === 'top1' || itemType === 'top2'\n                    ? <div className=\"im-live-list-item-list-top-state\">\n                        <div className=\"im-live-list-item-list-top-title\">\n                            {name}\n                        </div>\n                    </div> : null\n                }\n            </div>\n            {itemType === undefined || itemType === 'myvideo' || itemType === 'mylive' || itemType === 'top3'\n                ? <div className=\"im-live-list-item-title\">\n                    {name}\n                </div> : null\n            }\n        </a>\n    )\n}\n","import React from 'react'\nimport LiveRoomItem from './LiveRoomItem'\n\nimport './index.scss'\n\nexport default (props) => {\n    const {\n        listData\n    } = props\n    return (\n        <div className=\"hot-live\" style={{ display: listData.length > 0 ? 'block' : 'none' }}>\n            <div className=\"live-room-list\">\n                {\n                    listData && listData.length > 0 && listData.map((item, index) => {\n                        return (\n                            <div className=\"live-room-list-item\"><LiveRoomItem {...item} key={index} /></div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport arrowImg from './images/arrow-img.png'\nimport './index.scss'\n\nclass LiveroomDesc extends Component {\n    constructor (props) {\n        super(props)\n        this.state = {\n            showAll: true\n        }\n    }\n\n    onCheckboxChange = () => {\n        this.setState({ showAll: false })\n    }\n    render () {\n        const { showAll } = this.state\n        return (\n            <div className=\"im-live-detail-left-live-info\">\n                <div className=\"description_box\">\n                    <input type=\"checkbox\" id=\"contTab\" onChange={this.onCheckboxChange} checked={showAll} className=\"tabbed\" />\n                    <div id=\"cont\">\n                        <div className=\"description\" dangerouslySetInnerHTML={{ __html: this.props.brief }} />\n                    </div>\n                    <div className=\"content-more\"><div className=\"gradient\"></div><label htmlFor=\"contTab\" className=\"readmore\">展开全部<img className=\"arrow\" src={arrowImg} /></label></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LiveroomDesc\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\nimport md5 from 'blueimp-md5'\n\nimport useTWebLivePlayer from '../../../public/hooks/useTWebLivePlayer'\nimport useTWebLiveIm from '../../../public/hooks/useTWebLiveIm'\nimport { getRoomByID } from '../../../redux/actions/live'\nimport { isArray, uuid } from 'multiPublic'\n\nimport './index.scss'\n\nexport default () => {\n    const { room, userInfo } = useSelector((state) => ({\n        room: state.live.room,\n        userInfo: state.login.userInfo.info\n    }), shallowEqual)\n    const [style, setStyle] = useState({ paddingTop: '0' })\n    const {\n        player,\n        setMutedBtnShow,\n        mutedBtnShow\n    } = useTWebLivePlayer({ elementID: 'id_test_video' })\n    const dispatch = useDispatch()\n    const timeImLogin = useRef()\n    const timeImJoin = useRef()\n\n    const onTextMessageReceived = (event) => {\n        if (!event || !event.data || !isArray(event.data)) return\n        event.data.map((elementItem) => {\n            if (!elementItem.type) return\n            switch (elementItem.type) {\n                case 'TIMGroupSystemNoticeElem':\n                    if (!elementItem.payload) return\n                    if (elementItem.payload.operationType && elementItem.payload.operationType === 5) {\n                        // 直播间直播结束（群被解散）\n                        dispatch(getRoomByID({ roomId: room.roomId }))\n                        setImJoin(false)\n                    }\n                    break\n                default:\n                    break\n            }\n        })\n    }\n\n    const { createIM, getImLogin, joinImRoom, setImJoin, im, imReady, imLogin, imJoin } = useTWebLiveIm()\n\n    // 创建直播间\n    useEffect(() => {\n        if (room.status !== 1) return\n        createIM(onTextMessageReceived)\n    }, [room.status])\n\n    // 登录\n    useEffect(() => {\n        if (!im) return\n        // 未登录下用 uuid md5 取第8-24位\n        const passportId = !userInfo.passportId ? md5(uuid()).substring(7, 23) : userInfo.passportId\n        getImLogin(passportId)\n    }, [im, userInfo])\n    // 加入聊天室\n    useEffect(() => {\n        if (timeImLogin.current) {\n            clearInterval(timeImLogin.current)\n            timeImLogin.current = null\n        }\n\n        if (imReady) {\n            if (!imLogin && room.status === 1) {\n                timeImLogin.current = setInterval(() => {\n                    // 未登录下用 uuid md5 取第8-24位\n                    const passportId = !userInfo.passportId ? md5(uuid()).substring(7, 23) : userInfo.passportId\n                    getImLogin(passportId)\n                }, 10000)\n            } else {\n                clearInterval(timeImLogin.current)\n                timeImLogin.current = null\n                joinImRoom(room.roomId)\n            }\n        }\n\n        return () => {\n            clearInterval(timeImLogin.current)\n        }\n    }, [imReady, imLogin, userInfo, room.status])\n    // 掉线后循环请求加入\n    useEffect(() => {\n        if (timeImJoin.current) {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n        if (!imJoin && room.status === 1) {\n            timeImJoin.current = setInterval(() => {\n                joinImRoom(room.roomId)\n            }, 10000)\n        } else {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n\n        return () => {\n            clearInterval(timeImJoin.current)\n            timeImJoin.current = null\n        }\n    }, [room.status, imJoin])\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if (typeof window !== 'undefined' && player) {\n                setStyle(videoStyle())\n                clearInterval(timer)\n            }\n        }, 200)\n        return () => {\n            clearInterval(timer)\n        }\n    }, [player])\n    const videoStyle = useCallback(() => {\n        // 1是obs推流，0是手机\n        if (room.roomType === 0) return { width: '57%', margin: '0 auto' }\n        if (room.roomType === 1) return { paddingTop: '0' }\n    }, [room.roomType])\n    return <div className=\"live-share-live-video-m\">\n        <div className=\"video-wrapper\" style={{ ...style }}>\n            <div id=\"id_test_video\" className={`${room && room.roomType === 0 ? 'vertical' : 'horizontal'}`}></div>\n            <div className={`click-cancel-muted ${room && room.roomType === 0 ? 'mobile' : 'pc'}` } style={{ display: mutedBtnShow ? 'block' : 'none' }} onClick={() => {\n                if (!player) return\n                setMutedBtnShow(false)\n            }}>\n                <button>点击取消静音</button>\n            </div>\n        </div>\n    </div>\n}\n","import React from 'react'\nimport './index.scss'\n\nexport default (props) => {\n    const {\n        time // 当前直播间状态\n    } = props\n    const timeZero = (num) => {\n        if (Number(num) < 10) {\n            return `0${num}`\n        } else {\n            return num\n        }\n    }\n    return (\n        <div className=\"im-live-detail-left-live-video-footer\">\n            <div className=\"im-live-detail-left-live-video-footer-text2\">\n                距直播开始：\n                {(timeZero(time.d) && time.d !== 0) && <span>{time.d}天</span>}\n                {timeZero(time.h) && <span>{time.h}时</span>}\n                {timeZero(time.m) && <span>{time.m}分</span>}\n                {timeZero(time.s) && <span>{time.s}秒</span>}\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './index.scss'\nimport vOrange from 'multiPublic/img/v-orange.svg'\nimport vBlue from 'multiPublic/img/v-blue.svg'\n/** @desc 头像，不可跳转 */\nexport default (props) => {\n    const { authorInfo, iconHide } = props\n    let authStyle = null\n    let authName = '普通用户'\n    switch (parseInt(authorInfo.vGrade)) {\n        case 0:\n            authName = '普通用户'\n            break\n        case 1:\n            authStyle = vOrange\n            authName = 'MarsBit 专栏个人认证'\n            break\n        case 2:\n            authStyle = vBlue\n            authName = 'MarsBit 专栏媒体认证'\n            break\n        case 3:\n            authStyle = vBlue\n            authName = 'MarsBit 专栏机构认证'\n            break\n        default:\n            authName = '普通用户'\n    }\n    return <div className=\"author-info-avatar\">\n        <div className=\"author-info-avatar-img\">\n            <img className=\"img-clear-blur avatar-img\" src={authorInfo.iconUrl} alt={authorInfo.nickname} />\n            {authStyle && !iconHide && <span title={authName} className=\"avatar-mark\">\n                <img className=\"img-clear-blur\" src={authStyle} alt={authorInfo.nickName} />\n            </span>}\n        </div>\n        <div className=\"author-info-avatar-text\">\n            <p className=\"live-profile-title\">\n                <span>{authorInfo.nickName}\n                    <span className=\"avatar-role\">\n                        {authorInfo.userType === 0 ? <span className=\"guest-icon\">嘉宾</span> : <span className=\"presenter-icon\">主播</span>}\n                    </span>\n                </span>\n            </p>\n            <p className=\"im-live-list-right-live-good-up-item-text\">\n                {authorInfo.introduce}\n            </p>\n        </div>\n    </div>\n}\n","import React from 'react'\nimport './index.scss'\nimport Profile from './Profile'\nexport default (props) => {\n    return (\n        <div className=\"im-live-list-right-live-good-up-item\">\n            <Profile authorInfo={props} />\n        </div>\n    )\n}\n","import React from 'react'\nimport LiveGuestItem from './LiveGuestItem'\nimport './index.scss'\n\nexport default (props) => {\n    const {\n        guestList,\n        presenterList\n    } = props\n    return (<div className=\"liveshare-m-guest-box\">\n        {\n            presenterList && presenterList.length > 0 && presenterList.map((item, index) => {\n                return (\n                    <div className=\"live-guest-list-item\">\n                        <LiveGuestItem {...item} key={index}/>\n                    </div>\n                )\n            })\n        }\n        {guestList && guestList.length > 0 && guestList.map((item, index) => {\n            return (\n                <div className=\"live-guest-list-item\">\n                    <LiveGuestItem {...item} key={index} />\n                </div>\n            )\n        }) }\n    </div>)\n}\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useSelector, shallowEqual } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\nimport LiveInfo from './LiveInfo'\nimport FooterDownload from 'multiCompsM/Layout/FooterDownload'\nimport DownloadBtn from 'multiCompsM/DownloadBtn'\nimport HotLiveroom from './HotLiveroom'\nimport LiveroomDesc from './LiveroomDesc'\nimport LiveroomVideo from './LiveroomVideo'\nimport NostartButton from './NostartButton'\nimport LiveGuestInfo from './LiveGuestInfo'\nimport './index.scss'\n\nexport default (props) => {\n    const { roomData, popularityList, roomLiveRecommendList } = useSelector((state) => ({\n        roomData: state.live.room,\n        popularityList: state.live.popularityList,\n        roomLiveRecommendList: state.live.roomLiveRecommendList.inforList\n    }), shallowEqual)\n    const livelinkid = props.match.params.roomId\n    const { t } = useTranslation()\n    // 当前直播间状态 0.未直播 1.直播中 2.回放中\n    const [liveState, setLiveState] = useState(roomData.status)\n    const [countTime, setCountTime] = useState({\n        d: 0,\n        h: 0,\n        m: 0,\n        s: 0\n    })\n    const getCountTimeText = useCallback(() => {\n        let nowTime = new Date().getTime()\n        let endTime = Number(roomData.beginTime)\n        let leftTime = endTime - nowTime\n        let obj = {\n            d: 0,\n            h: 0,\n            m: 0,\n            s: 0\n        }\n        if (leftTime >= 0) {\n            obj.d = Math.floor(leftTime / 1000 / 60 / 60 / 24)\n            obj.h = Math.floor(leftTime / 1000 / 60 / 60 % 24)\n            obj.m = Math.floor(leftTime / 1000 / 60 % 60)\n            obj.s = Math.floor(leftTime / 1000 % 60)\n        } else {\n            // 跳走，reload\n        }\n\n        setCountTime(obj)\n\n        if (roomData.status === 0) {\n            setTimeout(getCountTimeText, 1000)\n        }\n    }, [])\n    const [isBoxShow, setIsBoxShow] = useState(0)\n    useEffect(() => {\n        if (roomData.status === 0) {\n            setLiveState(0)\n        } else if (roomData.status === 1) {\n            setLiveState(1)\n        } else if (roomData.status === 2) {\n            setLiveState(2)\n        }\n    }, [roomData])\n    useEffect(() => {\n        getCountTimeText()\n    }, [])\n    const changeBoxShow = (boxShow) => {\n        setIsBoxShow(boxShow)\n    }\n\n    return <div id=\"hxwrap\">\n        <FooterDownload type=\"liveshare\" id={livelinkid}/>\n        <div className='hxwrap'>\n            <div className=\"live-share-m\">\n                <div className=\"live-share-m-info\">\n                    <div className=\"live-share-m-content\" id=\"live-share-m-content\">\n                        {liveState === 0 ? <div className=\"readyPic\">\n                            <img className=\"live-share-m-ready-coverPic\" src={roomData.coverPicUrl}/>\n                            <div className=\"container\">\n                                <div className=\"playerWrap\">\n                                    <div className=\"player\"></div>\n                                </div>\n                            </div>\n                        </div> : <LiveroomVideo changeBoxShow={changeBoxShow} />}\n                        {\n                            roomData && <div className=\"live-background\" style={{ background: `url(${roomData.coverPicUrl})` }} />\n                        }\n                    </div>\n                    <div className=\"live-share-m-info\">\n                        <LiveInfo {...roomData} pop={popularityList[0]}/>\n                        {liveState === 0 && <div className=\"live-share-m-brief\">\n                            <div><span className=\"live-share-box-title\"></span>主播与嘉宾</div>\n                            <LiveGuestInfo {...roomData} /></div>}\n                    </div>\n                </div>\n                <div className=\"live-share-m-brief\">\n                    <div><span className=\"live-share-box-title\"></span>{t('live_brief')}</div>\n                    <LiveroomDesc {...roomData } />\n                </div>\n                <div className=\"live-share-m-hot-box\">\n                    <div><span className=\"live-share-box-title\"></span>热门直播</div>\n                    {roomLiveRecommendList.length > 0 && <HotLiveroom listData={roomLiveRecommendList} />}\n                </div>\n            </div>\n        </div>\n        {isBoxShow !== 0 ? <div></div> : null }\n        {liveState ? <DownloadBtn/> : <NostartButton { ...roomData } time={countTime} />}\n    </div>\n}\n"],"sourceRoot":""}