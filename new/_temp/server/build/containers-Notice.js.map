{"version":3,"sources":["webpack:///./_multiappsharing/components/Pagination/index.js","webpack:///./assets/components/NoticeList/index.js","webpack:///./assets/components/DataFocus/index.js","webpack:///./assets/components/DataFocus/images/update-icon.png","webpack:///./assets/components/DataFocus/images/newbi-icon.png","webpack:///./assets/components/DataFocus/images/bourse-icon.png","webpack:///./assets/containers/Notice/images/text-icon.png","webpack:///./assets/containers/Notice/noticeCont/index.js","webpack:///./assets/containers/Notice/index.js"],"names":["Pagination","props","currentPage","totalData","pageSize","pageChange","prevTxt","nextTxt","prevNextCount","prevNextHide","dotStr","prevNextNum","parseInt","totalPage","Math","ceil","totalPagePrev","useRef","useState","curPage","setCurPage","pageArr","setPageArr","useEffect","getStartAndEnd","useCallback","start","end","pageClick","initArr","itemArr","lastArr","i","push","concat","current","map","item","index","defaultProps","propTypes","number","isRequired","NoticeList","title","dataArr","id","noticeId","exchangeIconUrl","exchangeSymbol","formatPublishTime","publishTime","DataFocus","UpdataIcon","dataobj","todayUpdateCount","newbiIcon","sevenDayNewCoin","bourseIcon","exchangeCount","NoticeCont","dispatch","bourseObj","noticeObj","bourseSymbol","setBourseSymbol","bourseType","setBourseType","searchVal","setSearchVal","getNoticeList","type","search","page","getFiltrateSymbol","e","val","target","value","getAttribute","nIndex","obj","exchange","symbol","optionSelected","document","getElementById","selected","getFiltrateType","optionSelectedType","getSearchVal","searchBtn","searchEnter","event","keyCode","tagName","toLowerCase","trim","isArray","name","inforList","exchangeName","typeName","orignUrl","originalIcon","display","length","recordCount","mapStateToProps","state","notice","connect","Notice","statisticsObj","importantExchangeNoticeList","newCoinOnlineExchangeNoticeList"],"mappings":"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","file":"containers-Notice.js","sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { number } from 'prop-types'\n\nimport './index.scss'\n\nconst Pagination = (props) => {\n    const {\n        currentPage, // 默认页面\n        totalData, // 数据总条数\n        pageSize, // 每页显示条数\n        pageChange, // 点击时回调函数，返回curPage\n        prevTxt, // 上一页按钮文字\n        nextTxt, // 下一页按钮文字\n        prevNextCount, // 当前页前后分页个数\n        prevNextHide // 是否显示上一页下一页\n    } = props\n\n    const dotStr = '•••'\n    const prevNextNum = parseInt(prevNextCount)\n    const totalPage = Math.ceil(parseInt(totalData) / parseInt(pageSize))\n    const totalPagePrev = useRef(totalPage)\n    const [curPage, setCurPage] = useState(parseInt(currentPage))\n    const [pageArr, setPageArr] = useState([])\n\n    // props更新时，useState数据不会更新。故在此currentPage更新时，重新设置curPage\n    useEffect(() => {\n        setCurPage(parseInt(currentPage))\n    }, [currentPage])\n\n    /** @desc 根据当前页两边页数计算: 中间开始于结束数字 */\n    const getStartAndEnd = useCallback(() => {\n        let start = 0\n        let end = 0\n        if (totalPage > prevNextNum * 2 + 3) { // 总页数大于前后个数+当前页+首尾页，需要省略\n            if (curPage < prevNextNum * 2) { // curr=1,2,3页\n                start = 2\n                end = start + 3\n            } else if (curPage > totalPage - prevNextNum * 2) { // curr=47,48,49,50\n                end = totalPage - 1\n                start = end - 3\n            } else { // 如curr=45  分页1...43 44 45 46 47 ...50\n                start = curPage - 2\n                end = curPage + 2\n            }\n        } else {\n            start = 2\n            end = totalPage - 1\n        }\n\n        return {\n            start: start,\n            end: end\n        }\n    }, [curPage, totalPage])\n\n    /** @desc 点击设置当前页，并调用props回调函数 */\n    const pageClick = useCallback((curPage) => {\n        pageChange(curPage)\n        setCurPage(curPage)\n    }, [curPage, totalPage])\n\n    /** @desc 根据curPage自动计算页面显示数组 */\n    useEffect(() => {\n        let start = getStartAndEnd().start\n        let end = getStartAndEnd().end\n        const initArr = [1]\n        const itemArr = []\n        let lastArr = []\n        for (let i = start; i <= end; i++) {\n            itemArr.push(i)\n        }\n        if (start === 2) {\n            if (end === totalPage - 1) {\n                lastArr = initArr.concat(itemArr)\n            } else {\n                lastArr = initArr.concat(itemArr).concat([dotStr])\n            }\n        } else {\n            if (end === totalPage - 1) {\n                lastArr = initArr.concat([dotStr]).concat(itemArr)\n            } else {\n                lastArr = initArr.concat([dotStr]).concat(itemArr).concat([dotStr])\n            }\n        }\n\n        if (totalPagePrev.current !== totalPage) {\n            totalPagePrev.current = totalPage\n            setCurPage(1)\n        }\n\n        if (totalPage === 1) {\n            setPageArr(lastArr)\n        } else {\n            setPageArr(lastArr.concat([totalPage]))\n        }\n    }, [curPage, totalPage])\n\n    return <div className=\"react-pagination\">\n        {!prevNextHide && <a\n            className={`prev ${curPage === 1 && 'disabled'}`}\n            title={prevTxt}\n            onClick={() => curPage > 1 && pageClick(curPage - 1)}>\n            {prevTxt}\n        </a>}\n        {pageArr.map(function (item, index) {\n            return <a key={index} className={`${curPage === item && 'active'}`} onClick={() => {\n                if (item === dotStr) return\n                pageClick(item)\n            }}>{item}</a>\n        })}\n        {!prevNextHide && <a\n            className={`next ${curPage === totalPage && 'disabled'}`}\n            title={nextTxt}\n            onClick={() => curPage < totalPage && pageClick(curPage + 1)}>\n            {nextTxt}\n        </a>}\n    </div>\n}\n\nPagination.defaultProps = {\n    prevTxt: '上一页',\n    nextTxt: '下一页',\n    prevNextCount: 2,\n    prevNextHide: false,\n    currentPage: 1\n}\n\nPagination.propTypes = {\n    totalData: number.isRequired,\n    pageSize: number.isRequired\n}\n\nexport default Pagination\n","import React from 'react'\nimport { formatPublishTime } from 'multiPublic/index'\nimport { Link } from 'react-router-dom'\nimport './index.scss'\n\nconst NoticeList = (props) => {\n    return <div className=\"notice-list\">\n        <h6>{props.title}</h6>\n        {\n            props.dataArr.map(item => {\n                return <div className=\"item\" key={item.id}>\n                    <div className=\"clearfix\">\n                        <Link to={`/noticeDetail/${item.noticeId}`} target=\"_blank\">\n                            <p><img src={item.exchangeIconUrl} alt=\"\"/>{item.exchangeSymbol}</p>\n                            <span>{formatPublishTime(item.publishTime, '')}</span>\n                        </Link>\n                    </div>\n                    <Link to={`/noticeDetail/${item.noticeId}`} target=\"_blank\">{item.title}</Link>\n                </div>\n            })\n        }\n    </div>\n}\n\nexport default NoticeList\n","import React from 'react'\nimport './index.scss'\nimport UpdataIcon from './images/update-icon.png'\nimport newbiIcon from './images/newbi-icon.png'\nimport bourseIcon from './images/bourse-icon.png'\n\nconst DataFocus = (props) => {\n    return <div className=\"data-focus clearfix\">\n        <div className=\"focus-item\">\n            <img src={UpdataIcon} alt=\"\"/>\n            <p>{props.dataobj.todayUpdateCount}</p>\n            <span>今日更新</span>\n        </div>\n        <div className=\"focus-item\">\n            <img src={newbiIcon} alt=\"\"/>\n            <p>{props.dataobj.sevenDayNewCoin}</p>\n            <span>一周上新</span>\n        </div>\n        <div className=\"focus-item\">\n            <img src={bourseIcon} alt=\"\"/>\n            <p>{props.dataobj.exchangeCount}</p>\n            <span>收录平台</span>\n        </div>\n        <div className=\"focus-item\">\n            <a href=\"https://jinshuju.net/f/U21cuJ\" target=\"_blank\">申请收录</a>\n        </div>\n    </div>\n}\n\nexport default DataFocus\n","module.exports = __webpack_public_path__ + \"update-icon-4095d99b.png\";","module.exports = __webpack_public_path__ + \"newbi-icon-2a29217d.png\";","module.exports = __webpack_public_path__ + \"bourse-icon-c07be9d1.png\";","module.exports = __webpack_public_path__ + \"text-icon-2fa40eea.png\";","import React, { useEffect, useState, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getNoticeList } from '../../../redux/actions/notice'\nimport { isArray, formatPublishTime } from 'multiPublic/index'\nimport Pagination from 'multiComps/Pagination'\nimport './index.scss'\nimport originalIcon from '../images/text-icon.png'\nimport { trim } from '../../../../_multiappsharing/public'\n\nconst NoticeCont = (props) => {\n    const { dispatch, bourseObj, noticeObj } = props\n    const [bourseSymbol, setBourseSymbol] = useState('')\n    const [bourseType, setBourseType] = useState('')\n    const [searchVal, setSearchVal] = useState('')\n    const [curPage, setCurPage] = useState(1)\n    useEffect(() => {\n        dispatch(getNoticeList({\n            exchangeSymbol: bourseSymbol,\n            type: bourseType,\n            search: '',\n            page: curPage,\n            pageSize: 20\n        }))\n    }, [curPage])\n    const getFiltrateSymbol = useCallback((e) => {\n        let val = ''\n        if (e.target.value) {\n            val = e.target.value\n        } else if (e.target.getAttribute('datasymbol')) {\n            val = e.target.getAttribute('datasymbol')\n            let nIndex = 0\n            bourseObj.obj.exchange.map((item, index) => {\n                if (item.symbol === val) {\n                    nIndex = index\n                }\n            })\n            let optionSelected = document.getElementById(`bourse_${nIndex}`)\n            optionSelected.selected = true\n        }\n        setBourseSymbol(val)\n        dispatch(getNoticeList({\n            exchangeSymbol: val,\n            type: bourseType,\n            search: searchVal\n        }))\n    })\n    const getFiltrateType = useCallback((e) => {\n        let val = ''\n        if (e.target.value) {\n            val = e.target.value\n        } else if (e.target.getAttribute('datatype')) {\n            val = e.target.getAttribute('datatype')\n            let nIndex = 0\n            bourseObj.obj.type.map((item, index) => {\n                if (item.id === parseInt(val)) {\n                    nIndex = index\n                }\n            })\n            let optionSelectedType = document.getElementById(`type_${nIndex}`)\n            optionSelectedType.selected = true\n        }\n        setBourseType(val)\n        dispatch(getNoticeList({\n            exchangeSymbol: bourseSymbol,\n            type: val,\n            search: searchVal\n        }))\n    })\n    const getSearchVal = useCallback((e) => {\n        let val = e.target.value\n        setSearchVal(val)\n    })\n    const searchBtn = useCallback((e) => {\n        dispatch(getNoticeList({\n            exchangeSymbol: '',\n            type: '',\n            search: searchVal\n        }))\n    })\n    const searchEnter = useCallback((event) => {\n        if (event.keyCode && event.keyCode !== 13) return false\n        let val = event.target.tagName.toLowerCase() !== 'input' ? searchVal : event.target.value\n        if (trim(val) !== '') {\n            dispatch(getNoticeList({\n                exchangeSymbol: '',\n                type: '',\n                search: val\n            }))\n        }\n    }, [])\n    return <div className=\"notice-cont-box\">\n        <div className=\"cont-type\">\n            <select className=\"cont-option-type\" id=\"bourseType\" onChange={getFiltrateSymbol}>\n                {\n                    isArray(bourseObj.obj.exchange) && bourseObj.obj.exchange.map((item, index) => {\n                        return <option key={index} value={item.symbol} id={`bourse_${index}`}>{item.name}</option>\n                    })\n                }\n            </select>\n            <select className=\"cont-option-type\" id=\"noticeType\" onChange={getFiltrateType}>\n                {\n                    isArray(bourseObj.obj.type) && bourseObj.obj.type.map((item, index) => {\n                        return <option key={index} value={item.id} id={`type_${index}`}>{item.name}</option>\n                    })\n                }\n            </select>\n            <div className=\"notice-input-search\">\n                <input onChange={getSearchVal} type=\"text\" onKeyDown={searchEnter} placeholder=\"公告搜索\"/>\n                <span onClick={searchBtn}></span>\n            </div>\n        </div>\n        <div className=\"notice-cont-list clearfix\">\n            <div className=\"list-header clearfix\">\n                <span>平台</span>\n                <span>类型</span>\n                <span>内容</span>\n                <span>时间</span>\n                <span>原文</span>\n            </div>\n            <div className=\"cont-tbody\">\n                {\n                    isArray(noticeObj.obj.inforList) && noticeObj.obj.inforList.map(item => {\n                        return <div className=\"cont-item\" key={item.id}>\n                            <a className=\"bourse-name\" onClick={getFiltrateSymbol} datasymbol={item.exchangeSymbol}>\n                                <img src={item.exchangeIconUrl} alt=\"\"/>\n                                {item.exchangeName}\n                            </a>\n                            <a className=\"item-type\" onClick={getFiltrateType} datatype={item.type}>{item.typeName}</a>\n                            <Link to={`/noticeDetail/${item.noticeId}`} className=\"item-cont\" target=\"_blank\">{item.title}</Link>\n                            <Link to={`/noticeDetail/${item.noticeId}`} className=\"item-time\" target=\"_blank\">{formatPublishTime(item.publishTime, '')}</Link>\n                            <a href={item.orignUrl} className=\"item-link\" target=\"_blank\"><img src={originalIcon} alt={item.title}/></a>\n                        </div>\n                    })\n                }\n            </div>\n            <div\n                className=\"pagination\"\n                style={{ display: (noticeObj.obj.inforList.length === 0 || noticeObj.obj.recordCount < noticeObj.pageSize) && 'none' }}>\n                <Pagination\n                    currentPage={noticeObj.obj.currentPage}\n                    pageSize={noticeObj.obj.pageSize}\n                    totalData={noticeObj.obj.recordCount}\n                    pageChange={(curPage) => setCurPage(curPage)}\n                />\n            </div>\n        </div>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    noticeObj: state.notice.noticeObj,\n    bourseObj: state.notice.bourseObj\n})\n\nexport default connect(mapStateToProps)(NoticeCont)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport NoticeCont from './noticeCont'\nimport NoticeList from '../../components/NoticeList'\nimport DataFocus from '../../components/DataFocus'\nimport { isArray } from 'multiPublic/index'\nimport { Link } from 'react-router-dom'\nimport './index.scss'\n\nconst Notice = (props) => {\n    const { statisticsObj } = props\n    return <div className='notice-cont'>\n        <div className=\"notice-nav\">\n            <div className=\"nav-map\">\n                <Link to={`/flash`} target=\"_blank\">快讯</Link>\n                <a className=\"active\">公告</a>\n                <a style={{ display: 'none' }}>微博/Twitter</a>\n            </div>\n        </div>\n        <div className=\"notice-map-box clearfix\">\n            <div className=\"notice-map-left\">\n                <NoticeCont/>\n            </div>\n            <div className=\"notice-map-right\">\n                <DataFocus dataobj={statisticsObj}/>\n                <NoticeList title={'重要公告'} dataArr={isArray(statisticsObj.importantExchangeNoticeList) && statisticsObj.importantExchangeNoticeList}/>\n                <NoticeList title={'新币上线'} dataArr={isArray(statisticsObj.newCoinOnlineExchangeNoticeList) && statisticsObj.newCoinOnlineExchangeNoticeList}/>\n            </div>\n        </div>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    statisticsObj: state.notice.statisticsObj.obj\n})\n\nexport default connect(mapStateToProps)(Notice)\n"],"sourceRoot":""}