{"version":3,"sources":["webpack:///./_multiappsharing/components/FeatureListItem/index.js","webpack:///./assets/containers/Feature/index.js","webpack:///./_multiappsharing/public/img/feature-backImg.png","webpack:///./_multiappsharing/components/Pagination/index.js"],"names":["FeatureListItem","props","item","topic","contentList","featureLink","mixUrl","news","concat","id","newsLink","url","react_default","a","createElement","className","key","href","title","topicName","target","src","newSmallPcImgSrc","pcImgSrc","featureBackImg","alt","propTypes","object","isRequired","connect","state","featureList","multi","dispatch","t","useTranslation","_useState","useState","_useState2","slicedToArray_default","curPage","setCurPage","_useState3","_useState4","orderType","setOrderType","mounted","useRef","useEffect","current","getFeatureList","currentPage","pageSize","then","res","code","Toast","index","msg","err","console","log","info","onClick","recordCount","isArray","inforList","map","_multiappsharing_components_FeatureListItem","style","display","length","Pagination","totalData","pageChange","module","exports","__webpack_require__","p","prevTxt","nextTxt","prevNextCount","prevNextHide","prevNextNum","parseInt","totalPage","Math","ceil","totalPagePrev","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","pageArr","setPageArr","getStartAndEnd","useCallback","start","end","pageClick","initArr","itemArr","lastArr","i","push","react__WEBPACK_IMPORTED_MODULE_1___default","defaultProps","number"],"mappings":"qPAOMA,UAAkB,SAACC,GAAU,IACvBC,EAASD,EAATC,KACAC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,EAAcC,IAAOC,KAAP,YAAAC,OAAwBL,EAAMM,KAC5CC,EAAWN,GAAeA,EAAY,GAAGO,IAC/C,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAA4BC,IAAKb,EAAMM,IACxDG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOE,KAAMZ,EAAaa,MAAOf,EAAMgB,UAAWC,OAAO,UAClER,EAAAC,EAAAC,cAAA,OAAKO,IAAKlB,EAAMmB,kBAAoBnB,EAAMoB,UAAYC,IAAgBC,IAAKtB,EAAMgB,YACjFP,EAAAC,EAAAC,cAAA,SAAIX,EAAMgB,YAEbf,GAAeQ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,OAAOE,KAAMP,EAAUQ,MAAOd,EAAY,GAAGc,MAAOE,OAAO,UACnFhB,EAAY,GAAGc,WAMhClB,EAAgB0B,UAAY,CACxBxB,KAAMyB,SAAOC,YAGF5B,QCwCA6B,sBAJS,SAACC,GAAD,MAAY,CAChCC,YAAaD,EAAME,MAAMzB,KAAKwB,cAGnBF,CAzDC,SAAC5B,GAAU,IACf8B,EAA0B9B,EAA1B8B,YAAaE,EAAahC,EAAbgC,SACbC,EAAMC,cAAND,EAFeE,EAIOC,mBAAS,GAJhBC,EAAAC,IAAAH,EAAA,GAIhBI,EAJgBF,EAAA,GAIPG,EAJOH,EAAA,GAAAI,EAKWL,mBAAS,GALpBM,EAAAJ,IAAAG,EAAA,GAKhBE,EALgBD,EAAA,GAKLE,EALKF,EAAA,GAMjBG,EAAUC,kBAAO,GAqBvB,OAnBAC,oBAAU,WACFF,EAAQG,QACRhB,EAASiB,YAAe,CACpBC,YAAaX,EACbY,SAAU,GACVR,UAAWA,GACZ,WAAWS,KAAK,SAAUC,GACR,IAAbA,EAAIC,MACJC,IAAMC,MAAMH,EAAII,OANxB,MAQS,SAAUC,GACfC,QAAQC,IAAIF,GACZH,IAAMM,KAAK,cAGfhB,EAAQG,SAAU,GAEvB,CAACT,EAASI,IAENhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAQiD,QAAS,kBAAMlB,EAAa,IAAI9B,UAAS,GAAAP,OAAmB,IAAdoC,GAAmB,WAAaV,EAAE,wBACxFtB,EAAAC,EAAAC,cAAA,UAAQiD,QAAS,kBAAMlB,EAAa,IAAI9B,UAAS,GAAAP,OAAmB,IAAdoC,GAAmB,WAAaV,EAAE,sBAE5FtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVmB,EAAE,mBAAmBtB,EAAAC,EAAAC,cAAA,YAAOiB,EAAYiC,aAAoB9B,EAAE,oBAGvEtB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQkD,YAAQlC,EAAYmC,YAAcnC,EAAYmC,UAAUC,IAAI,SAAUjE,EAAMuD,GAC9F,OAAO7C,EAAAC,EAAAC,cAACsD,EAAD,CAAiBlE,KAAMA,EAAMc,IAAKd,EAAKC,MAAMM,QAGxDG,EAAAC,EAAAC,cAAA,OACIC,UAAU,aACVsD,MAAO,CAAEC,SAA2C,IAAjCvC,EAAYmC,UAAUK,QAAgBxC,EAAYiC,YAAcjC,EAAYqB,WAAa,SAC5GxC,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACIpB,SAAUrB,EAAYqB,SACtBqB,UAAW1C,EAAYiC,YACvBU,WAAY,SAAClC,GAAD,OAAaC,EAAWD,+BC3DpDmC,EAAAC,QAAiBC,EAAAC,EAAuB,8GCKlCN,UAAa,SAACvE,GAAU,IAEtBkD,EAQAlD,EARAkD,YACAsB,EAOAxE,EAPAwE,UACArB,EAMAnD,EANAmD,SACAsB,EAKAzE,EALAyE,WACAK,EAIA9E,EAJA8E,QACAC,EAGA/E,EAHA+E,QACAC,EAEAhF,EAFAgF,cACAC,EACAjF,EADAiF,aAIEC,EAAcC,SAASH,GACvBI,EAAYC,KAAKC,KAAKH,SAASX,GAAaW,SAAShC,IACrDoC,EAAgBzC,iBAAOsC,GAfHjD,EAgBIC,mBAAS+C,SAASjC,IAhBtBb,EAAAmD,IAAArD,EAAA,GAgBnBI,EAhBmBF,EAAA,GAgBVG,EAhBUH,EAAA,GAAAI,EAiBIL,mBAAS,IAjBbM,EAAA8C,IAAA/C,EAAA,GAiBnBgD,EAjBmB/C,EAAA,GAiBVgD,EAjBUhD,EAAA,GAoB1BK,oBAAU,WACNP,EAAW2C,SAASjC,KACrB,CAACA,IAGJ,IAAMyC,EAAiBC,sBAAY,WAC/B,IAAIC,EAAQ,EACRC,EAAM,EAiBV,OAhBIV,EAA0B,EAAdF,EAAkB,EAC1B3C,EAAwB,EAAd2C,EAEVY,GADAD,EAAQ,GACM,EACPtD,EAAU6C,EAA0B,EAAdF,EAE7BW,GADAC,EAAMV,EAAY,GACJ,GAEdS,EAAQtD,EAAU,EAClBuD,EAAMvD,EAAU,IAGpBsD,EAAQ,EACRC,EAAMV,EAAY,GAGf,CACHS,MAAOA,EACPC,IAAKA,IAEV,CAACvD,EAAS6C,IAGPW,EAAYH,sBAAY,SAACrD,GAC3BkC,EAAWlC,GACXC,EAAWD,IACZ,CAACA,EAAS6C,IAsCb,OAnCArC,oBAAU,WAMN,IALA,IAAI8C,EAAQF,IAAiBE,MACzBC,EAAMH,IAAiBG,IACrBE,EAAU,CAAC,GACXC,EAAU,GACZC,EAAU,GACLC,EAAIN,EAAOM,GAAKL,EAAKK,IAC1BF,EAAQG,KAAKD,GAITD,EAFM,IAAVL,EACIC,IAAQV,EAAY,EACVY,EAAQzF,OAAO0F,GAEfD,EAAQzF,OAAO0F,GAAS1F,OAAO,CA1DtC,QA6DHuF,IAAQV,EAAY,EACVY,EAAQzF,OAAO,CA9DtB,QA8DgCA,OAAO0F,GAEhCD,EAAQzF,OAAO,CAhEtB,QAgEgCA,OAAO0F,GAAS1F,OAAO,CAhEvD,QAoEPgF,EAAcvC,UAAYoC,IAC1BG,EAAcvC,QAAUoC,EACxB5C,EAAW,IAIXkD,EADc,IAAdN,EACWc,EAEAA,EAAQ3F,OAAO,CAAC6E,MAEhC,CAAC7C,EAAS6C,IAENiB,EAAAzF,EAAAC,cAAA,OAAKC,UAAU,qBAChBmE,GAAgBoB,EAAAzF,EAAAC,cAAA,KACdC,UAAS,QAAAP,OAAsB,IAAZgC,GAAiB,YACpCtB,MAAO6D,EACPhB,QAAS,kBAAMvB,EAAU,GAAKwD,EAAUxD,EAAU,KACjDuC,GAEJW,EAAQvB,IAAI,SAAUjE,EAAMuD,GACzB,OAAO6C,EAAAzF,EAAAC,cAAA,KAAGE,IAAKyC,EAAO1C,UAAS,GAAAP,OAAKgC,IAAYtC,GAAQ,UAAY6D,QAAS,WAxFtE,QAyFC7D,GACJ8F,EAAU9F,KACVA,MAENgF,GAAgBoB,EAAAzF,EAAAC,cAAA,KACdC,UAAS,QAAAP,OAAUgC,IAAY6C,GAAa,YAC5CnE,MAAO8D,EACPjB,QAAS,kBAAMvB,EAAU6C,GAAaW,EAAUxD,EAAU,KACzDwC,MAKbR,EAAW+B,aAAe,CACtBxB,QAAS,MACTC,QAAS,MACTC,cAAe,EACfC,cAAc,EACd/B,YAAa,GAGjBqB,EAAW9C,UAAY,CACnB+C,UAAW+B,SAAO5E,WAClBwB,SAAUoD,SAAO5E,YAGN4C","file":"containers-Feature-0c7eda86.js","sourcesContent":["import React from 'react'\nimport { object } from 'prop-types'\nimport { mixUrl } from 'multiPublic/index'\nimport featureBackImg from '../../public/img/feature-backImg.png'\n\nimport './index.scss'\n\nconst FeatureListItem = (props) => {\n    const { item } = props\n    const { topic, contentList } = item\n    const featureLink = mixUrl.news(`/feature/${topic.id}`)\n    const newsLink = contentList && contentList[0].url\n    return <li className=\"feature-list-item-wrapper\" key={topic.id}>\n        <div className=\"content\">\n            <a className=\"info\" href={featureLink} title={topic.topicName} target=\"_blank\">\n                <img src={topic.newSmallPcImgSrc || topic.pcImgSrc || featureBackImg} alt={topic.topicName}/>\n                <p>{topic.topicName}</p>\n            </a>\n            {contentList && <a className=\"news\" href={newsLink} title={contentList[0].title} target=\"_blank\">\n                {contentList[0].title}\n            </a>}\n        </div>\n    </li>\n}\n\nFeatureListItem.propTypes = {\n    item: object.isRequired\n}\n\nexport default FeatureListItem\n","import React, { useState, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nimport './index.scss'\n\nimport { isArray } from 'multiPublic/index'\nimport Pagination from 'multiComps/Pagination'\nimport { getFeatureList } from 'multiRedux/actions/news'\nimport Toast from 'multiComps/Toast'\nimport FeatureListItem from 'multiComps/FeatureListItem'\n\nconst Feature = (props) => {\n    const { featureList, dispatch } = props\n    const { t } = useTranslation()\n\n    const [curPage, setCurPage] = useState(1)\n    const [orderType, setOrderType] = useState(0)\n    const mounted = useRef(false) // 判断是否为第一次运行：didMounted\n\n    useEffect(() => {\n        if (mounted.current) {\n            dispatch(getFeatureList({\n                currentPage: curPage,\n                pageSize: 15,\n                orderType: orderType\n            }, 'isMore')).then(function (res) {\n                if (res.code !== 1) {\n                    Toast.index(res.msg)\n                }\n            }).catch(function (err) {\n                console.log(err)\n                Toast.info('获取专题列表错误')\n            })\n        } else {\n            mounted.current = true\n        }\n    }, [curPage, orderType])\n\n    return <div className=\"feature-list-wrapper\">\n        <div className=\"func\">\n            <div className=\"sort\">\n                <button onClick={() => setOrderType(0)} className={`${orderType === 0 && 'active'}`}>{t('feature_update_time')}</button>\n                <button onClick={() => setOrderType(1)} className={`${orderType === 1 && 'active'}`}>{t('feature_set_time')}</button>\n            </div>\n            <div className=\"number\">\n                {t('feature_setting')}<span>{featureList.recordCount}</span>{t('feature_zt_num')}\n            </div>\n        </div>\n        <ul className=\"list\">{isArray(featureList.inforList) && featureList.inforList.map(function (item, index) {\n            return <FeatureListItem item={item} key={item.topic.id} />\n        })}\n        </ul>\n        <div\n            className=\"pagination\"\n            style={{ display: (featureList.inforList.length === 0 || featureList.recordCount < featureList.pageSize) && 'none' }}>\n            <Pagination\n                pageSize={featureList.pageSize}\n                totalData={featureList.recordCount}\n                pageChange={(curPage) => setCurPage(curPage)}\n            />\n        </div>\n    </div>\n}\n\nconst mapStateToProps = (state) => ({\n    featureList: state.multi.news.featureList\n})\n\nexport default connect(mapStateToProps)(Feature)\n","module.exports = __webpack_public_path__ + \"feature-backImg-d818821e.png\";","import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { number } from 'prop-types'\n\nimport './index.scss'\n\nconst Pagination = (props) => {\n    const {\n        currentPage, // 默认页面\n        totalData, // 数据总条数\n        pageSize, // 每页显示条数\n        pageChange, // 点击时回调函数，返回curPage\n        prevTxt, // 上一页按钮文字\n        nextTxt, // 下一页按钮文字\n        prevNextCount, // 当前页前后分页个数\n        prevNextHide // 是否显示上一页下一页\n    } = props\n\n    const dotStr = '•••'\n    const prevNextNum = parseInt(prevNextCount)\n    const totalPage = Math.ceil(parseInt(totalData) / parseInt(pageSize))\n    const totalPagePrev = useRef(totalPage)\n    const [curPage, setCurPage] = useState(parseInt(currentPage))\n    const [pageArr, setPageArr] = useState([])\n\n    // props更新时，useState数据不会更新。故在此currentPage更新时，重新设置curPage\n    useEffect(() => {\n        setCurPage(parseInt(currentPage))\n    }, [currentPage])\n\n    /** @desc 根据当前页两边页数计算: 中间开始于结束数字 */\n    const getStartAndEnd = useCallback(() => {\n        let start = 0\n        let end = 0\n        if (totalPage > prevNextNum * 2 + 3) { // 总页数大于前后个数+当前页+首尾页，需要省略\n            if (curPage < prevNextNum * 2) { // curr=1,2,3页\n                start = 2\n                end = start + 3\n            } else if (curPage > totalPage - prevNextNum * 2) { // curr=47,48,49,50\n                end = totalPage - 1\n                start = end - 3\n            } else { // 如curr=45  分页1...43 44 45 46 47 ...50\n                start = curPage - 2\n                end = curPage + 2\n            }\n        } else {\n            start = 2\n            end = totalPage - 1\n        }\n\n        return {\n            start: start,\n            end: end\n        }\n    }, [curPage, totalPage])\n\n    /** @desc 点击设置当前页，并调用props回调函数 */\n    const pageClick = useCallback((curPage) => {\n        pageChange(curPage)\n        setCurPage(curPage)\n    }, [curPage, totalPage])\n\n    /** @desc 根据curPage自动计算页面显示数组 */\n    useEffect(() => {\n        let start = getStartAndEnd().start\n        let end = getStartAndEnd().end\n        const initArr = [1]\n        const itemArr = []\n        let lastArr = []\n        for (let i = start; i <= end; i++) {\n            itemArr.push(i)\n        }\n        if (start === 2) {\n            if (end === totalPage - 1) {\n                lastArr = initArr.concat(itemArr)\n            } else {\n                lastArr = initArr.concat(itemArr).concat([dotStr])\n            }\n        } else {\n            if (end === totalPage - 1) {\n                lastArr = initArr.concat([dotStr]).concat(itemArr)\n            } else {\n                lastArr = initArr.concat([dotStr]).concat(itemArr).concat([dotStr])\n            }\n        }\n\n        if (totalPagePrev.current !== totalPage) {\n            totalPagePrev.current = totalPage\n            setCurPage(1)\n        }\n\n        if (totalPage === 1) {\n            setPageArr(lastArr)\n        } else {\n            setPageArr(lastArr.concat([totalPage]))\n        }\n    }, [curPage, totalPage])\n\n    return <div className=\"react-pagination\">\n        {!prevNextHide && <a\n            className={`prev ${curPage === 1 && 'disabled'}`}\n            title={prevTxt}\n            onClick={() => curPage > 1 && pageClick(curPage - 1)}>\n            {prevTxt}\n        </a>}\n        {pageArr.map(function (item, index) {\n            return <a key={index} className={`${curPage === item && 'active'}`} onClick={() => {\n                if (item === dotStr) return\n                pageClick(item)\n            }}>{item}</a>\n        })}\n        {!prevNextHide && <a\n            className={`next ${curPage === totalPage && 'disabled'}`}\n            title={nextTxt}\n            onClick={() => curPage < totalPage && pageClick(curPage + 1)}>\n            {nextTxt}\n        </a>}\n    </div>\n}\n\nPagination.defaultProps = {\n    prevTxt: '上一页',\n    nextTxt: '下一页',\n    prevNextCount: 2,\n    prevNextHide: false,\n    currentPage: 1\n}\n\nPagination.propTypes = {\n    totalData: number.isRequired,\n    pageSize: number.isRequired\n}\n\nexport default Pagination\n"],"sourceRoot":""}